// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tide_chart.proto

public final class TideChart {
  private TideChart() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TideChartPropertyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartProperty)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * property field name
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * property field name
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * property value type
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * property value type
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * property value as a string
     * </pre>
     *
     * <code>string value = 3;</code>
     */
    java.lang.String getValue();
    /**
     * <pre>
     * property value as a string
     * </pre>
     *
     * <code>string value = 3;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getPropsList();
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    TideChart.TideChartProperty getProps(int index);
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList();
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * a recursive data type that provides configuration values for graphs, regions and nodes
   * </pre>
   *
   * Protobuf type {@code TideChartProperty}
   */
  public  static final class TideChartProperty extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartProperty)
      TideChartPropertyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartProperty.newBuilder() to construct.
    private TideChartProperty(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartProperty() {
      name_ = "";
      type_ = "";
      value_ = "";
      props_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartProperty();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartProperty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                props_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000001;
              }
              props_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartProperty_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartProperty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartProperty.class, TideChart.TideChartProperty.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * property field name
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * property field name
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * property value type
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * property value type
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private volatile java.lang.Object value_;
    /**
     * <pre>
     * property value as a string
     * </pre>
     *
     * <code>string value = 3;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * property value as a string
     * </pre>
     *
     * <code>string value = 3;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROPS_FIELD_NUMBER = 4;
    private java.util.List<TideChart.TideChartProperty> props_;
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    public TideChart.TideChartProperty getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     * create a heirarchy of properties (repeated names form a collection)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 4;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(4, props_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, props_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartProperty)) {
        return super.equals(obj);
      }
      TideChart.TideChartProperty other = (TideChart.TideChartProperty) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartProperty parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartProperty parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartProperty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartProperty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartProperty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartProperty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartProperty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartProperty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartProperty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartProperty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartProperty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartProperty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartProperty prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * a recursive data type that provides configuration values for graphs, regions and nodes
     * </pre>
     *
     * Protobuf type {@code TideChartProperty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartProperty)
        TideChart.TideChartPropertyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartProperty_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartProperty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartProperty.class, TideChart.TideChartProperty.Builder.class);
      }

      // Construct using TideChart.TideChartProperty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        type_ = "";

        value_ = "";

        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartProperty_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartProperty getDefaultInstanceForType() {
        return TideChart.TideChartProperty.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartProperty build() {
        TideChart.TideChartProperty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartProperty buildPartial() {
        TideChart.TideChartProperty result = new TideChart.TideChartProperty(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.type_ = type_;
        result.value_ = value_;
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartProperty) {
          return mergeFrom((TideChart.TideChartProperty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartProperty other) {
        if (other == TideChart.TideChartProperty.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartProperty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartProperty) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * property field name
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * property field name
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * property field name
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * property field name
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * property field name
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * property value type
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * property value type
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * property value type
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * property value type
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * property value type
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <pre>
       * property value as a string
       * </pre>
       *
       * <code>string value = 3;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * property value as a string
       * </pre>
       *
       * <code>string value = 3;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * property value as a string
       * </pre>
       *
       * <code>string value = 3;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * property value as a string
       * </pre>
       *
       * <code>string value = 3;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * property value as a string
       * </pre>
       *
       * <code>string value = 3;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartProperty> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          props_ = new java.util.ArrayList<TideChart.TideChartProperty>(props_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> propsBuilder_;

      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public TideChart.TideChartProperty getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder addProps(TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder addProps(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder addAllProps(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public TideChart.TideChartProperty.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * create a heirarchy of properties (repeated names form a collection)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 4;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartProperty)
    }

    // @@protoc_insertion_point(class_scope:TideChartProperty)
    private static final TideChart.TideChartProperty DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartProperty();
    }

    public static TideChart.TideChartProperty getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartProperty>
        PARSER = new com.google.protobuf.AbstractParser<TideChartProperty>() {
      @java.lang.Override
      public TideChartProperty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartProperty(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartProperty> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartProperty> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartProperty getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartCommentBoxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartCommentBox)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for the comment box
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for the comment box
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * comment boxes can be relative to a region or to the graph
     * </pre>
     *
     * <code>string region = 2;</code>
     */
    java.lang.String getRegion();
    /**
     * <pre>
     * comment boxes can be relative to a region or to the graph
     * </pre>
     *
     * <code>string region = 2;</code>
     */
    com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * X position of the comment box 
     * </pre>
     *
     * <code>sint32 posX = 3;</code>
     */
    int getPosX();

    /**
     * <pre>
     * Y position of the comment box 
     * </pre>
     *
     * <code>sint32 posY = 4;</code>
     */
    int getPosY();

    /**
     * <pre>
     * width of comment box - 0 indicates autosize to fit content
     * </pre>
     *
     * <code>int32 width = 5;</code>
     */
    int getWidth();

    /**
     * <pre>
     * height of comment box - 0 indicates autosize to fit content 
     * </pre>
     *
     * <code>int32 height = 6;</code>
     */
    int getHeight();

    /**
     * <pre>
     * text content for the comment
     * </pre>
     *
     * <code>string text = 7;</code>
     */
    java.lang.String getText();
    /**
     * <pre>
     * text content for the comment
     * </pre>
     *
     * <code>string text = 7;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <pre>
     * image to use for the comment
     * </pre>
     *
     * <code>bytes image = 8;</code>
     */
    com.google.protobuf.ByteString getImage();

    /**
     * <pre>
     * icon name to use for the comment
     * </pre>
     *
     * <code>string icon = 9;</code>
     */
    java.lang.String getIcon();
    /**
     * <pre>
     * icon name to use for the comment
     * </pre>
     *
     * <code>string icon = 9;</code>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    /**
     * <pre>
     * size of font to draw text
     * </pre>
     *
     * <code>double fontSize = 10;</code>
     */
    double getFontSize();

    /**
     * <pre>
     * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
     * </pre>
     *
     * <code>string fontStyle = 11;</code>
     */
    java.lang.String getFontStyle();
    /**
     * <pre>
     * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
     * </pre>
     *
     * <code>string fontStyle = 11;</code>
     */
    com.google.protobuf.ByteString
        getFontStyleBytes();

    /**
     * <pre>
     * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
     * </pre>
     *
     * <code>repeated sint32 alignment = 12;</code>
     */
    java.util.List<java.lang.Integer> getAlignmentList();
    /**
     * <pre>
     * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
     * </pre>
     *
     * <code>repeated sint32 alignment = 12;</code>
     */
    int getAlignmentCount();
    /**
     * <pre>
     * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
     * </pre>
     *
     * <code>repeated sint32 alignment = 12;</code>
     */
    int getAlignment(int index);

    /**
     * <pre>
     * color used to draw text / icon - default is black
     * </pre>
     *
     * <code>int32 color = 13;</code>
     */
    int getColor();

    /**
     * <pre>
     * color used to draw background - default is transparent
     * </pre>
     *
     * <code>int32 background = 14;</code>
     */
    int getBackground();

    /**
     * <pre>
     * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
     * </pre>
     *
     * <code>repeated int32 border = 15;</code>
     */
    java.util.List<java.lang.Integer> getBorderList();
    /**
     * <pre>
     * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
     * </pre>
     *
     * <code>repeated int32 border = 15;</code>
     */
    int getBorderCount();
    /**
     * <pre>
     * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
     * </pre>
     *
     * <code>repeated int32 border = 15;</code>
     */
    int getBorder(int index);

    /**
     * <pre>
     * flag to indicate if a drop shadow should be used
     * </pre>
     *
     * <code>bool raised = 16;</code>
     */
    boolean getRaised();

    /**
     * <pre>
     * flag to indicate if the text requires left to right layout order
     * </pre>
     *
     * <code>bool reversed = 17;</code>
     */
    boolean getReversed();

    public TideChart.TideChartCommentBox.ContentCase getContentCase();
  }
  /**
   * Protobuf type {@code TideChartCommentBox}
   */
  public  static final class TideChartCommentBox extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartCommentBox)
      TideChartCommentBoxOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartCommentBox.newBuilder() to construct.
    private TideChartCommentBox(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartCommentBox() {
      id_ = "";
      region_ = "";
      fontStyle_ = "";
      alignment_ = emptyIntList();
      border_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartCommentBox();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartCommentBox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              region_ = s;
              break;
            }
            case 24: {

              posX_ = input.readSInt32();
              break;
            }
            case 32: {

              posY_ = input.readSInt32();
              break;
            }
            case 40: {

              width_ = input.readInt32();
              break;
            }
            case 48: {

              height_ = input.readInt32();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              contentCase_ = 7;
              content_ = s;
              break;
            }
            case 66: {
              contentCase_ = 8;
              content_ = input.readBytes();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              contentCase_ = 9;
              content_ = s;
              break;
            }
            case 81: {

              fontSize_ = input.readDouble();
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              fontStyle_ = s;
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                alignment_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              alignment_.addInt(input.readSInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                alignment_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                alignment_.addInt(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {

              color_ = input.readInt32();
              break;
            }
            case 112: {

              background_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                border_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              border_.addInt(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                border_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                border_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {

              raised_ = input.readBool();
              break;
            }
            case 136: {

              reversed_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          alignment_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          border_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartCommentBox_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartCommentBox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartCommentBox.class, TideChart.TideChartCommentBox.Builder.class);
    }

    private int contentCase_ = 0;
    private java.lang.Object content_;
    public enum ContentCase
        implements com.google.protobuf.Internal.EnumLite {
      TEXT(7),
      IMAGE(8),
      ICON(9),
      CONTENT_NOT_SET(0);
      private final int value;
      private ContentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContentCase forNumber(int value) {
        switch (value) {
          case 7: return TEXT;
          case 8: return IMAGE;
          case 9: return ICON;
          case 0: return CONTENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ContentCase
    getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for the comment box
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for the comment box
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REGION_FIELD_NUMBER = 2;
    private volatile java.lang.Object region_;
    /**
     * <pre>
     * comment boxes can be relative to a region or to the graph
     * </pre>
     *
     * <code>string region = 2;</code>
     */
    public java.lang.String getRegion() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        region_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * comment boxes can be relative to a region or to the graph
     * </pre>
     *
     * <code>string region = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        region_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSX_FIELD_NUMBER = 3;
    private int posX_;
    /**
     * <pre>
     * X position of the comment box 
     * </pre>
     *
     * <code>sint32 posX = 3;</code>
     */
    public int getPosX() {
      return posX_;
    }

    public static final int POSY_FIELD_NUMBER = 4;
    private int posY_;
    /**
     * <pre>
     * Y position of the comment box 
     * </pre>
     *
     * <code>sint32 posY = 4;</code>
     */
    public int getPosY() {
      return posY_;
    }

    public static final int WIDTH_FIELD_NUMBER = 5;
    private int width_;
    /**
     * <pre>
     * width of comment box - 0 indicates autosize to fit content
     * </pre>
     *
     * <code>int32 width = 5;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 6;
    private int height_;
    /**
     * <pre>
     * height of comment box - 0 indicates autosize to fit content 
     * </pre>
     *
     * <code>int32 height = 6;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int TEXT_FIELD_NUMBER = 7;
    /**
     * <pre>
     * text content for the comment
     * </pre>
     *
     * <code>string text = 7;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = "";
      if (contentCase_ == 7) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (contentCase_ == 7) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * text content for the comment
     * </pre>
     *
     * <code>string text = 7;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = "";
      if (contentCase_ == 7) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (contentCase_ == 7) {
          content_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMAGE_FIELD_NUMBER = 8;
    /**
     * <pre>
     * image to use for the comment
     * </pre>
     *
     * <code>bytes image = 8;</code>
     */
    public com.google.protobuf.ByteString getImage() {
      if (contentCase_ == 8) {
        return (com.google.protobuf.ByteString) content_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int ICON_FIELD_NUMBER = 9;
    /**
     * <pre>
     * icon name to use for the comment
     * </pre>
     *
     * <code>string icon = 9;</code>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = "";
      if (contentCase_ == 9) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (contentCase_ == 9) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * icon name to use for the comment
     * </pre>
     *
     * <code>string icon = 9;</code>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = "";
      if (contentCase_ == 9) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (contentCase_ == 9) {
          content_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FONTSIZE_FIELD_NUMBER = 10;
    private double fontSize_;
    /**
     * <pre>
     * size of font to draw text
     * </pre>
     *
     * <code>double fontSize = 10;</code>
     */
    public double getFontSize() {
      return fontSize_;
    }

    public static final int FONTSTYLE_FIELD_NUMBER = 11;
    private volatile java.lang.Object fontStyle_;
    /**
     * <pre>
     * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
     * </pre>
     *
     * <code>string fontStyle = 11;</code>
     */
    public java.lang.String getFontStyle() {
      java.lang.Object ref = fontStyle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fontStyle_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
     * </pre>
     *
     * <code>string fontStyle = 11;</code>
     */
    public com.google.protobuf.ByteString
        getFontStyleBytes() {
      java.lang.Object ref = fontStyle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fontStyle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALIGNMENT_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.IntList alignment_;
    /**
     * <pre>
     * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
     * </pre>
     *
     * <code>repeated sint32 alignment = 12;</code>
     */
    public java.util.List<java.lang.Integer>
        getAlignmentList() {
      return alignment_;
    }
    /**
     * <pre>
     * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
     * </pre>
     *
     * <code>repeated sint32 alignment = 12;</code>
     */
    public int getAlignmentCount() {
      return alignment_.size();
    }
    /**
     * <pre>
     * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
     * </pre>
     *
     * <code>repeated sint32 alignment = 12;</code>
     */
    public int getAlignment(int index) {
      return alignment_.getInt(index);
    }
    private int alignmentMemoizedSerializedSize = -1;

    public static final int COLOR_FIELD_NUMBER = 13;
    private int color_;
    /**
     * <pre>
     * color used to draw text / icon - default is black
     * </pre>
     *
     * <code>int32 color = 13;</code>
     */
    public int getColor() {
      return color_;
    }

    public static final int BACKGROUND_FIELD_NUMBER = 14;
    private int background_;
    /**
     * <pre>
     * color used to draw background - default is transparent
     * </pre>
     *
     * <code>int32 background = 14;</code>
     */
    public int getBackground() {
      return background_;
    }

    public static final int BORDER_FIELD_NUMBER = 15;
    private com.google.protobuf.Internal.IntList border_;
    /**
     * <pre>
     * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
     * </pre>
     *
     * <code>repeated int32 border = 15;</code>
     */
    public java.util.List<java.lang.Integer>
        getBorderList() {
      return border_;
    }
    /**
     * <pre>
     * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
     * </pre>
     *
     * <code>repeated int32 border = 15;</code>
     */
    public int getBorderCount() {
      return border_.size();
    }
    /**
     * <pre>
     * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
     * </pre>
     *
     * <code>repeated int32 border = 15;</code>
     */
    public int getBorder(int index) {
      return border_.getInt(index);
    }
    private int borderMemoizedSerializedSize = -1;

    public static final int RAISED_FIELD_NUMBER = 16;
    private boolean raised_;
    /**
     * <pre>
     * flag to indicate if a drop shadow should be used
     * </pre>
     *
     * <code>bool raised = 16;</code>
     */
    public boolean getRaised() {
      return raised_;
    }

    public static final int REVERSED_FIELD_NUMBER = 17;
    private boolean reversed_;
    /**
     * <pre>
     * flag to indicate if the text requires left to right layout order
     * </pre>
     *
     * <code>bool reversed = 17;</code>
     */
    public boolean getReversed() {
      return reversed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getRegionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, region_);
      }
      if (posX_ != 0) {
        output.writeSInt32(3, posX_);
      }
      if (posY_ != 0) {
        output.writeSInt32(4, posY_);
      }
      if (width_ != 0) {
        output.writeInt32(5, width_);
      }
      if (height_ != 0) {
        output.writeInt32(6, height_);
      }
      if (contentCase_ == 7) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, content_);
      }
      if (contentCase_ == 8) {
        output.writeBytes(
            8, (com.google.protobuf.ByteString) content_);
      }
      if (contentCase_ == 9) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, content_);
      }
      if (fontSize_ != 0D) {
        output.writeDouble(10, fontSize_);
      }
      if (!getFontStyleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, fontStyle_);
      }
      if (getAlignmentList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(alignmentMemoizedSerializedSize);
      }
      for (int i = 0; i < alignment_.size(); i++) {
        output.writeSInt32NoTag(alignment_.getInt(i));
      }
      if (color_ != 0) {
        output.writeInt32(13, color_);
      }
      if (background_ != 0) {
        output.writeInt32(14, background_);
      }
      if (getBorderList().size() > 0) {
        output.writeUInt32NoTag(122);
        output.writeUInt32NoTag(borderMemoizedSerializedSize);
      }
      for (int i = 0; i < border_.size(); i++) {
        output.writeInt32NoTag(border_.getInt(i));
      }
      if (raised_ != false) {
        output.writeBool(16, raised_);
      }
      if (reversed_ != false) {
        output.writeBool(17, reversed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getRegionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, region_);
      }
      if (posX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, posX_);
      }
      if (posY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, posY_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, width_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, height_);
      }
      if (contentCase_ == 7) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, content_);
      }
      if (contentCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              8, (com.google.protobuf.ByteString) content_);
      }
      if (contentCase_ == 9) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, content_);
      }
      if (fontSize_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, fontSize_);
      }
      if (!getFontStyleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, fontStyle_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < alignment_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(alignment_.getInt(i));
        }
        size += dataSize;
        if (!getAlignmentList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        alignmentMemoizedSerializedSize = dataSize;
      }
      if (color_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, color_);
      }
      if (background_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, background_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < border_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(border_.getInt(i));
        }
        size += dataSize;
        if (!getBorderList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        borderMemoizedSerializedSize = dataSize;
      }
      if (raised_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, raised_);
      }
      if (reversed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, reversed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartCommentBox)) {
        return super.equals(obj);
      }
      TideChart.TideChartCommentBox other = (TideChart.TideChartCommentBox) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getRegion()
          .equals(other.getRegion())) return false;
      if (getPosX()
          != other.getPosX()) return false;
      if (getPosY()
          != other.getPosY()) return false;
      if (getWidth()
          != other.getWidth()) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (java.lang.Double.doubleToLongBits(getFontSize())
          != java.lang.Double.doubleToLongBits(
              other.getFontSize())) return false;
      if (!getFontStyle()
          .equals(other.getFontStyle())) return false;
      if (!getAlignmentList()
          .equals(other.getAlignmentList())) return false;
      if (getColor()
          != other.getColor()) return false;
      if (getBackground()
          != other.getBackground()) return false;
      if (!getBorderList()
          .equals(other.getBorderList())) return false;
      if (getRaised()
          != other.getRaised()) return false;
      if (getReversed()
          != other.getReversed()) return false;
      if (!getContentCase().equals(other.getContentCase())) return false;
      switch (contentCase_) {
        case 7:
          if (!getText()
              .equals(other.getText())) return false;
          break;
        case 8:
          if (!getImage()
              .equals(other.getImage())) return false;
          break;
        case 9:
          if (!getIcon()
              .equals(other.getIcon())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + REGION_FIELD_NUMBER;
      hash = (53 * hash) + getRegion().hashCode();
      hash = (37 * hash) + POSX_FIELD_NUMBER;
      hash = (53 * hash) + getPosX();
      hash = (37 * hash) + POSY_FIELD_NUMBER;
      hash = (53 * hash) + getPosY();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (37 * hash) + FONTSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFontSize()));
      hash = (37 * hash) + FONTSTYLE_FIELD_NUMBER;
      hash = (53 * hash) + getFontStyle().hashCode();
      if (getAlignmentCount() > 0) {
        hash = (37 * hash) + ALIGNMENT_FIELD_NUMBER;
        hash = (53 * hash) + getAlignmentList().hashCode();
      }
      hash = (37 * hash) + COLOR_FIELD_NUMBER;
      hash = (53 * hash) + getColor();
      hash = (37 * hash) + BACKGROUND_FIELD_NUMBER;
      hash = (53 * hash) + getBackground();
      if (getBorderCount() > 0) {
        hash = (37 * hash) + BORDER_FIELD_NUMBER;
        hash = (53 * hash) + getBorderList().hashCode();
      }
      hash = (37 * hash) + RAISED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRaised());
      hash = (37 * hash) + REVERSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReversed());
      switch (contentCase_) {
        case 7:
          hash = (37 * hash) + TEXT_FIELD_NUMBER;
          hash = (53 * hash) + getText().hashCode();
          break;
        case 8:
          hash = (37 * hash) + IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getImage().hashCode();
          break;
        case 9:
          hash = (37 * hash) + ICON_FIELD_NUMBER;
          hash = (53 * hash) + getIcon().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartCommentBox parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommentBox parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommentBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommentBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommentBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommentBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommentBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommentBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartCommentBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommentBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartCommentBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommentBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartCommentBox prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartCommentBox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartCommentBox)
        TideChart.TideChartCommentBoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartCommentBox_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartCommentBox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartCommentBox.class, TideChart.TideChartCommentBox.Builder.class);
      }

      // Construct using TideChart.TideChartCommentBox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        region_ = "";

        posX_ = 0;

        posY_ = 0;

        width_ = 0;

        height_ = 0;

        fontSize_ = 0D;

        fontStyle_ = "";

        alignment_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = 0;

        background_ = 0;

        border_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        raised_ = false;

        reversed_ = false;

        contentCase_ = 0;
        content_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartCommentBox_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartCommentBox getDefaultInstanceForType() {
        return TideChart.TideChartCommentBox.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartCommentBox build() {
        TideChart.TideChartCommentBox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartCommentBox buildPartial() {
        TideChart.TideChartCommentBox result = new TideChart.TideChartCommentBox(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.region_ = region_;
        result.posX_ = posX_;
        result.posY_ = posY_;
        result.width_ = width_;
        result.height_ = height_;
        if (contentCase_ == 7) {
          result.content_ = content_;
        }
        if (contentCase_ == 8) {
          result.content_ = content_;
        }
        if (contentCase_ == 9) {
          result.content_ = content_;
        }
        result.fontSize_ = fontSize_;
        result.fontStyle_ = fontStyle_;
        if (((bitField0_ & 0x00000001) != 0)) {
          alignment_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.alignment_ = alignment_;
        result.color_ = color_;
        result.background_ = background_;
        if (((bitField0_ & 0x00000002) != 0)) {
          border_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.border_ = border_;
        result.raised_ = raised_;
        result.reversed_ = reversed_;
        result.contentCase_ = contentCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartCommentBox) {
          return mergeFrom((TideChart.TideChartCommentBox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartCommentBox other) {
        if (other == TideChart.TideChartCommentBox.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getRegion().isEmpty()) {
          region_ = other.region_;
          onChanged();
        }
        if (other.getPosX() != 0) {
          setPosX(other.getPosX());
        }
        if (other.getPosY() != 0) {
          setPosY(other.getPosY());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (other.getFontSize() != 0D) {
          setFontSize(other.getFontSize());
        }
        if (!other.getFontStyle().isEmpty()) {
          fontStyle_ = other.fontStyle_;
          onChanged();
        }
        if (!other.alignment_.isEmpty()) {
          if (alignment_.isEmpty()) {
            alignment_ = other.alignment_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAlignmentIsMutable();
            alignment_.addAll(other.alignment_);
          }
          onChanged();
        }
        if (other.getColor() != 0) {
          setColor(other.getColor());
        }
        if (other.getBackground() != 0) {
          setBackground(other.getBackground());
        }
        if (!other.border_.isEmpty()) {
          if (border_.isEmpty()) {
            border_ = other.border_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBorderIsMutable();
            border_.addAll(other.border_);
          }
          onChanged();
        }
        if (other.getRaised() != false) {
          setRaised(other.getRaised());
        }
        if (other.getReversed() != false) {
          setReversed(other.getReversed());
        }
        switch (other.getContentCase()) {
          case TEXT: {
            contentCase_ = 7;
            content_ = other.content_;
            onChanged();
            break;
          }
          case IMAGE: {
            setImage(other.getImage());
            break;
          }
          case ICON: {
            contentCase_ = 9;
            content_ = other.content_;
            onChanged();
            break;
          }
          case CONTENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartCommentBox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartCommentBox) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int contentCase_ = 0;
      private java.lang.Object content_;
      public ContentCase
          getContentCase() {
        return ContentCase.forNumber(
            contentCase_);
      }

      public Builder clearContent() {
        contentCase_ = 0;
        content_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for the comment box
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for the comment box
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for the comment box
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the comment box
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the comment box
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object region_ = "";
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 2;</code>
       */
      public java.lang.String getRegion() {
        java.lang.Object ref = region_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          region_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = region_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          region_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 2;</code>
       */
      public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        region_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 2;</code>
       */
      public Builder clearRegion() {
        
        region_ = getDefaultInstance().getRegion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 2;</code>
       */
      public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        region_ = value;
        onChanged();
        return this;
      }

      private int posX_ ;
      /**
       * <pre>
       * X position of the comment box 
       * </pre>
       *
       * <code>sint32 posX = 3;</code>
       */
      public int getPosX() {
        return posX_;
      }
      /**
       * <pre>
       * X position of the comment box 
       * </pre>
       *
       * <code>sint32 posX = 3;</code>
       */
      public Builder setPosX(int value) {
        
        posX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * X position of the comment box 
       * </pre>
       *
       * <code>sint32 posX = 3;</code>
       */
      public Builder clearPosX() {
        
        posX_ = 0;
        onChanged();
        return this;
      }

      private int posY_ ;
      /**
       * <pre>
       * Y position of the comment box 
       * </pre>
       *
       * <code>sint32 posY = 4;</code>
       */
      public int getPosY() {
        return posY_;
      }
      /**
       * <pre>
       * Y position of the comment box 
       * </pre>
       *
       * <code>sint32 posY = 4;</code>
       */
      public Builder setPosY(int value) {
        
        posY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Y position of the comment box 
       * </pre>
       *
       * <code>sint32 posY = 4;</code>
       */
      public Builder clearPosY() {
        
        posY_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       * width of comment box - 0 indicates autosize to fit content
       * </pre>
       *
       * <code>int32 width = 5;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       * width of comment box - 0 indicates autosize to fit content
       * </pre>
       *
       * <code>int32 width = 5;</code>
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * width of comment box - 0 indicates autosize to fit content
       * </pre>
       *
       * <code>int32 width = 5;</code>
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       * height of comment box - 0 indicates autosize to fit content 
       * </pre>
       *
       * <code>int32 height = 6;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       * height of comment box - 0 indicates autosize to fit content 
       * </pre>
       *
       * <code>int32 height = 6;</code>
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * height of comment box - 0 indicates autosize to fit content 
       * </pre>
       *
       * <code>int32 height = 6;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * text content for the comment
       * </pre>
       *
       * <code>string text = 7;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = "";
        if (contentCase_ == 7) {
          ref = content_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (contentCase_ == 7) {
            content_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * text content for the comment
       * </pre>
       *
       * <code>string text = 7;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = "";
        if (contentCase_ == 7) {
          ref = content_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (contentCase_ == 7) {
            content_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * text content for the comment
       * </pre>
       *
       * <code>string text = 7;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 7;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * text content for the comment
       * </pre>
       *
       * <code>string text = 7;</code>
       */
      public Builder clearText() {
        if (contentCase_ == 7) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * text content for the comment
       * </pre>
       *
       * <code>string text = 7;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        contentCase_ = 7;
        content_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * image to use for the comment
       * </pre>
       *
       * <code>bytes image = 8;</code>
       */
      public com.google.protobuf.ByteString getImage() {
        if (contentCase_ == 8) {
          return (com.google.protobuf.ByteString) content_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * image to use for the comment
       * </pre>
       *
       * <code>bytes image = 8;</code>
       */
      public Builder setImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 8;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * image to use for the comment
       * </pre>
       *
       * <code>bytes image = 8;</code>
       */
      public Builder clearImage() {
        if (contentCase_ == 8) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <pre>
       * icon name to use for the comment
       * </pre>
       *
       * <code>string icon = 9;</code>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = "";
        if (contentCase_ == 9) {
          ref = content_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (contentCase_ == 9) {
            content_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * icon name to use for the comment
       * </pre>
       *
       * <code>string icon = 9;</code>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = "";
        if (contentCase_ == 9) {
          ref = content_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (contentCase_ == 9) {
            content_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * icon name to use for the comment
       * </pre>
       *
       * <code>string icon = 9;</code>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 9;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * icon name to use for the comment
       * </pre>
       *
       * <code>string icon = 9;</code>
       */
      public Builder clearIcon() {
        if (contentCase_ == 9) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * icon name to use for the comment
       * </pre>
       *
       * <code>string icon = 9;</code>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        contentCase_ = 9;
        content_ = value;
        onChanged();
        return this;
      }

      private double fontSize_ ;
      /**
       * <pre>
       * size of font to draw text
       * </pre>
       *
       * <code>double fontSize = 10;</code>
       */
      public double getFontSize() {
        return fontSize_;
      }
      /**
       * <pre>
       * size of font to draw text
       * </pre>
       *
       * <code>double fontSize = 10;</code>
       */
      public Builder setFontSize(double value) {
        
        fontSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * size of font to draw text
       * </pre>
       *
       * <code>double fontSize = 10;</code>
       */
      public Builder clearFontSize() {
        
        fontSize_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object fontStyle_ = "";
      /**
       * <pre>
       * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
       * </pre>
       *
       * <code>string fontStyle = 11;</code>
       */
      public java.lang.String getFontStyle() {
        java.lang.Object ref = fontStyle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fontStyle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
       * </pre>
       *
       * <code>string fontStyle = 11;</code>
       */
      public com.google.protobuf.ByteString
          getFontStyleBytes() {
        java.lang.Object ref = fontStyle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fontStyle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
       * </pre>
       *
       * <code>string fontStyle = 11;</code>
       */
      public Builder setFontStyle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fontStyle_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
       * </pre>
       *
       * <code>string fontStyle = 11;</code>
       */
      public Builder clearFontStyle() {
        
        fontStyle_ = getDefaultInstance().getFontStyle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * font style to use: Light, Regular, Bold, LightItalic, RegularItalic, BoldItalic
       * </pre>
       *
       * <code>string fontStyle = 11;</code>
       */
      public Builder setFontStyleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fontStyle_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList alignment_ = emptyIntList();
      private void ensureAlignmentIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          alignment_ = mutableCopy(alignment_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
       * </pre>
       *
       * <code>repeated sint32 alignment = 12;</code>
       */
      public java.util.List<java.lang.Integer>
          getAlignmentList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(alignment_) : alignment_;
      }
      /**
       * <pre>
       * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
       * </pre>
       *
       * <code>repeated sint32 alignment = 12;</code>
       */
      public int getAlignmentCount() {
        return alignment_.size();
      }
      /**
       * <pre>
       * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
       * </pre>
       *
       * <code>repeated sint32 alignment = 12;</code>
       */
      public int getAlignment(int index) {
        return alignment_.getInt(index);
      }
      /**
       * <pre>
       * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
       * </pre>
       *
       * <code>repeated sint32 alignment = 12;</code>
       */
      public Builder setAlignment(
          int index, int value) {
        ensureAlignmentIsMutable();
        alignment_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
       * </pre>
       *
       * <code>repeated sint32 alignment = 12;</code>
       */
      public Builder addAlignment(int value) {
        ensureAlignmentIsMutable();
        alignment_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
       * </pre>
       *
       * <code>repeated sint32 alignment = 12;</code>
       */
      public Builder addAllAlignment(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAlignmentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, alignment_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * alignment of content within box (top/left=-1, center = 0, bottom/right=1) as an array [horziontal, vertical, paragraph]
       * </pre>
       *
       * <code>repeated sint32 alignment = 12;</code>
       */
      public Builder clearAlignment() {
        alignment_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int color_ ;
      /**
       * <pre>
       * color used to draw text / icon - default is black
       * </pre>
       *
       * <code>int32 color = 13;</code>
       */
      public int getColor() {
        return color_;
      }
      /**
       * <pre>
       * color used to draw text / icon - default is black
       * </pre>
       *
       * <code>int32 color = 13;</code>
       */
      public Builder setColor(int value) {
        
        color_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * color used to draw text / icon - default is black
       * </pre>
       *
       * <code>int32 color = 13;</code>
       */
      public Builder clearColor() {
        
        color_ = 0;
        onChanged();
        return this;
      }

      private int background_ ;
      /**
       * <pre>
       * color used to draw background - default is transparent
       * </pre>
       *
       * <code>int32 background = 14;</code>
       */
      public int getBackground() {
        return background_;
      }
      /**
       * <pre>
       * color used to draw background - default is transparent
       * </pre>
       *
       * <code>int32 background = 14;</code>
       */
      public Builder setBackground(int value) {
        
        background_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * color used to draw background - default is transparent
       * </pre>
       *
       * <code>int32 background = 14;</code>
       */
      public Builder clearBackground() {
        
        background_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList border_ = emptyIntList();
      private void ensureBorderIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          border_ = mutableCopy(border_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
       * </pre>
       *
       * <code>repeated int32 border = 15;</code>
       */
      public java.util.List<java.lang.Integer>
          getBorderList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(border_) : border_;
      }
      /**
       * <pre>
       * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
       * </pre>
       *
       * <code>repeated int32 border = 15;</code>
       */
      public int getBorderCount() {
        return border_.size();
      }
      /**
       * <pre>
       * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
       * </pre>
       *
       * <code>repeated int32 border = 15;</code>
       */
      public int getBorder(int index) {
        return border_.getInt(index);
      }
      /**
       * <pre>
       * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
       * </pre>
       *
       * <code>repeated int32 border = 15;</code>
       */
      public Builder setBorder(
          int index, int value) {
        ensureBorderIsMutable();
        border_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
       * </pre>
       *
       * <code>repeated int32 border = 15;</code>
       */
      public Builder addBorder(int value) {
        ensureBorderIsMutable();
        border_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
       * </pre>
       *
       * <code>repeated int32 border = 15;</code>
       */
      public Builder addAllBorder(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBorderIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, border_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * style usedd to draw border as array [color (default=black), thickness (default=1), dash pattern (default=solid)]
       * </pre>
       *
       * <code>repeated int32 border = 15;</code>
       */
      public Builder clearBorder() {
        border_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private boolean raised_ ;
      /**
       * <pre>
       * flag to indicate if a drop shadow should be used
       * </pre>
       *
       * <code>bool raised = 16;</code>
       */
      public boolean getRaised() {
        return raised_;
      }
      /**
       * <pre>
       * flag to indicate if a drop shadow should be used
       * </pre>
       *
       * <code>bool raised = 16;</code>
       */
      public Builder setRaised(boolean value) {
        
        raised_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag to indicate if a drop shadow should be used
       * </pre>
       *
       * <code>bool raised = 16;</code>
       */
      public Builder clearRaised() {
        
        raised_ = false;
        onChanged();
        return this;
      }

      private boolean reversed_ ;
      /**
       * <pre>
       * flag to indicate if the text requires left to right layout order
       * </pre>
       *
       * <code>bool reversed = 17;</code>
       */
      public boolean getReversed() {
        return reversed_;
      }
      /**
       * <pre>
       * flag to indicate if the text requires left to right layout order
       * </pre>
       *
       * <code>bool reversed = 17;</code>
       */
      public Builder setReversed(boolean value) {
        
        reversed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag to indicate if the text requires left to right layout order
       * </pre>
       *
       * <code>bool reversed = 17;</code>
       */
      public Builder clearReversed() {
        
        reversed_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartCommentBox)
    }

    // @@protoc_insertion_point(class_scope:TideChartCommentBox)
    private static final TideChart.TideChartCommentBox DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartCommentBox();
    }

    public static TideChart.TideChartCommentBox getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartCommentBox>
        PARSER = new com.google.protobuf.AbstractParser<TideChartCommentBox>() {
      @java.lang.Override
      public TideChartCommentBox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartCommentBox(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartCommentBox> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartCommentBox> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartCommentBox getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartWidgetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartWidget)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for the widget
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for the widget
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * type of widget
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of widget
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * description title of the widget
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    java.lang.String getTitle();
    /**
     * <pre>
     * description title of the widget
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     * comment boxes can be relative to a region or to the graph
     * </pre>
     *
     * <code>string region = 4;</code>
     */
    java.lang.String getRegion();
    /**
     * <pre>
     * comment boxes can be relative to a region or to the graph
     * </pre>
     *
     * <code>string region = 4;</code>
     */
    com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * X position of the comment box 
     * </pre>
     *
     * <code>sint32 posX = 5;</code>
     */
    int getPosX();

    /**
     * <pre>
     * Y position of the comment box 
     * </pre>
     *
     * <code>sint32 posY = 6;</code>
     */
    int getPosY();

    /**
     * <pre>
     * width of comment box - 0 indicates autosize to fit content
     * </pre>
     *
     * <code>int32 width = 7;</code>
     */
    int getWidth();

    /**
     * <pre>
     * height of comment box - 0 indicates autosize to fit content 
     * </pre>
     *
     * <code>int32 height = 8;</code>
     */
    int getHeight();

    /**
     * <pre>
     * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
     * </pre>
     *
     * <code>string link = 9;</code>
     */
    java.lang.String getLink();
    /**
     * <pre>
     * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
     * </pre>
     *
     * <code>string link = 9;</code>
     */
    com.google.protobuf.ByteString
        getLinkBytes();

    /**
     * <pre>
     * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
     * </pre>
     *
     * <code>string port = 10;</code>
     */
    java.lang.String getPort();
    /**
     * <pre>
     * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
     * </pre>
     *
     * <code>string port = 10;</code>
     */
    com.google.protobuf.ByteString
        getPortBytes();

    /**
     * <pre>
     * name of node widget is associated with
     * </pre>
     *
     * <code>string node = 11;</code>
     */
    java.lang.String getNode();
    /**
     * <pre>
     * name of node widget is associated with
     * </pre>
     *
     * <code>string node = 11;</code>
     */
    com.google.protobuf.ByteString
        getNodeBytes();

    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getPropsList();
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    TideChart.TideChartProperty getProps(int index);
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList();
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index);

    public TideChart.TideChartWidget.TargetCase getTargetCase();
  }
  /**
   * Protobuf type {@code TideChartWidget}
   */
  public  static final class TideChartWidget extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartWidget)
      TideChartWidgetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartWidget.newBuilder() to construct.
    private TideChartWidget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartWidget() {
      id_ = "";
      type_ = "";
      title_ = "";
      region_ = "";
      props_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartWidget();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartWidget(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              region_ = s;
              break;
            }
            case 40: {

              posX_ = input.readSInt32();
              break;
            }
            case 48: {

              posY_ = input.readSInt32();
              break;
            }
            case 56: {

              width_ = input.readInt32();
              break;
            }
            case 64: {

              height_ = input.readInt32();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 9;
              target_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 10;
              target_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 11;
              target_ = s;
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                props_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000001;
              }
              props_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartWidget_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartWidget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartWidget.class, TideChart.TideChartWidget.Builder.class);
    }

    private int targetCase_ = 0;
    private java.lang.Object target_;
    public enum TargetCase
        implements com.google.protobuf.Internal.EnumLite {
      LINK(9),
      PORT(10),
      NODE(11),
      TARGET_NOT_SET(0);
      private final int value;
      private TargetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TargetCase valueOf(int value) {
        return forNumber(value);
      }

      public static TargetCase forNumber(int value) {
        switch (value) {
          case 9: return LINK;
          case 10: return PORT;
          case 11: return NODE;
          case 0: return TARGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TargetCase
    getTargetCase() {
      return TargetCase.forNumber(
          targetCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for the widget
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for the widget
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of widget
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of widget
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TITLE_FIELD_NUMBER = 3;
    private volatile java.lang.Object title_;
    /**
     * <pre>
     * description title of the widget
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * description title of the widget
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REGION_FIELD_NUMBER = 4;
    private volatile java.lang.Object region_;
    /**
     * <pre>
     * comment boxes can be relative to a region or to the graph
     * </pre>
     *
     * <code>string region = 4;</code>
     */
    public java.lang.String getRegion() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        region_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * comment boxes can be relative to a region or to the graph
     * </pre>
     *
     * <code>string region = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        region_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSX_FIELD_NUMBER = 5;
    private int posX_;
    /**
     * <pre>
     * X position of the comment box 
     * </pre>
     *
     * <code>sint32 posX = 5;</code>
     */
    public int getPosX() {
      return posX_;
    }

    public static final int POSY_FIELD_NUMBER = 6;
    private int posY_;
    /**
     * <pre>
     * Y position of the comment box 
     * </pre>
     *
     * <code>sint32 posY = 6;</code>
     */
    public int getPosY() {
      return posY_;
    }

    public static final int WIDTH_FIELD_NUMBER = 7;
    private int width_;
    /**
     * <pre>
     * width of comment box - 0 indicates autosize to fit content
     * </pre>
     *
     * <code>int32 width = 7;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 8;
    private int height_;
    /**
     * <pre>
     * height of comment box - 0 indicates autosize to fit content 
     * </pre>
     *
     * <code>int32 height = 8;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int LINK_FIELD_NUMBER = 9;
    /**
     * <pre>
     * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
     * </pre>
     *
     * <code>string link = 9;</code>
     */
    public java.lang.String getLink() {
      java.lang.Object ref = "";
      if (targetCase_ == 9) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 9) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
     * </pre>
     *
     * <code>string link = 9;</code>
     */
    public com.google.protobuf.ByteString
        getLinkBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 9) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 9) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 10;
    /**
     * <pre>
     * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
     * </pre>
     *
     * <code>string port = 10;</code>
     */
    public java.lang.String getPort() {
      java.lang.Object ref = "";
      if (targetCase_ == 10) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 10) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
     * </pre>
     *
     * <code>string port = 10;</code>
     */
    public com.google.protobuf.ByteString
        getPortBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 10) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 10) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_FIELD_NUMBER = 11;
    /**
     * <pre>
     * name of node widget is associated with
     * </pre>
     *
     * <code>string node = 11;</code>
     */
    public java.lang.String getNode() {
      java.lang.Object ref = "";
      if (targetCase_ == 11) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 11) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * name of node widget is associated with
     * </pre>
     *
     * <code>string node = 11;</code>
     */
    public com.google.protobuf.ByteString
        getNodeBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 11) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 11) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROPS_FIELD_NUMBER = 12;
    private java.util.List<TideChart.TideChartProperty> props_;
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public TideChart.TideChartProperty getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     * widgets can have configuration paremeters
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, title_);
      }
      if (!getRegionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, region_);
      }
      if (posX_ != 0) {
        output.writeSInt32(5, posX_);
      }
      if (posY_ != 0) {
        output.writeSInt32(6, posY_);
      }
      if (width_ != 0) {
        output.writeInt32(7, width_);
      }
      if (height_ != 0) {
        output.writeInt32(8, height_);
      }
      if (targetCase_ == 9) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, target_);
      }
      if (targetCase_ == 10) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, target_);
      }
      if (targetCase_ == 11) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, target_);
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(12, props_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, title_);
      }
      if (!getRegionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, region_);
      }
      if (posX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, posX_);
      }
      if (posY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, posY_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, width_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, height_);
      }
      if (targetCase_ == 9) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, target_);
      }
      if (targetCase_ == 10) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, target_);
      }
      if (targetCase_ == 11) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, target_);
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, props_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartWidget)) {
        return super.equals(obj);
      }
      TideChart.TideChartWidget other = (TideChart.TideChartWidget) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (!getRegion()
          .equals(other.getRegion())) return false;
      if (getPosX()
          != other.getPosX()) return false;
      if (getPosY()
          != other.getPosY()) return false;
      if (getWidth()
          != other.getWidth()) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!getTargetCase().equals(other.getTargetCase())) return false;
      switch (targetCase_) {
        case 9:
          if (!getLink()
              .equals(other.getLink())) return false;
          break;
        case 10:
          if (!getPort()
              .equals(other.getPort())) return false;
          break;
        case 11:
          if (!getNode()
              .equals(other.getNode())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + REGION_FIELD_NUMBER;
      hash = (53 * hash) + getRegion().hashCode();
      hash = (37 * hash) + POSX_FIELD_NUMBER;
      hash = (53 * hash) + getPosX();
      hash = (37 * hash) + POSY_FIELD_NUMBER;
      hash = (53 * hash) + getPosY();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      switch (targetCase_) {
        case 9:
          hash = (37 * hash) + LINK_FIELD_NUMBER;
          hash = (53 * hash) + getLink().hashCode();
          break;
        case 10:
          hash = (37 * hash) + PORT_FIELD_NUMBER;
          hash = (53 * hash) + getPort().hashCode();
          break;
        case 11:
          hash = (37 * hash) + NODE_FIELD_NUMBER;
          hash = (53 * hash) + getNode().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartWidget parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartWidget parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartWidget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartWidget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartWidget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartWidget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartWidget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartWidget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartWidget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartWidget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartWidget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartWidget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartWidget prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartWidget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartWidget)
        TideChart.TideChartWidgetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartWidget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartWidget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartWidget.class, TideChart.TideChartWidget.Builder.class);
      }

      // Construct using TideChart.TideChartWidget.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        type_ = "";

        title_ = "";

        region_ = "";

        posX_ = 0;

        posY_ = 0;

        width_ = 0;

        height_ = 0;

        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          propsBuilder_.clear();
        }
        targetCase_ = 0;
        target_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartWidget_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartWidget getDefaultInstanceForType() {
        return TideChart.TideChartWidget.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartWidget build() {
        TideChart.TideChartWidget result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartWidget buildPartial() {
        TideChart.TideChartWidget result = new TideChart.TideChartWidget(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.type_ = type_;
        result.title_ = title_;
        result.region_ = region_;
        result.posX_ = posX_;
        result.posY_ = posY_;
        result.width_ = width_;
        result.height_ = height_;
        if (targetCase_ == 9) {
          result.target_ = target_;
        }
        if (targetCase_ == 10) {
          result.target_ = target_;
        }
        if (targetCase_ == 11) {
          result.target_ = target_;
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        result.targetCase_ = targetCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartWidget) {
          return mergeFrom((TideChart.TideChartWidget)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartWidget other) {
        if (other == TideChart.TideChartWidget.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (!other.getRegion().isEmpty()) {
          region_ = other.region_;
          onChanged();
        }
        if (other.getPosX() != 0) {
          setPosX(other.getPosX());
        }
        if (other.getPosY() != 0) {
          setPosY(other.getPosY());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000001);
              propsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        switch (other.getTargetCase()) {
          case LINK: {
            targetCase_ = 9;
            target_ = other.target_;
            onChanged();
            break;
          }
          case PORT: {
            targetCase_ = 10;
            target_ = other.target_;
            onChanged();
            break;
          }
          case NODE: {
            targetCase_ = 11;
            target_ = other.target_;
            onChanged();
            break;
          }
          case TARGET_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartWidget parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartWidget) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int targetCase_ = 0;
      private java.lang.Object target_;
      public TargetCase
          getTargetCase() {
        return TargetCase.forNumber(
            targetCase_);
      }

      public Builder clearTarget() {
        targetCase_ = 0;
        target_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for the widget
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for the widget
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for the widget
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the widget
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the widget
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of widget
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of widget
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of widget
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of widget
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of widget
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <pre>
       * description title of the widget
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * description title of the widget
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * description title of the widget
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * description title of the widget
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * description title of the widget
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object region_ = "";
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public java.lang.String getRegion() {
        java.lang.Object ref = region_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          region_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = region_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          region_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        region_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public Builder clearRegion() {
        
        region_ = getDefaultInstance().getRegion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * comment boxes can be relative to a region or to the graph
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        region_ = value;
        onChanged();
        return this;
      }

      private int posX_ ;
      /**
       * <pre>
       * X position of the comment box 
       * </pre>
       *
       * <code>sint32 posX = 5;</code>
       */
      public int getPosX() {
        return posX_;
      }
      /**
       * <pre>
       * X position of the comment box 
       * </pre>
       *
       * <code>sint32 posX = 5;</code>
       */
      public Builder setPosX(int value) {
        
        posX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * X position of the comment box 
       * </pre>
       *
       * <code>sint32 posX = 5;</code>
       */
      public Builder clearPosX() {
        
        posX_ = 0;
        onChanged();
        return this;
      }

      private int posY_ ;
      /**
       * <pre>
       * Y position of the comment box 
       * </pre>
       *
       * <code>sint32 posY = 6;</code>
       */
      public int getPosY() {
        return posY_;
      }
      /**
       * <pre>
       * Y position of the comment box 
       * </pre>
       *
       * <code>sint32 posY = 6;</code>
       */
      public Builder setPosY(int value) {
        
        posY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Y position of the comment box 
       * </pre>
       *
       * <code>sint32 posY = 6;</code>
       */
      public Builder clearPosY() {
        
        posY_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       * width of comment box - 0 indicates autosize to fit content
       * </pre>
       *
       * <code>int32 width = 7;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       * width of comment box - 0 indicates autosize to fit content
       * </pre>
       *
       * <code>int32 width = 7;</code>
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * width of comment box - 0 indicates autosize to fit content
       * </pre>
       *
       * <code>int32 width = 7;</code>
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       * height of comment box - 0 indicates autosize to fit content 
       * </pre>
       *
       * <code>int32 height = 8;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       * height of comment box - 0 indicates autosize to fit content 
       * </pre>
       *
       * <code>int32 height = 8;</code>
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * height of comment box - 0 indicates autosize to fit content 
       * </pre>
       *
       * <code>int32 height = 8;</code>
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
       * </pre>
       *
       * <code>string link = 9;</code>
       */
      public java.lang.String getLink() {
        java.lang.Object ref = "";
        if (targetCase_ == 9) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 9) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
       * </pre>
       *
       * <code>string link = 9;</code>
       */
      public com.google.protobuf.ByteString
          getLinkBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 9) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 9) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
       * </pre>
       *
       * <code>string link = 9;</code>
       */
      public Builder setLink(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 9;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
       * </pre>
       *
       * <code>string link = 9;</code>
       */
      public Builder clearLink() {
        if (targetCase_ == 9) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * link widget is associated with (&lt;out-node&gt;:&lt;out-port&gt;-&gt;&lt;in-node&gt;:&lt;in-port&gt;)
       * </pre>
       *
       * <code>string link = 9;</code>
       */
      public Builder setLinkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 9;
        target_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
       * </pre>
       *
       * <code>string port = 10;</code>
       */
      public java.lang.String getPort() {
        java.lang.Object ref = "";
        if (targetCase_ == 10) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 10) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
       * </pre>
       *
       * <code>string port = 10;</code>
       */
      public com.google.protobuf.ByteString
          getPortBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 10) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 10) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
       * </pre>
       *
       * <code>string port = 10;</code>
       */
      public Builder setPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 10;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
       * </pre>
       *
       * <code>string port = 10;</code>
       */
      public Builder clearPort() {
        if (targetCase_ == 10) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * port widget is associated with (&lt;node&gt;:&lt;port&gt;)
       * </pre>
       *
       * <code>string port = 10;</code>
       */
      public Builder setPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 10;
        target_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * name of node widget is associated with
       * </pre>
       *
       * <code>string node = 11;</code>
       */
      public java.lang.String getNode() {
        java.lang.Object ref = "";
        if (targetCase_ == 11) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 11) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of node widget is associated with
       * </pre>
       *
       * <code>string node = 11;</code>
       */
      public com.google.protobuf.ByteString
          getNodeBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 11) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 11) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of node widget is associated with
       * </pre>
       *
       * <code>string node = 11;</code>
       */
      public Builder setNode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 11;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of node widget is associated with
       * </pre>
       *
       * <code>string node = 11;</code>
       */
      public Builder clearNode() {
        if (targetCase_ == 11) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * name of node widget is associated with
       * </pre>
       *
       * <code>string node = 11;</code>
       */
      public Builder setNodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 11;
        target_ = value;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartProperty> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          props_ = new java.util.ArrayList<TideChart.TideChartProperty>(props_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> propsBuilder_;

      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addAllProps(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * widgets can have configuration paremeters
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartWidget)
    }

    // @@protoc_insertion_point(class_scope:TideChartWidget)
    private static final TideChart.TideChartWidget DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartWidget();
    }

    public static TideChart.TideChartWidget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartWidget>
        PARSER = new com.google.protobuf.AbstractParser<TideChartWidget>() {
      @java.lang.Override
      public TideChartWidget parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartWidget(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartWidget> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartWidget> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartWidget getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartPortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartPort)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * type of port: inport, outport
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of port: inport, outport
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * port name (unique to node scope)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * port name (unique to node scope)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * position in the node's set of inports or outports
     * </pre>
     *
     * <code>int32 ordinal = 3;</code>
     */
    int getOrdinal();

    /**
     * <pre>
     * used by methods to indicate which ports are used for default in/out routing
     * </pre>
     *
     * <code>bool default = 4;</code>
     */
    boolean getDefault();

    /**
     * <pre>
     * used by methods to indicate the port must exist
     * </pre>
     *
     * <code>bool required = 5;</code>
     */
    boolean getRequired();

    /**
     * <pre>
     * used by methods to define what value / message types are allowed to be
     * </pre>
     *
     * <code>repeated string allowed = 6;</code>
     */
    java.util.List<java.lang.String>
        getAllowedList();
    /**
     * <pre>
     * used by methods to define what value / message types are allowed to be
     * </pre>
     *
     * <code>repeated string allowed = 6;</code>
     */
    int getAllowedCount();
    /**
     * <pre>
     * used by methods to define what value / message types are allowed to be
     * </pre>
     *
     * <code>repeated string allowed = 6;</code>
     */
    java.lang.String getAllowed(int index);
    /**
     * <pre>
     * used by methods to define what value / message types are allowed to be
     * </pre>
     *
     * <code>repeated string allowed = 6;</code>
     */
    com.google.protobuf.ByteString
        getAllowedBytes(int index);

    /**
     * <pre>
     * used by methods to describe how a port should be used
     * </pre>
     *
     * <code>string hint = 7;</code>
     */
    java.lang.String getHint();
    /**
     * <pre>
     * used by methods to describe how a port should be used
     * </pre>
     *
     * <code>string hint = 7;</code>
     */
    com.google.protobuf.ByteString
        getHintBytes();

    /**
     * <pre>
     * a constant value applied to the inport
     * </pre>
     *
     * <code>.TideChartProperty constant = 8;</code>
     */
    boolean hasConstant();
    /**
     * <pre>
     * a constant value applied to the inport
     * </pre>
     *
     * <code>.TideChartProperty constant = 8;</code>
     */
    TideChart.TideChartProperty getConstant();
    /**
     * <pre>
     * a constant value applied to the inport
     * </pre>
     *
     * <code>.TideChartProperty constant = 8;</code>
     */
    TideChart.TideChartPropertyOrBuilder getConstantOrBuilder();

    /**
     * <pre>
     * a trigger the inport automatically reads from 
     * </pre>
     *
     * <code>string trigger = 9;</code>
     */
    java.lang.String getTrigger();
    /**
     * <pre>
     * a trigger the inport automatically reads from 
     * </pre>
     *
     * <code>string trigger = 9;</code>
     */
    com.google.protobuf.ByteString
        getTriggerBytes();

    /**
     * <pre>
     * a filter or conditional expressions applied to messages received or sent
     * </pre>
     *
     * <code>string filter = 10;</code>
     */
    java.lang.String getFilter();
    /**
     * <pre>
     * a filter or conditional expressions applied to messages received or sent
     * </pre>
     *
     * <code>string filter = 10;</code>
     */
    com.google.protobuf.ByteString
        getFilterBytes();

    /**
     * <pre>
     * an event the outport automatically writes to
     * </pre>
     *
     * <code>string event = 11;</code>
     */
    java.lang.String getEvent();
    /**
     * <pre>
     * an event the outport automatically writes to
     * </pre>
     *
     * <code>string event = 11;</code>
     */
    com.google.protobuf.ByteString
        getEventBytes();

    /**
     * <pre>
     * creates a syncronizing group between ports
     * </pre>
     *
     * <code>string sync = 12;</code>
     */
    java.lang.String getSync();
    /**
     * <pre>
     * creates a syncronizing group between ports
     * </pre>
     *
     * <code>string sync = 12;</code>
     */
    com.google.protobuf.ByteString
        getSyncBytes();

    /**
     * <pre>
     * determines if the port will block to wait for the rest of the port group
     * </pre>
     *
     * <code>bool block = 13;</code>
     */
    boolean getBlock();

    /**
     * <pre>
     * determines if messages should queue while blocking or replace with latest received
     * </pre>
     *
     * <code>bool queue = 14;</code>
     */
    boolean getQueue();
  }
  /**
   * Protobuf type {@code TideChartPort}
   */
  public  static final class TideChartPort extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartPort)
      TideChartPortOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartPort.newBuilder() to construct.
    private TideChartPort(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartPort() {
      type_ = "";
      name_ = "";
      allowed_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      hint_ = "";
      trigger_ = "";
      filter_ = "";
      event_ = "";
      sync_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartPort();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartPort(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {

              ordinal_ = input.readInt32();
              break;
            }
            case 32: {

              default_ = input.readBool();
              break;
            }
            case 40: {

              required_ = input.readBool();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                allowed_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              allowed_.add(s);
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              hint_ = s;
              break;
            }
            case 66: {
              TideChart.TideChartProperty.Builder subBuilder = null;
              if (constant_ != null) {
                subBuilder = constant_.toBuilder();
              }
              constant_ = input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(constant_);
                constant_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              trigger_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              filter_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              event_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              sync_ = s;
              break;
            }
            case 104: {

              block_ = input.readBool();
              break;
            }
            case 112: {

              queue_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          allowed_ = allowed_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartPort_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartPort_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartPort.class, TideChart.TideChartPort.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of port: inport, outport
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of port: inport, outport
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * port name (unique to node scope)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * port name (unique to node scope)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORDINAL_FIELD_NUMBER = 3;
    private int ordinal_;
    /**
     * <pre>
     * position in the node's set of inports or outports
     * </pre>
     *
     * <code>int32 ordinal = 3;</code>
     */
    public int getOrdinal() {
      return ordinal_;
    }

    public static final int DEFAULT_FIELD_NUMBER = 4;
    private boolean default_;
    /**
     * <pre>
     * used by methods to indicate which ports are used for default in/out routing
     * </pre>
     *
     * <code>bool default = 4;</code>
     */
    public boolean getDefault() {
      return default_;
    }

    public static final int REQUIRED_FIELD_NUMBER = 5;
    private boolean required_;
    /**
     * <pre>
     * used by methods to indicate the port must exist
     * </pre>
     *
     * <code>bool required = 5;</code>
     */
    public boolean getRequired() {
      return required_;
    }

    public static final int ALLOWED_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList allowed_;
    /**
     * <pre>
     * used by methods to define what value / message types are allowed to be
     * </pre>
     *
     * <code>repeated string allowed = 6;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getAllowedList() {
      return allowed_;
    }
    /**
     * <pre>
     * used by methods to define what value / message types are allowed to be
     * </pre>
     *
     * <code>repeated string allowed = 6;</code>
     */
    public int getAllowedCount() {
      return allowed_.size();
    }
    /**
     * <pre>
     * used by methods to define what value / message types are allowed to be
     * </pre>
     *
     * <code>repeated string allowed = 6;</code>
     */
    public java.lang.String getAllowed(int index) {
      return allowed_.get(index);
    }
    /**
     * <pre>
     * used by methods to define what value / message types are allowed to be
     * </pre>
     *
     * <code>repeated string allowed = 6;</code>
     */
    public com.google.protobuf.ByteString
        getAllowedBytes(int index) {
      return allowed_.getByteString(index);
    }

    public static final int HINT_FIELD_NUMBER = 7;
    private volatile java.lang.Object hint_;
    /**
     * <pre>
     * used by methods to describe how a port should be used
     * </pre>
     *
     * <code>string hint = 7;</code>
     */
    public java.lang.String getHint() {
      java.lang.Object ref = hint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * used by methods to describe how a port should be used
     * </pre>
     *
     * <code>string hint = 7;</code>
     */
    public com.google.protobuf.ByteString
        getHintBytes() {
      java.lang.Object ref = hint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONSTANT_FIELD_NUMBER = 8;
    private TideChart.TideChartProperty constant_;
    /**
     * <pre>
     * a constant value applied to the inport
     * </pre>
     *
     * <code>.TideChartProperty constant = 8;</code>
     */
    public boolean hasConstant() {
      return constant_ != null;
    }
    /**
     * <pre>
     * a constant value applied to the inport
     * </pre>
     *
     * <code>.TideChartProperty constant = 8;</code>
     */
    public TideChart.TideChartProperty getConstant() {
      return constant_ == null ? TideChart.TideChartProperty.getDefaultInstance() : constant_;
    }
    /**
     * <pre>
     * a constant value applied to the inport
     * </pre>
     *
     * <code>.TideChartProperty constant = 8;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getConstantOrBuilder() {
      return getConstant();
    }

    public static final int TRIGGER_FIELD_NUMBER = 9;
    private volatile java.lang.Object trigger_;
    /**
     * <pre>
     * a trigger the inport automatically reads from 
     * </pre>
     *
     * <code>string trigger = 9;</code>
     */
    public java.lang.String getTrigger() {
      java.lang.Object ref = trigger_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        trigger_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a trigger the inport automatically reads from 
     * </pre>
     *
     * <code>string trigger = 9;</code>
     */
    public com.google.protobuf.ByteString
        getTriggerBytes() {
      java.lang.Object ref = trigger_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trigger_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILTER_FIELD_NUMBER = 10;
    private volatile java.lang.Object filter_;
    /**
     * <pre>
     * a filter or conditional expressions applied to messages received or sent
     * </pre>
     *
     * <code>string filter = 10;</code>
     */
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a filter or conditional expressions applied to messages received or sent
     * </pre>
     *
     * <code>string filter = 10;</code>
     */
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_FIELD_NUMBER = 11;
    private volatile java.lang.Object event_;
    /**
     * <pre>
     * an event the outport automatically writes to
     * </pre>
     *
     * <code>string event = 11;</code>
     */
    public java.lang.String getEvent() {
      java.lang.Object ref = event_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        event_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * an event the outport automatically writes to
     * </pre>
     *
     * <code>string event = 11;</code>
     */
    public com.google.protobuf.ByteString
        getEventBytes() {
      java.lang.Object ref = event_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        event_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYNC_FIELD_NUMBER = 12;
    private volatile java.lang.Object sync_;
    /**
     * <pre>
     * creates a syncronizing group between ports
     * </pre>
     *
     * <code>string sync = 12;</code>
     */
    public java.lang.String getSync() {
      java.lang.Object ref = sync_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sync_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * creates a syncronizing group between ports
     * </pre>
     *
     * <code>string sync = 12;</code>
     */
    public com.google.protobuf.ByteString
        getSyncBytes() {
      java.lang.Object ref = sync_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sync_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BLOCK_FIELD_NUMBER = 13;
    private boolean block_;
    /**
     * <pre>
     * determines if the port will block to wait for the rest of the port group
     * </pre>
     *
     * <code>bool block = 13;</code>
     */
    public boolean getBlock() {
      return block_;
    }

    public static final int QUEUE_FIELD_NUMBER = 14;
    private boolean queue_;
    /**
     * <pre>
     * determines if messages should queue while blocking or replace with latest received
     * </pre>
     *
     * <code>bool queue = 14;</code>
     */
    public boolean getQueue() {
      return queue_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (ordinal_ != 0) {
        output.writeInt32(3, ordinal_);
      }
      if (default_ != false) {
        output.writeBool(4, default_);
      }
      if (required_ != false) {
        output.writeBool(5, required_);
      }
      for (int i = 0; i < allowed_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, allowed_.getRaw(i));
      }
      if (!getHintBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, hint_);
      }
      if (constant_ != null) {
        output.writeMessage(8, getConstant());
      }
      if (!getTriggerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, trigger_);
      }
      if (!getFilterBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, filter_);
      }
      if (!getEventBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, event_);
      }
      if (!getSyncBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, sync_);
      }
      if (block_ != false) {
        output.writeBool(13, block_);
      }
      if (queue_ != false) {
        output.writeBool(14, queue_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (ordinal_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ordinal_);
      }
      if (default_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, default_);
      }
      if (required_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, required_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allowed_.size(); i++) {
          dataSize += computeStringSizeNoTag(allowed_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAllowedList().size();
      }
      if (!getHintBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, hint_);
      }
      if (constant_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getConstant());
      }
      if (!getTriggerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, trigger_);
      }
      if (!getFilterBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, filter_);
      }
      if (!getEventBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, event_);
      }
      if (!getSyncBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, sync_);
      }
      if (block_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, block_);
      }
      if (queue_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, queue_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartPort)) {
        return super.equals(obj);
      }
      TideChart.TideChartPort other = (TideChart.TideChartPort) obj;

      if (!getType()
          .equals(other.getType())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getOrdinal()
          != other.getOrdinal()) return false;
      if (getDefault()
          != other.getDefault()) return false;
      if (getRequired()
          != other.getRequired()) return false;
      if (!getAllowedList()
          .equals(other.getAllowedList())) return false;
      if (!getHint()
          .equals(other.getHint())) return false;
      if (hasConstant() != other.hasConstant()) return false;
      if (hasConstant()) {
        if (!getConstant()
            .equals(other.getConstant())) return false;
      }
      if (!getTrigger()
          .equals(other.getTrigger())) return false;
      if (!getFilter()
          .equals(other.getFilter())) return false;
      if (!getEvent()
          .equals(other.getEvent())) return false;
      if (!getSync()
          .equals(other.getSync())) return false;
      if (getBlock()
          != other.getBlock()) return false;
      if (getQueue()
          != other.getQueue()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + ORDINAL_FIELD_NUMBER;
      hash = (53 * hash) + getOrdinal();
      hash = (37 * hash) + DEFAULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDefault());
      hash = (37 * hash) + REQUIRED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequired());
      if (getAllowedCount() > 0) {
        hash = (37 * hash) + ALLOWED_FIELD_NUMBER;
        hash = (53 * hash) + getAllowedList().hashCode();
      }
      hash = (37 * hash) + HINT_FIELD_NUMBER;
      hash = (53 * hash) + getHint().hashCode();
      if (hasConstant()) {
        hash = (37 * hash) + CONSTANT_FIELD_NUMBER;
        hash = (53 * hash) + getConstant().hashCode();
      }
      hash = (37 * hash) + TRIGGER_FIELD_NUMBER;
      hash = (53 * hash) + getTrigger().hashCode();
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
      hash = (37 * hash) + EVENT_FIELD_NUMBER;
      hash = (53 * hash) + getEvent().hashCode();
      hash = (37 * hash) + SYNC_FIELD_NUMBER;
      hash = (53 * hash) + getSync().hashCode();
      hash = (37 * hash) + BLOCK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBlock());
      hash = (37 * hash) + QUEUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getQueue());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartPort parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPort parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPort parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPort parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPort parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPort parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPort parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPort parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartPort parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPort parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartPort parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPort parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartPort prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartPort}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartPort)
        TideChart.TideChartPortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartPort_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartPort_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartPort.class, TideChart.TideChartPort.Builder.class);
      }

      // Construct using TideChart.TideChartPort.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";

        name_ = "";

        ordinal_ = 0;

        default_ = false;

        required_ = false;

        allowed_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        hint_ = "";

        if (constantBuilder_ == null) {
          constant_ = null;
        } else {
          constant_ = null;
          constantBuilder_ = null;
        }
        trigger_ = "";

        filter_ = "";

        event_ = "";

        sync_ = "";

        block_ = false;

        queue_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartPort_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartPort getDefaultInstanceForType() {
        return TideChart.TideChartPort.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartPort build() {
        TideChart.TideChartPort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartPort buildPartial() {
        TideChart.TideChartPort result = new TideChart.TideChartPort(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.name_ = name_;
        result.ordinal_ = ordinal_;
        result.default_ = default_;
        result.required_ = required_;
        if (((bitField0_ & 0x00000001) != 0)) {
          allowed_ = allowed_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.allowed_ = allowed_;
        result.hint_ = hint_;
        if (constantBuilder_ == null) {
          result.constant_ = constant_;
        } else {
          result.constant_ = constantBuilder_.build();
        }
        result.trigger_ = trigger_;
        result.filter_ = filter_;
        result.event_ = event_;
        result.sync_ = sync_;
        result.block_ = block_;
        result.queue_ = queue_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartPort) {
          return mergeFrom((TideChart.TideChartPort)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartPort other) {
        if (other == TideChart.TideChartPort.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getOrdinal() != 0) {
          setOrdinal(other.getOrdinal());
        }
        if (other.getDefault() != false) {
          setDefault(other.getDefault());
        }
        if (other.getRequired() != false) {
          setRequired(other.getRequired());
        }
        if (!other.allowed_.isEmpty()) {
          if (allowed_.isEmpty()) {
            allowed_ = other.allowed_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAllowedIsMutable();
            allowed_.addAll(other.allowed_);
          }
          onChanged();
        }
        if (!other.getHint().isEmpty()) {
          hint_ = other.hint_;
          onChanged();
        }
        if (other.hasConstant()) {
          mergeConstant(other.getConstant());
        }
        if (!other.getTrigger().isEmpty()) {
          trigger_ = other.trigger_;
          onChanged();
        }
        if (!other.getFilter().isEmpty()) {
          filter_ = other.filter_;
          onChanged();
        }
        if (!other.getEvent().isEmpty()) {
          event_ = other.event_;
          onChanged();
        }
        if (!other.getSync().isEmpty()) {
          sync_ = other.sync_;
          onChanged();
        }
        if (other.getBlock() != false) {
          setBlock(other.getBlock());
        }
        if (other.getQueue() != false) {
          setQueue(other.getQueue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartPort parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartPort) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of port: inport, outport
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of port: inport, outport
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of port: inport, outport
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of port: inport, outport
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of port: inport, outport
       * </pre>
       *
       * <code>string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * port name (unique to node scope)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * port name (unique to node scope)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * port name (unique to node scope)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port name (unique to node scope)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port name (unique to node scope)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int ordinal_ ;
      /**
       * <pre>
       * position in the node's set of inports or outports
       * </pre>
       *
       * <code>int32 ordinal = 3;</code>
       */
      public int getOrdinal() {
        return ordinal_;
      }
      /**
       * <pre>
       * position in the node's set of inports or outports
       * </pre>
       *
       * <code>int32 ordinal = 3;</code>
       */
      public Builder setOrdinal(int value) {
        
        ordinal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * position in the node's set of inports or outports
       * </pre>
       *
       * <code>int32 ordinal = 3;</code>
       */
      public Builder clearOrdinal() {
        
        ordinal_ = 0;
        onChanged();
        return this;
      }

      private boolean default_ ;
      /**
       * <pre>
       * used by methods to indicate which ports are used for default in/out routing
       * </pre>
       *
       * <code>bool default = 4;</code>
       */
      public boolean getDefault() {
        return default_;
      }
      /**
       * <pre>
       * used by methods to indicate which ports are used for default in/out routing
       * </pre>
       *
       * <code>bool default = 4;</code>
       */
      public Builder setDefault(boolean value) {
        
        default_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * used by methods to indicate which ports are used for default in/out routing
       * </pre>
       *
       * <code>bool default = 4;</code>
       */
      public Builder clearDefault() {
        
        default_ = false;
        onChanged();
        return this;
      }

      private boolean required_ ;
      /**
       * <pre>
       * used by methods to indicate the port must exist
       * </pre>
       *
       * <code>bool required = 5;</code>
       */
      public boolean getRequired() {
        return required_;
      }
      /**
       * <pre>
       * used by methods to indicate the port must exist
       * </pre>
       *
       * <code>bool required = 5;</code>
       */
      public Builder setRequired(boolean value) {
        
        required_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * used by methods to indicate the port must exist
       * </pre>
       *
       * <code>bool required = 5;</code>
       */
      public Builder clearRequired() {
        
        required_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList allowed_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAllowedIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          allowed_ = new com.google.protobuf.LazyStringArrayList(allowed_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getAllowedList() {
        return allowed_.getUnmodifiableView();
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public int getAllowedCount() {
        return allowed_.size();
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public java.lang.String getAllowed(int index) {
        return allowed_.get(index);
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public com.google.protobuf.ByteString
          getAllowedBytes(int index) {
        return allowed_.getByteString(index);
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public Builder setAllowed(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllowedIsMutable();
        allowed_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public Builder addAllowed(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllowedIsMutable();
        allowed_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public Builder addAllAllowed(
          java.lang.Iterable<java.lang.String> values) {
        ensureAllowedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allowed_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public Builder clearAllowed() {
        allowed_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * used by methods to define what value / message types are allowed to be
       * </pre>
       *
       * <code>repeated string allowed = 6;</code>
       */
      public Builder addAllowedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureAllowedIsMutable();
        allowed_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object hint_ = "";
      /**
       * <pre>
       * used by methods to describe how a port should be used
       * </pre>
       *
       * <code>string hint = 7;</code>
       */
      public java.lang.String getHint() {
        java.lang.Object ref = hint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * used by methods to describe how a port should be used
       * </pre>
       *
       * <code>string hint = 7;</code>
       */
      public com.google.protobuf.ByteString
          getHintBytes() {
        java.lang.Object ref = hint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * used by methods to describe how a port should be used
       * </pre>
       *
       * <code>string hint = 7;</code>
       */
      public Builder setHint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * used by methods to describe how a port should be used
       * </pre>
       *
       * <code>string hint = 7;</code>
       */
      public Builder clearHint() {
        
        hint_ = getDefaultInstance().getHint();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * used by methods to describe how a port should be used
       * </pre>
       *
       * <code>string hint = 7;</code>
       */
      public Builder setHintBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hint_ = value;
        onChanged();
        return this;
      }

      private TideChart.TideChartProperty constant_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> constantBuilder_;
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      public boolean hasConstant() {
        return constantBuilder_ != null || constant_ != null;
      }
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      public TideChart.TideChartProperty getConstant() {
        if (constantBuilder_ == null) {
          return constant_ == null ? TideChart.TideChartProperty.getDefaultInstance() : constant_;
        } else {
          return constantBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      public Builder setConstant(TideChart.TideChartProperty value) {
        if (constantBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          constant_ = value;
          onChanged();
        } else {
          constantBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      public Builder setConstant(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (constantBuilder_ == null) {
          constant_ = builderForValue.build();
          onChanged();
        } else {
          constantBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      public Builder mergeConstant(TideChart.TideChartProperty value) {
        if (constantBuilder_ == null) {
          if (constant_ != null) {
            constant_ =
              TideChart.TideChartProperty.newBuilder(constant_).mergeFrom(value).buildPartial();
          } else {
            constant_ = value;
          }
          onChanged();
        } else {
          constantBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      public Builder clearConstant() {
        if (constantBuilder_ == null) {
          constant_ = null;
          onChanged();
        } else {
          constant_ = null;
          constantBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      public TideChart.TideChartProperty.Builder getConstantBuilder() {
        
        onChanged();
        return getConstantFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getConstantOrBuilder() {
        if (constantBuilder_ != null) {
          return constantBuilder_.getMessageOrBuilder();
        } else {
          return constant_ == null ?
              TideChart.TideChartProperty.getDefaultInstance() : constant_;
        }
      }
      /**
       * <pre>
       * a constant value applied to the inport
       * </pre>
       *
       * <code>.TideChartProperty constant = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getConstantFieldBuilder() {
        if (constantBuilder_ == null) {
          constantBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  getConstant(),
                  getParentForChildren(),
                  isClean());
          constant_ = null;
        }
        return constantBuilder_;
      }

      private java.lang.Object trigger_ = "";
      /**
       * <pre>
       * a trigger the inport automatically reads from 
       * </pre>
       *
       * <code>string trigger = 9;</code>
       */
      public java.lang.String getTrigger() {
        java.lang.Object ref = trigger_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          trigger_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a trigger the inport automatically reads from 
       * </pre>
       *
       * <code>string trigger = 9;</code>
       */
      public com.google.protobuf.ByteString
          getTriggerBytes() {
        java.lang.Object ref = trigger_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trigger_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a trigger the inport automatically reads from 
       * </pre>
       *
       * <code>string trigger = 9;</code>
       */
      public Builder setTrigger(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        trigger_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a trigger the inport automatically reads from 
       * </pre>
       *
       * <code>string trigger = 9;</code>
       */
      public Builder clearTrigger() {
        
        trigger_ = getDefaultInstance().getTrigger();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a trigger the inport automatically reads from 
       * </pre>
       *
       * <code>string trigger = 9;</code>
       */
      public Builder setTriggerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        trigger_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filter_ = "";
      /**
       * <pre>
       * a filter or conditional expressions applied to messages received or sent
       * </pre>
       *
       * <code>string filter = 10;</code>
       */
      public java.lang.String getFilter() {
        java.lang.Object ref = filter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a filter or conditional expressions applied to messages received or sent
       * </pre>
       *
       * <code>string filter = 10;</code>
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        java.lang.Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a filter or conditional expressions applied to messages received or sent
       * </pre>
       *
       * <code>string filter = 10;</code>
       */
      public Builder setFilter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a filter or conditional expressions applied to messages received or sent
       * </pre>
       *
       * <code>string filter = 10;</code>
       */
      public Builder clearFilter() {
        
        filter_ = getDefaultInstance().getFilter();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a filter or conditional expressions applied to messages received or sent
       * </pre>
       *
       * <code>string filter = 10;</code>
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filter_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object event_ = "";
      /**
       * <pre>
       * an event the outport automatically writes to
       * </pre>
       *
       * <code>string event = 11;</code>
       */
      public java.lang.String getEvent() {
        java.lang.Object ref = event_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          event_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * an event the outport automatically writes to
       * </pre>
       *
       * <code>string event = 11;</code>
       */
      public com.google.protobuf.ByteString
          getEventBytes() {
        java.lang.Object ref = event_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          event_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * an event the outport automatically writes to
       * </pre>
       *
       * <code>string event = 11;</code>
       */
      public Builder setEvent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        event_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * an event the outport automatically writes to
       * </pre>
       *
       * <code>string event = 11;</code>
       */
      public Builder clearEvent() {
        
        event_ = getDefaultInstance().getEvent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * an event the outport automatically writes to
       * </pre>
       *
       * <code>string event = 11;</code>
       */
      public Builder setEventBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        event_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sync_ = "";
      /**
       * <pre>
       * creates a syncronizing group between ports
       * </pre>
       *
       * <code>string sync = 12;</code>
       */
      public java.lang.String getSync() {
        java.lang.Object ref = sync_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sync_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * creates a syncronizing group between ports
       * </pre>
       *
       * <code>string sync = 12;</code>
       */
      public com.google.protobuf.ByteString
          getSyncBytes() {
        java.lang.Object ref = sync_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sync_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * creates a syncronizing group between ports
       * </pre>
       *
       * <code>string sync = 12;</code>
       */
      public Builder setSync(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sync_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * creates a syncronizing group between ports
       * </pre>
       *
       * <code>string sync = 12;</code>
       */
      public Builder clearSync() {
        
        sync_ = getDefaultInstance().getSync();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * creates a syncronizing group between ports
       * </pre>
       *
       * <code>string sync = 12;</code>
       */
      public Builder setSyncBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sync_ = value;
        onChanged();
        return this;
      }

      private boolean block_ ;
      /**
       * <pre>
       * determines if the port will block to wait for the rest of the port group
       * </pre>
       *
       * <code>bool block = 13;</code>
       */
      public boolean getBlock() {
        return block_;
      }
      /**
       * <pre>
       * determines if the port will block to wait for the rest of the port group
       * </pre>
       *
       * <code>bool block = 13;</code>
       */
      public Builder setBlock(boolean value) {
        
        block_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * determines if the port will block to wait for the rest of the port group
       * </pre>
       *
       * <code>bool block = 13;</code>
       */
      public Builder clearBlock() {
        
        block_ = false;
        onChanged();
        return this;
      }

      private boolean queue_ ;
      /**
       * <pre>
       * determines if messages should queue while blocking or replace with latest received
       * </pre>
       *
       * <code>bool queue = 14;</code>
       */
      public boolean getQueue() {
        return queue_;
      }
      /**
       * <pre>
       * determines if messages should queue while blocking or replace with latest received
       * </pre>
       *
       * <code>bool queue = 14;</code>
       */
      public Builder setQueue(boolean value) {
        
        queue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * determines if messages should queue while blocking or replace with latest received
       * </pre>
       *
       * <code>bool queue = 14;</code>
       */
      public Builder clearQueue() {
        
        queue_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartPort)
    }

    // @@protoc_insertion_point(class_scope:TideChartPort)
    private static final TideChart.TideChartPort DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartPort();
    }

    public static TideChart.TideChartPort getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartPort>
        PARSER = new com.google.protobuf.AbstractParser<TideChartPort>() {
      @java.lang.Override
      public TideChartPort parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartPort(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartPort> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartPort> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartPort getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartLinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartLink)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * linking from node outports
     * </pre>
     *
     * <code>string outNode = 1;</code>
     */
    java.lang.String getOutNode();
    /**
     * <pre>
     * linking from node outports
     * </pre>
     *
     * <code>string outNode = 1;</code>
     */
    com.google.protobuf.ByteString
        getOutNodeBytes();

    /**
     * <pre>
     * outport linked from
     * </pre>
     *
     * <code>string outPort = 2;</code>
     */
    java.lang.String getOutPort();
    /**
     * <pre>
     * outport linked from
     * </pre>
     *
     * <code>string outPort = 2;</code>
     */
    com.google.protobuf.ByteString
        getOutPortBytes();

    /**
     * <pre>
     * linking to node inports
     * </pre>
     *
     * <code>string inNode = 3;</code>
     */
    java.lang.String getInNode();
    /**
     * <pre>
     * linking to node inports
     * </pre>
     *
     * <code>string inNode = 3;</code>
     */
    com.google.protobuf.ByteString
        getInNodeBytes();

    /**
     * <pre>
     * inport linked to
     * </pre>
     *
     * <code>string inPort = 4;</code>
     */
    java.lang.String getInPort();
    /**
     * <pre>
     * inport linked to
     * </pre>
     *
     * <code>string inPort = 4;</code>
     */
    com.google.protobuf.ByteString
        getInPortBytes();

    /**
     * <pre>
     * links can be associated into groups (usually just determins color)
     * </pre>
     *
     * <code>int32 group = 5;</code>
     */
    int getGroup();

    /**
     * <pre>
     * automatic time delay (msec) added to messages (equivalent to routing thru a delay node)
     * </pre>
     *
     * <code>int32 delay = 6;</code>
     */
    int getDelay();

    /**
     * <pre>
     * a filter or conditional expression applied to messages on the link
     * </pre>
     *
     * <code>string filter = 7;</code>
     */
    java.lang.String getFilter();
    /**
     * <pre>
     * a filter or conditional expression applied to messages on the link
     * </pre>
     *
     * <code>string filter = 7;</code>
     */
    com.google.protobuf.ByteString
        getFilterBytes();

    /**
     * <pre>
     * flag indicating this link will trace messages
     * </pre>
     *
     * <code>bool logging = 16;</code>
     */
    boolean getLogging();

    /**
     * <pre>
     * flag indicating this link is a debug breakpoint
     * </pre>
     *
     * <code>bool debugging = 17;</code>
     */
    boolean getDebugging();

    /**
     * <pre>
     * flag indicating this link is paused (messages are queued)
     * </pre>
     *
     * <code>bool paused = 18;</code>
     */
    boolean getPaused();

    /**
     * <pre>
     * flag indicating this link is disabled (messages are dropped)
     * </pre>
     *
     * <code>bool disabled = 19;</code>
     */
    boolean getDisabled();
  }
  /**
   * Protobuf type {@code TideChartLink}
   */
  public  static final class TideChartLink extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartLink)
      TideChartLinkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartLink.newBuilder() to construct.
    private TideChartLink(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartLink() {
      outNode_ = "";
      outPort_ = "";
      inNode_ = "";
      inPort_ = "";
      filter_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartLink();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartLink(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              outNode_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              outPort_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              inNode_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              inPort_ = s;
              break;
            }
            case 40: {

              group_ = input.readInt32();
              break;
            }
            case 48: {

              delay_ = input.readInt32();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              filter_ = s;
              break;
            }
            case 128: {

              logging_ = input.readBool();
              break;
            }
            case 136: {

              debugging_ = input.readBool();
              break;
            }
            case 144: {

              paused_ = input.readBool();
              break;
            }
            case 152: {

              disabled_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartLink_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartLink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartLink.class, TideChart.TideChartLink.Builder.class);
    }

    public static final int OUTNODE_FIELD_NUMBER = 1;
    private volatile java.lang.Object outNode_;
    /**
     * <pre>
     * linking from node outports
     * </pre>
     *
     * <code>string outNode = 1;</code>
     */
    public java.lang.String getOutNode() {
      java.lang.Object ref = outNode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        outNode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * linking from node outports
     * </pre>
     *
     * <code>string outNode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getOutNodeBytes() {
      java.lang.Object ref = outNode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outNode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OUTPORT_FIELD_NUMBER = 2;
    private volatile java.lang.Object outPort_;
    /**
     * <pre>
     * outport linked from
     * </pre>
     *
     * <code>string outPort = 2;</code>
     */
    public java.lang.String getOutPort() {
      java.lang.Object ref = outPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        outPort_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * outport linked from
     * </pre>
     *
     * <code>string outPort = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOutPortBytes() {
      java.lang.Object ref = outPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INNODE_FIELD_NUMBER = 3;
    private volatile java.lang.Object inNode_;
    /**
     * <pre>
     * linking to node inports
     * </pre>
     *
     * <code>string inNode = 3;</code>
     */
    public java.lang.String getInNode() {
      java.lang.Object ref = inNode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inNode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * linking to node inports
     * </pre>
     *
     * <code>string inNode = 3;</code>
     */
    public com.google.protobuf.ByteString
        getInNodeBytes() {
      java.lang.Object ref = inNode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inNode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INPORT_FIELD_NUMBER = 4;
    private volatile java.lang.Object inPort_;
    /**
     * <pre>
     * inport linked to
     * </pre>
     *
     * <code>string inPort = 4;</code>
     */
    public java.lang.String getInPort() {
      java.lang.Object ref = inPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inPort_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * inport linked to
     * </pre>
     *
     * <code>string inPort = 4;</code>
     */
    public com.google.protobuf.ByteString
        getInPortBytes() {
      java.lang.Object ref = inPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GROUP_FIELD_NUMBER = 5;
    private int group_;
    /**
     * <pre>
     * links can be associated into groups (usually just determins color)
     * </pre>
     *
     * <code>int32 group = 5;</code>
     */
    public int getGroup() {
      return group_;
    }

    public static final int DELAY_FIELD_NUMBER = 6;
    private int delay_;
    /**
     * <pre>
     * automatic time delay (msec) added to messages (equivalent to routing thru a delay node)
     * </pre>
     *
     * <code>int32 delay = 6;</code>
     */
    public int getDelay() {
      return delay_;
    }

    public static final int FILTER_FIELD_NUMBER = 7;
    private volatile java.lang.Object filter_;
    /**
     * <pre>
     * a filter or conditional expression applied to messages on the link
     * </pre>
     *
     * <code>string filter = 7;</code>
     */
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a filter or conditional expression applied to messages on the link
     * </pre>
     *
     * <code>string filter = 7;</code>
     */
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGGING_FIELD_NUMBER = 16;
    private boolean logging_;
    /**
     * <pre>
     * flag indicating this link will trace messages
     * </pre>
     *
     * <code>bool logging = 16;</code>
     */
    public boolean getLogging() {
      return logging_;
    }

    public static final int DEBUGGING_FIELD_NUMBER = 17;
    private boolean debugging_;
    /**
     * <pre>
     * flag indicating this link is a debug breakpoint
     * </pre>
     *
     * <code>bool debugging = 17;</code>
     */
    public boolean getDebugging() {
      return debugging_;
    }

    public static final int PAUSED_FIELD_NUMBER = 18;
    private boolean paused_;
    /**
     * <pre>
     * flag indicating this link is paused (messages are queued)
     * </pre>
     *
     * <code>bool paused = 18;</code>
     */
    public boolean getPaused() {
      return paused_;
    }

    public static final int DISABLED_FIELD_NUMBER = 19;
    private boolean disabled_;
    /**
     * <pre>
     * flag indicating this link is disabled (messages are dropped)
     * </pre>
     *
     * <code>bool disabled = 19;</code>
     */
    public boolean getDisabled() {
      return disabled_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getOutNodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, outNode_);
      }
      if (!getOutPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, outPort_);
      }
      if (!getInNodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, inNode_);
      }
      if (!getInPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, inPort_);
      }
      if (group_ != 0) {
        output.writeInt32(5, group_);
      }
      if (delay_ != 0) {
        output.writeInt32(6, delay_);
      }
      if (!getFilterBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, filter_);
      }
      if (logging_ != false) {
        output.writeBool(16, logging_);
      }
      if (debugging_ != false) {
        output.writeBool(17, debugging_);
      }
      if (paused_ != false) {
        output.writeBool(18, paused_);
      }
      if (disabled_ != false) {
        output.writeBool(19, disabled_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getOutNodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, outNode_);
      }
      if (!getOutPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, outPort_);
      }
      if (!getInNodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, inNode_);
      }
      if (!getInPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, inPort_);
      }
      if (group_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, group_);
      }
      if (delay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, delay_);
      }
      if (!getFilterBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, filter_);
      }
      if (logging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, logging_);
      }
      if (debugging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, debugging_);
      }
      if (paused_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, paused_);
      }
      if (disabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, disabled_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartLink)) {
        return super.equals(obj);
      }
      TideChart.TideChartLink other = (TideChart.TideChartLink) obj;

      if (!getOutNode()
          .equals(other.getOutNode())) return false;
      if (!getOutPort()
          .equals(other.getOutPort())) return false;
      if (!getInNode()
          .equals(other.getInNode())) return false;
      if (!getInPort()
          .equals(other.getInPort())) return false;
      if (getGroup()
          != other.getGroup()) return false;
      if (getDelay()
          != other.getDelay()) return false;
      if (!getFilter()
          .equals(other.getFilter())) return false;
      if (getLogging()
          != other.getLogging()) return false;
      if (getDebugging()
          != other.getDebugging()) return false;
      if (getPaused()
          != other.getPaused()) return false;
      if (getDisabled()
          != other.getDisabled()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OUTNODE_FIELD_NUMBER;
      hash = (53 * hash) + getOutNode().hashCode();
      hash = (37 * hash) + OUTPORT_FIELD_NUMBER;
      hash = (53 * hash) + getOutPort().hashCode();
      hash = (37 * hash) + INNODE_FIELD_NUMBER;
      hash = (53 * hash) + getInNode().hashCode();
      hash = (37 * hash) + INPORT_FIELD_NUMBER;
      hash = (53 * hash) + getInPort().hashCode();
      hash = (37 * hash) + GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getGroup();
      hash = (37 * hash) + DELAY_FIELD_NUMBER;
      hash = (53 * hash) + getDelay();
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
      hash = (37 * hash) + LOGGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLogging());
      hash = (37 * hash) + DEBUGGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebugging());
      hash = (37 * hash) + PAUSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPaused());
      hash = (37 * hash) + DISABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisabled());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartLink parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLink parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLink parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLink parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLink parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLink parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLink parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLink parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartLink parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLink parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartLink parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLink parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartLink prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartLink}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartLink)
        TideChart.TideChartLinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartLink_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartLink_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartLink.class, TideChart.TideChartLink.Builder.class);
      }

      // Construct using TideChart.TideChartLink.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        outNode_ = "";

        outPort_ = "";

        inNode_ = "";

        inPort_ = "";

        group_ = 0;

        delay_ = 0;

        filter_ = "";

        logging_ = false;

        debugging_ = false;

        paused_ = false;

        disabled_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartLink_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartLink getDefaultInstanceForType() {
        return TideChart.TideChartLink.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartLink build() {
        TideChart.TideChartLink result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartLink buildPartial() {
        TideChart.TideChartLink result = new TideChart.TideChartLink(this);
        result.outNode_ = outNode_;
        result.outPort_ = outPort_;
        result.inNode_ = inNode_;
        result.inPort_ = inPort_;
        result.group_ = group_;
        result.delay_ = delay_;
        result.filter_ = filter_;
        result.logging_ = logging_;
        result.debugging_ = debugging_;
        result.paused_ = paused_;
        result.disabled_ = disabled_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartLink) {
          return mergeFrom((TideChart.TideChartLink)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartLink other) {
        if (other == TideChart.TideChartLink.getDefaultInstance()) return this;
        if (!other.getOutNode().isEmpty()) {
          outNode_ = other.outNode_;
          onChanged();
        }
        if (!other.getOutPort().isEmpty()) {
          outPort_ = other.outPort_;
          onChanged();
        }
        if (!other.getInNode().isEmpty()) {
          inNode_ = other.inNode_;
          onChanged();
        }
        if (!other.getInPort().isEmpty()) {
          inPort_ = other.inPort_;
          onChanged();
        }
        if (other.getGroup() != 0) {
          setGroup(other.getGroup());
        }
        if (other.getDelay() != 0) {
          setDelay(other.getDelay());
        }
        if (!other.getFilter().isEmpty()) {
          filter_ = other.filter_;
          onChanged();
        }
        if (other.getLogging() != false) {
          setLogging(other.getLogging());
        }
        if (other.getDebugging() != false) {
          setDebugging(other.getDebugging());
        }
        if (other.getPaused() != false) {
          setPaused(other.getPaused());
        }
        if (other.getDisabled() != false) {
          setDisabled(other.getDisabled());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartLink parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartLink) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object outNode_ = "";
      /**
       * <pre>
       * linking from node outports
       * </pre>
       *
       * <code>string outNode = 1;</code>
       */
      public java.lang.String getOutNode() {
        java.lang.Object ref = outNode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          outNode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * linking from node outports
       * </pre>
       *
       * <code>string outNode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getOutNodeBytes() {
        java.lang.Object ref = outNode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          outNode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * linking from node outports
       * </pre>
       *
       * <code>string outNode = 1;</code>
       */
      public Builder setOutNode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        outNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * linking from node outports
       * </pre>
       *
       * <code>string outNode = 1;</code>
       */
      public Builder clearOutNode() {
        
        outNode_ = getDefaultInstance().getOutNode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * linking from node outports
       * </pre>
       *
       * <code>string outNode = 1;</code>
       */
      public Builder setOutNodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        outNode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object outPort_ = "";
      /**
       * <pre>
       * outport linked from
       * </pre>
       *
       * <code>string outPort = 2;</code>
       */
      public java.lang.String getOutPort() {
        java.lang.Object ref = outPort_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          outPort_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * outport linked from
       * </pre>
       *
       * <code>string outPort = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOutPortBytes() {
        java.lang.Object ref = outPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          outPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * outport linked from
       * </pre>
       *
       * <code>string outPort = 2;</code>
       */
      public Builder setOutPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        outPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * outport linked from
       * </pre>
       *
       * <code>string outPort = 2;</code>
       */
      public Builder clearOutPort() {
        
        outPort_ = getDefaultInstance().getOutPort();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * outport linked from
       * </pre>
       *
       * <code>string outPort = 2;</code>
       */
      public Builder setOutPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        outPort_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object inNode_ = "";
      /**
       * <pre>
       * linking to node inports
       * </pre>
       *
       * <code>string inNode = 3;</code>
       */
      public java.lang.String getInNode() {
        java.lang.Object ref = inNode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          inNode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * linking to node inports
       * </pre>
       *
       * <code>string inNode = 3;</code>
       */
      public com.google.protobuf.ByteString
          getInNodeBytes() {
        java.lang.Object ref = inNode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inNode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * linking to node inports
       * </pre>
       *
       * <code>string inNode = 3;</code>
       */
      public Builder setInNode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        inNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * linking to node inports
       * </pre>
       *
       * <code>string inNode = 3;</code>
       */
      public Builder clearInNode() {
        
        inNode_ = getDefaultInstance().getInNode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * linking to node inports
       * </pre>
       *
       * <code>string inNode = 3;</code>
       */
      public Builder setInNodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        inNode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object inPort_ = "";
      /**
       * <pre>
       * inport linked to
       * </pre>
       *
       * <code>string inPort = 4;</code>
       */
      public java.lang.String getInPort() {
        java.lang.Object ref = inPort_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          inPort_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * inport linked to
       * </pre>
       *
       * <code>string inPort = 4;</code>
       */
      public com.google.protobuf.ByteString
          getInPortBytes() {
        java.lang.Object ref = inPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * inport linked to
       * </pre>
       *
       * <code>string inPort = 4;</code>
       */
      public Builder setInPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        inPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * inport linked to
       * </pre>
       *
       * <code>string inPort = 4;</code>
       */
      public Builder clearInPort() {
        
        inPort_ = getDefaultInstance().getInPort();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * inport linked to
       * </pre>
       *
       * <code>string inPort = 4;</code>
       */
      public Builder setInPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        inPort_ = value;
        onChanged();
        return this;
      }

      private int group_ ;
      /**
       * <pre>
       * links can be associated into groups (usually just determins color)
       * </pre>
       *
       * <code>int32 group = 5;</code>
       */
      public int getGroup() {
        return group_;
      }
      /**
       * <pre>
       * links can be associated into groups (usually just determins color)
       * </pre>
       *
       * <code>int32 group = 5;</code>
       */
      public Builder setGroup(int value) {
        
        group_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * links can be associated into groups (usually just determins color)
       * </pre>
       *
       * <code>int32 group = 5;</code>
       */
      public Builder clearGroup() {
        
        group_ = 0;
        onChanged();
        return this;
      }

      private int delay_ ;
      /**
       * <pre>
       * automatic time delay (msec) added to messages (equivalent to routing thru a delay node)
       * </pre>
       *
       * <code>int32 delay = 6;</code>
       */
      public int getDelay() {
        return delay_;
      }
      /**
       * <pre>
       * automatic time delay (msec) added to messages (equivalent to routing thru a delay node)
       * </pre>
       *
       * <code>int32 delay = 6;</code>
       */
      public Builder setDelay(int value) {
        
        delay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * automatic time delay (msec) added to messages (equivalent to routing thru a delay node)
       * </pre>
       *
       * <code>int32 delay = 6;</code>
       */
      public Builder clearDelay() {
        
        delay_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object filter_ = "";
      /**
       * <pre>
       * a filter or conditional expression applied to messages on the link
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public java.lang.String getFilter() {
        java.lang.Object ref = filter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a filter or conditional expression applied to messages on the link
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        java.lang.Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a filter or conditional expression applied to messages on the link
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public Builder setFilter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a filter or conditional expression applied to messages on the link
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public Builder clearFilter() {
        
        filter_ = getDefaultInstance().getFilter();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a filter or conditional expression applied to messages on the link
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filter_ = value;
        onChanged();
        return this;
      }

      private boolean logging_ ;
      /**
       * <pre>
       * flag indicating this link will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public boolean getLogging() {
        return logging_;
      }
      /**
       * <pre>
       * flag indicating this link will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public Builder setLogging(boolean value) {
        
        logging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this link will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public Builder clearLogging() {
        
        logging_ = false;
        onChanged();
        return this;
      }

      private boolean debugging_ ;
      /**
       * <pre>
       * flag indicating this link is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public boolean getDebugging() {
        return debugging_;
      }
      /**
       * <pre>
       * flag indicating this link is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public Builder setDebugging(boolean value) {
        
        debugging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this link is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public Builder clearDebugging() {
        
        debugging_ = false;
        onChanged();
        return this;
      }

      private boolean paused_ ;
      /**
       * <pre>
       * flag indicating this link is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public boolean getPaused() {
        return paused_;
      }
      /**
       * <pre>
       * flag indicating this link is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public Builder setPaused(boolean value) {
        
        paused_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this link is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public Builder clearPaused() {
        
        paused_ = false;
        onChanged();
        return this;
      }

      private boolean disabled_ ;
      /**
       * <pre>
       * flag indicating this link is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public boolean getDisabled() {
        return disabled_;
      }
      /**
       * <pre>
       * flag indicating this link is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public Builder setDisabled(boolean value) {
        
        disabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this link is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public Builder clearDisabled() {
        
        disabled_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartLink)
    }

    // @@protoc_insertion_point(class_scope:TideChartLink)
    private static final TideChart.TideChartLink DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartLink();
    }

    public static TideChart.TideChartLink getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartLink>
        PARSER = new com.google.protobuf.AbstractParser<TideChartLink>() {
      @java.lang.Override
      public TideChartLink parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartLink(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartLink> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartLink> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartLink getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartNoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartNote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for the note
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for the note
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * reference to note this replies to
     * </pre>
     *
     * <code>string replyTo = 2;</code>
     */
    java.lang.String getReplyTo();
    /**
     * <pre>
     * reference to note this replies to
     * </pre>
     *
     * <code>string replyTo = 2;</code>
     */
    com.google.protobuf.ByteString
        getReplyToBytes();

    /**
     * <pre>
     * reference to note this replaces
     * </pre>
     *
     * <code>string changeTo = 3;</code>
     */
    java.lang.String getChangeTo();
    /**
     * <pre>
     * reference to note this replaces
     * </pre>
     *
     * <code>string changeTo = 3;</code>
     */
    com.google.protobuf.ByteString
        getChangeToBytes();

    /**
     * <pre>
     * content of note (Markdown and :icons allowed)
     * </pre>
     *
     * <code>string content = 4;</code>
     */
    java.lang.String getContent();
    /**
     * <pre>
     * content of note (Markdown and :icons allowed)
     * </pre>
     *
     * <code>string content = 4;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    /**
     * <pre>
     * user that created the note
     * </pre>
     *
     * <code>string createdBy = 5;</code>
     */
    java.lang.String getCreatedBy();
    /**
     * <pre>
     * user that created the note
     * </pre>
     *
     * <code>string createdBy = 5;</code>
     */
    com.google.protobuf.ByteString
        getCreatedByBytes();

    /**
     * <pre>
     * datetime the note was created
     * </pre>
     *
     * <code>string createdDate = 6;</code>
     */
    java.lang.String getCreatedDate();
    /**
     * <pre>
     * datetime the note was created
     * </pre>
     *
     * <code>string createdDate = 6;</code>
     */
    com.google.protobuf.ByteString
        getCreatedDateBytes();
  }
  /**
   * Protobuf type {@code TideChartNote}
   */
  public  static final class TideChartNote extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartNote)
      TideChartNoteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartNote.newBuilder() to construct.
    private TideChartNote(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartNote() {
      id_ = "";
      replyTo_ = "";
      changeTo_ = "";
      content_ = "";
      createdBy_ = "";
      createdDate_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartNote();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartNote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              replyTo_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              changeTo_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              content_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              createdBy_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              createdDate_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartNote_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartNote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartNote.class, TideChart.TideChartNote.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for the note
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for the note
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPLYTO_FIELD_NUMBER = 2;
    private volatile java.lang.Object replyTo_;
    /**
     * <pre>
     * reference to note this replies to
     * </pre>
     *
     * <code>string replyTo = 2;</code>
     */
    public java.lang.String getReplyTo() {
      java.lang.Object ref = replyTo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        replyTo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * reference to note this replies to
     * </pre>
     *
     * <code>string replyTo = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReplyToBytes() {
      java.lang.Object ref = replyTo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        replyTo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANGETO_FIELD_NUMBER = 3;
    private volatile java.lang.Object changeTo_;
    /**
     * <pre>
     * reference to note this replaces
     * </pre>
     *
     * <code>string changeTo = 3;</code>
     */
    public java.lang.String getChangeTo() {
      java.lang.Object ref = changeTo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        changeTo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * reference to note this replaces
     * </pre>
     *
     * <code>string changeTo = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChangeToBytes() {
      java.lang.Object ref = changeTo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        changeTo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENT_FIELD_NUMBER = 4;
    private volatile java.lang.Object content_;
    /**
     * <pre>
     * content of note (Markdown and :icons allowed)
     * </pre>
     *
     * <code>string content = 4;</code>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        content_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * content of note (Markdown and :icons allowed)
     * </pre>
     *
     * <code>string content = 4;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATEDBY_FIELD_NUMBER = 5;
    private volatile java.lang.Object createdBy_;
    /**
     * <pre>
     * user that created the note
     * </pre>
     *
     * <code>string createdBy = 5;</code>
     */
    public java.lang.String getCreatedBy() {
      java.lang.Object ref = createdBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createdBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * user that created the note
     * </pre>
     *
     * <code>string createdBy = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCreatedByBytes() {
      java.lang.Object ref = createdBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createdBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATEDDATE_FIELD_NUMBER = 6;
    private volatile java.lang.Object createdDate_;
    /**
     * <pre>
     * datetime the note was created
     * </pre>
     *
     * <code>string createdDate = 6;</code>
     */
    public java.lang.String getCreatedDate() {
      java.lang.Object ref = createdDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createdDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * datetime the note was created
     * </pre>
     *
     * <code>string createdDate = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCreatedDateBytes() {
      java.lang.Object ref = createdDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createdDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getReplyToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, replyTo_);
      }
      if (!getChangeToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, changeTo_);
      }
      if (!getContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, content_);
      }
      if (!getCreatedByBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, createdBy_);
      }
      if (!getCreatedDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, createdDate_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getReplyToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, replyTo_);
      }
      if (!getChangeToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, changeTo_);
      }
      if (!getContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, content_);
      }
      if (!getCreatedByBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, createdBy_);
      }
      if (!getCreatedDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, createdDate_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartNote)) {
        return super.equals(obj);
      }
      TideChart.TideChartNote other = (TideChart.TideChartNote) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getReplyTo()
          .equals(other.getReplyTo())) return false;
      if (!getChangeTo()
          .equals(other.getChangeTo())) return false;
      if (!getContent()
          .equals(other.getContent())) return false;
      if (!getCreatedBy()
          .equals(other.getCreatedBy())) return false;
      if (!getCreatedDate()
          .equals(other.getCreatedDate())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + REPLYTO_FIELD_NUMBER;
      hash = (53 * hash) + getReplyTo().hashCode();
      hash = (37 * hash) + CHANGETO_FIELD_NUMBER;
      hash = (53 * hash) + getChangeTo().hashCode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + CREATEDBY_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedBy().hashCode();
      hash = (37 * hash) + CREATEDDATE_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedDate().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartNote parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNote parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartNote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartNote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartNote prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartNote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartNote)
        TideChart.TideChartNoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartNote_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartNote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartNote.class, TideChart.TideChartNote.Builder.class);
      }

      // Construct using TideChart.TideChartNote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        replyTo_ = "";

        changeTo_ = "";

        content_ = "";

        createdBy_ = "";

        createdDate_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartNote_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartNote getDefaultInstanceForType() {
        return TideChart.TideChartNote.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartNote build() {
        TideChart.TideChartNote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartNote buildPartial() {
        TideChart.TideChartNote result = new TideChart.TideChartNote(this);
        result.id_ = id_;
        result.replyTo_ = replyTo_;
        result.changeTo_ = changeTo_;
        result.content_ = content_;
        result.createdBy_ = createdBy_;
        result.createdDate_ = createdDate_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartNote) {
          return mergeFrom((TideChart.TideChartNote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartNote other) {
        if (other == TideChart.TideChartNote.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getReplyTo().isEmpty()) {
          replyTo_ = other.replyTo_;
          onChanged();
        }
        if (!other.getChangeTo().isEmpty()) {
          changeTo_ = other.changeTo_;
          onChanged();
        }
        if (!other.getContent().isEmpty()) {
          content_ = other.content_;
          onChanged();
        }
        if (!other.getCreatedBy().isEmpty()) {
          createdBy_ = other.createdBy_;
          onChanged();
        }
        if (!other.getCreatedDate().isEmpty()) {
          createdDate_ = other.createdDate_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartNote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartNote) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for the note
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for the note
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for the note
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the note
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the note
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object replyTo_ = "";
      /**
       * <pre>
       * reference to note this replies to
       * </pre>
       *
       * <code>string replyTo = 2;</code>
       */
      public java.lang.String getReplyTo() {
        java.lang.Object ref = replyTo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          replyTo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * reference to note this replies to
       * </pre>
       *
       * <code>string replyTo = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReplyToBytes() {
        java.lang.Object ref = replyTo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          replyTo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * reference to note this replies to
       * </pre>
       *
       * <code>string replyTo = 2;</code>
       */
      public Builder setReplyTo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        replyTo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * reference to note this replies to
       * </pre>
       *
       * <code>string replyTo = 2;</code>
       */
      public Builder clearReplyTo() {
        
        replyTo_ = getDefaultInstance().getReplyTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * reference to note this replies to
       * </pre>
       *
       * <code>string replyTo = 2;</code>
       */
      public Builder setReplyToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        replyTo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object changeTo_ = "";
      /**
       * <pre>
       * reference to note this replaces
       * </pre>
       *
       * <code>string changeTo = 3;</code>
       */
      public java.lang.String getChangeTo() {
        java.lang.Object ref = changeTo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          changeTo_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * reference to note this replaces
       * </pre>
       *
       * <code>string changeTo = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChangeToBytes() {
        java.lang.Object ref = changeTo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          changeTo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * reference to note this replaces
       * </pre>
       *
       * <code>string changeTo = 3;</code>
       */
      public Builder setChangeTo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        changeTo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * reference to note this replaces
       * </pre>
       *
       * <code>string changeTo = 3;</code>
       */
      public Builder clearChangeTo() {
        
        changeTo_ = getDefaultInstance().getChangeTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * reference to note this replaces
       * </pre>
       *
       * <code>string changeTo = 3;</code>
       */
      public Builder setChangeToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        changeTo_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object content_ = "";
      /**
       * <pre>
       * content of note (Markdown and :icons allowed)
       * </pre>
       *
       * <code>string content = 4;</code>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * content of note (Markdown and :icons allowed)
       * </pre>
       *
       * <code>string content = 4;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * content of note (Markdown and :icons allowed)
       * </pre>
       *
       * <code>string content = 4;</code>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * content of note (Markdown and :icons allowed)
       * </pre>
       *
       * <code>string content = 4;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * content of note (Markdown and :icons allowed)
       * </pre>
       *
       * <code>string content = 4;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        content_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object createdBy_ = "";
      /**
       * <pre>
       * user that created the note
       * </pre>
       *
       * <code>string createdBy = 5;</code>
       */
      public java.lang.String getCreatedBy() {
        java.lang.Object ref = createdBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createdBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user that created the note
       * </pre>
       *
       * <code>string createdBy = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCreatedByBytes() {
        java.lang.Object ref = createdBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createdBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user that created the note
       * </pre>
       *
       * <code>string createdBy = 5;</code>
       */
      public Builder setCreatedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createdBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that created the note
       * </pre>
       *
       * <code>string createdBy = 5;</code>
       */
      public Builder clearCreatedBy() {
        
        createdBy_ = getDefaultInstance().getCreatedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that created the note
       * </pre>
       *
       * <code>string createdBy = 5;</code>
       */
      public Builder setCreatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createdBy_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object createdDate_ = "";
      /**
       * <pre>
       * datetime the note was created
       * </pre>
       *
       * <code>string createdDate = 6;</code>
       */
      public java.lang.String getCreatedDate() {
        java.lang.Object ref = createdDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createdDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * datetime the note was created
       * </pre>
       *
       * <code>string createdDate = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCreatedDateBytes() {
        java.lang.Object ref = createdDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createdDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * datetime the note was created
       * </pre>
       *
       * <code>string createdDate = 6;</code>
       */
      public Builder setCreatedDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createdDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * datetime the note was created
       * </pre>
       *
       * <code>string createdDate = 6;</code>
       */
      public Builder clearCreatedDate() {
        
        createdDate_ = getDefaultInstance().getCreatedDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * datetime the note was created
       * </pre>
       *
       * <code>string createdDate = 6;</code>
       */
      public Builder setCreatedDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createdDate_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartNote)
    }

    // @@protoc_insertion_point(class_scope:TideChartNote)
    private static final TideChart.TideChartNote DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartNote();
    }

    public static TideChart.TideChartNote getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartNote>
        PARSER = new com.google.protobuf.AbstractParser<TideChartNote>() {
      @java.lang.Override
      public TideChartNote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartNote(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartNote> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartNote> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartNote getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique (graph scope) name for this node
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * unique (graph scope) name for this node
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * X position on the chart
     * </pre>
     *
     * <code>sint32 posX = 3;</code>
     */
    int getPosX();

    /**
     * <pre>
     * Y position on the chart
     * </pre>
     *
     * <code>sint32 posY = 4;</code>
     */
    int getPosY();

    /**
     * <pre>
     * descriptive label for the name
     * </pre>
     *
     * <code>string title = 5;</code>
     */
    java.lang.String getTitle();
    /**
     * <pre>
     * descriptive label for the name
     * </pre>
     *
     * <code>string title = 5;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     * name of icon (font-awesome)
     * </pre>
     *
     * <code>string icon = 6;</code>
     */
    java.lang.String getIcon();
    /**
     * <pre>
     * name of icon (font-awesome)
     * </pre>
     *
     * <code>string icon = 6;</code>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    /**
     * <pre>
     * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
     * </pre>
     *
     * <code>string library = 7;</code>
     */
    java.lang.String getLibrary();
    /**
     * <pre>
     * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
     * </pre>
     *
     * <code>string library = 7;</code>
     */
    com.google.protobuf.ByteString
        getLibraryBytes();

    /**
     * <pre>
     * name of method that implements the node's action
     * </pre>
     *
     * <code>string method = 8;</code>
     */
    java.lang.String getMethod();
    /**
     * <pre>
     * name of method that implements the node's action
     * </pre>
     *
     * <code>string method = 8;</code>
     */
    com.google.protobuf.ByteString
        getMethodBytes();

    /**
     * <pre>
     * automatic time delay (msec) added to output messages (equivalent to routing thru a delay node)
     * </pre>
     *
     * <code>int32 delay = 9;</code>
     */
    int getDelay();

    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    java.util.List<TideChart.TideChartPort> 
        getInportsList();
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    TideChart.TideChartPort getInports(int index);
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    int getInportsCount();
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getInportsOrBuilderList();
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    TideChart.TideChartPortOrBuilder getInportsOrBuilder(
        int index);

    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    java.util.List<TideChart.TideChartPort> 
        getOutportsList();
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    TideChart.TideChartPort getOutports(int index);
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    int getOutportsCount();
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getOutportsOrBuilderList();
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    TideChart.TideChartPortOrBuilder getOutportsOrBuilder(
        int index);

    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getPropsList();
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    TideChart.TideChartProperty getProps(int index);
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList();
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index);

    /**
     * <pre>
     * flag indicating this node will trace messages
     * </pre>
     *
     * <code>bool logging = 16;</code>
     */
    boolean getLogging();

    /**
     * <pre>
     * flag indicating this node is a debug breakpoint
     * </pre>
     *
     * <code>bool debugging = 17;</code>
     */
    boolean getDebugging();

    /**
     * <pre>
     * flag indicating this node is paused (messages are queued)
     * </pre>
     *
     * <code>bool paused = 18;</code>
     */
    boolean getPaused();

    /**
     * <pre>
     * flag indicating this node is disabled (messages are dropped)
     * </pre>
     *
     * <code>bool disabled = 19;</code>
     */
    boolean getDisabled();

    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    java.util.List<TideChart.TideChartNote> 
        getNotesList();
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    TideChart.TideChartNote getNotes(int index);
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    int getNotesCount();
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList();
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index);

    /**
     * <pre>
     * a user script of custom code to implement the node's action, filter or mux/demux operations
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    java.lang.String getScript();
    /**
     * <pre>
     * a user script of custom code to implement the node's action, filter or mux/demux operations
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    com.google.protobuf.ByteString
        getScriptBytes();
  }
  /**
   * Protobuf type {@code TideChartNode}
   */
  public  static final class TideChartNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartNode)
      TideChartNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartNode.newBuilder() to construct.
    private TideChartNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartNode() {
      name_ = "";
      type_ = "";
      title_ = "";
      icon_ = "";
      library_ = "";
      method_ = "";
      inports_ = java.util.Collections.emptyList();
      outports_ = java.util.Collections.emptyList();
      props_ = java.util.Collections.emptyList();
      notes_ = java.util.Collections.emptyList();
      script_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartNode();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 24: {

              posX_ = input.readSInt32();
              break;
            }
            case 32: {

              posY_ = input.readSInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              icon_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              library_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              method_ = s;
              break;
            }
            case 72: {

              delay_ = input.readInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                inports_ = new java.util.ArrayList<TideChart.TideChartPort>();
                mutable_bitField0_ |= 0x00000001;
              }
              inports_.add(
                  input.readMessage(TideChart.TideChartPort.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                outports_ = new java.util.ArrayList<TideChart.TideChartPort>();
                mutable_bitField0_ |= 0x00000002;
              }
              outports_.add(
                  input.readMessage(TideChart.TideChartPort.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                props_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000004;
              }
              props_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            case 128: {

              logging_ = input.readBool();
              break;
            }
            case 136: {

              debugging_ = input.readBool();
              break;
            }
            case 144: {

              paused_ = input.readBool();
              break;
            }
            case 152: {

              disabled_ = input.readBool();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                notes_ = new java.util.ArrayList<TideChart.TideChartNote>();
                mutable_bitField0_ |= 0x00000008;
              }
              notes_.add(
                  input.readMessage(TideChart.TideChartNote.parser(), extensionRegistry));
              break;
            }
            case 170: {
              java.lang.String s = input.readStringRequireUtf8();

              script_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          inports_ = java.util.Collections.unmodifiableList(inports_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          outports_ = java.util.Collections.unmodifiableList(outports_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          notes_ = java.util.Collections.unmodifiableList(notes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartNode.class, TideChart.TideChartNode.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * unique (graph scope) name for this node
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique (graph scope) name for this node
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSX_FIELD_NUMBER = 3;
    private int posX_;
    /**
     * <pre>
     * X position on the chart
     * </pre>
     *
     * <code>sint32 posX = 3;</code>
     */
    public int getPosX() {
      return posX_;
    }

    public static final int POSY_FIELD_NUMBER = 4;
    private int posY_;
    /**
     * <pre>
     * Y position on the chart
     * </pre>
     *
     * <code>sint32 posY = 4;</code>
     */
    public int getPosY() {
      return posY_;
    }

    public static final int TITLE_FIELD_NUMBER = 5;
    private volatile java.lang.Object title_;
    /**
     * <pre>
     * descriptive label for the name
     * </pre>
     *
     * <code>string title = 5;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * descriptive label for the name
     * </pre>
     *
     * <code>string title = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ICON_FIELD_NUMBER = 6;
    private volatile java.lang.Object icon_;
    /**
     * <pre>
     * name of icon (font-awesome)
     * </pre>
     *
     * <code>string icon = 6;</code>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        icon_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name of icon (font-awesome)
     * </pre>
     *
     * <code>string icon = 6;</code>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIBRARY_FIELD_NUMBER = 7;
    private volatile java.lang.Object library_;
    /**
     * <pre>
     * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
     * </pre>
     *
     * <code>string library = 7;</code>
     */
    public java.lang.String getLibrary() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        library_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
     * </pre>
     *
     * <code>string library = 7;</code>
     */
    public com.google.protobuf.ByteString
        getLibraryBytes() {
      java.lang.Object ref = library_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        library_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METHOD_FIELD_NUMBER = 8;
    private volatile java.lang.Object method_;
    /**
     * <pre>
     * name of method that implements the node's action
     * </pre>
     *
     * <code>string method = 8;</code>
     */
    public java.lang.String getMethod() {
      java.lang.Object ref = method_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        method_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name of method that implements the node's action
     * </pre>
     *
     * <code>string method = 8;</code>
     */
    public com.google.protobuf.ByteString
        getMethodBytes() {
      java.lang.Object ref = method_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        method_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DELAY_FIELD_NUMBER = 9;
    private int delay_;
    /**
     * <pre>
     * automatic time delay (msec) added to output messages (equivalent to routing thru a delay node)
     * </pre>
     *
     * <code>int32 delay = 9;</code>
     */
    public int getDelay() {
      return delay_;
    }

    public static final int INPORTS_FIELD_NUMBER = 10;
    private java.util.List<TideChart.TideChartPort> inports_;
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    public java.util.List<TideChart.TideChartPort> getInportsList() {
      return inports_;
    }
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getInportsOrBuilderList() {
      return inports_;
    }
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    public int getInportsCount() {
      return inports_.size();
    }
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    public TideChart.TideChartPort getInports(int index) {
      return inports_.get(index);
    }
    /**
     * <pre>
     * node inports to connect inbound links
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 10;</code>
     */
    public TideChart.TideChartPortOrBuilder getInportsOrBuilder(
        int index) {
      return inports_.get(index);
    }

    public static final int OUTPORTS_FIELD_NUMBER = 11;
    private java.util.List<TideChart.TideChartPort> outports_;
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    public java.util.List<TideChart.TideChartPort> getOutportsList() {
      return outports_;
    }
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getOutportsOrBuilderList() {
      return outports_;
    }
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    public int getOutportsCount() {
      return outports_.size();
    }
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    public TideChart.TideChartPort getOutports(int index) {
      return outports_.get(index);
    }
    /**
     * <pre>
     * node outports to connect outbound links
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 11;</code>
     */
    public TideChart.TideChartPortOrBuilder getOutportsOrBuilder(
        int index) {
      return outports_.get(index);
    }

    public static final int PROPS_FIELD_NUMBER = 12;
    private java.util.List<TideChart.TideChartProperty> props_;
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public TideChart.TideChartProperty getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     * configuration properties for this node (combines with graph properties and region properties)
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    public static final int LOGGING_FIELD_NUMBER = 16;
    private boolean logging_;
    /**
     * <pre>
     * flag indicating this node will trace messages
     * </pre>
     *
     * <code>bool logging = 16;</code>
     */
    public boolean getLogging() {
      return logging_;
    }

    public static final int DEBUGGING_FIELD_NUMBER = 17;
    private boolean debugging_;
    /**
     * <pre>
     * flag indicating this node is a debug breakpoint
     * </pre>
     *
     * <code>bool debugging = 17;</code>
     */
    public boolean getDebugging() {
      return debugging_;
    }

    public static final int PAUSED_FIELD_NUMBER = 18;
    private boolean paused_;
    /**
     * <pre>
     * flag indicating this node is paused (messages are queued)
     * </pre>
     *
     * <code>bool paused = 18;</code>
     */
    public boolean getPaused() {
      return paused_;
    }

    public static final int DISABLED_FIELD_NUMBER = 19;
    private boolean disabled_;
    /**
     * <pre>
     * flag indicating this node is disabled (messages are dropped)
     * </pre>
     *
     * <code>bool disabled = 19;</code>
     */
    public boolean getDisabled() {
      return disabled_;
    }

    public static final int NOTES_FIELD_NUMBER = 20;
    private java.util.List<TideChart.TideChartNote> notes_;
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public java.util.List<TideChart.TideChartNote> getNotesList() {
      return notes_;
    }
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList() {
      return notes_;
    }
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public int getNotesCount() {
      return notes_.size();
    }
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public TideChart.TideChartNote getNotes(int index) {
      return notes_.get(index);
    }
    /**
     * <pre>
     * comments associated with this node
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index) {
      return notes_.get(index);
    }

    public static final int SCRIPT_FIELD_NUMBER = 21;
    private volatile java.lang.Object script_;
    /**
     * <pre>
     * a user script of custom code to implement the node's action, filter or mux/demux operations
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    public java.lang.String getScript() {
      java.lang.Object ref = script_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        script_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a user script of custom code to implement the node's action, filter or mux/demux operations
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    public com.google.protobuf.ByteString
        getScriptBytes() {
      java.lang.Object ref = script_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        script_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (posX_ != 0) {
        output.writeSInt32(3, posX_);
      }
      if (posY_ != 0) {
        output.writeSInt32(4, posY_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, title_);
      }
      if (!getIconBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, icon_);
      }
      if (!getLibraryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, library_);
      }
      if (!getMethodBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, method_);
      }
      if (delay_ != 0) {
        output.writeInt32(9, delay_);
      }
      for (int i = 0; i < inports_.size(); i++) {
        output.writeMessage(10, inports_.get(i));
      }
      for (int i = 0; i < outports_.size(); i++) {
        output.writeMessage(11, outports_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(12, props_.get(i));
      }
      if (logging_ != false) {
        output.writeBool(16, logging_);
      }
      if (debugging_ != false) {
        output.writeBool(17, debugging_);
      }
      if (paused_ != false) {
        output.writeBool(18, paused_);
      }
      if (disabled_ != false) {
        output.writeBool(19, disabled_);
      }
      for (int i = 0; i < notes_.size(); i++) {
        output.writeMessage(20, notes_.get(i));
      }
      if (!getScriptBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, script_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (posX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, posX_);
      }
      if (posY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, posY_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, title_);
      }
      if (!getIconBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, icon_);
      }
      if (!getLibraryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, library_);
      }
      if (!getMethodBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, method_);
      }
      if (delay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, delay_);
      }
      for (int i = 0; i < inports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, inports_.get(i));
      }
      for (int i = 0; i < outports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, outports_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, props_.get(i));
      }
      if (logging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, logging_);
      }
      if (debugging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, debugging_);
      }
      if (paused_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, paused_);
      }
      if (disabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, disabled_);
      }
      for (int i = 0; i < notes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, notes_.get(i));
      }
      if (!getScriptBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, script_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartNode)) {
        return super.equals(obj);
      }
      TideChart.TideChartNode other = (TideChart.TideChartNode) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (getPosX()
          != other.getPosX()) return false;
      if (getPosY()
          != other.getPosY()) return false;
      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (!getIcon()
          .equals(other.getIcon())) return false;
      if (!getLibrary()
          .equals(other.getLibrary())) return false;
      if (!getMethod()
          .equals(other.getMethod())) return false;
      if (getDelay()
          != other.getDelay()) return false;
      if (!getInportsList()
          .equals(other.getInportsList())) return false;
      if (!getOutportsList()
          .equals(other.getOutportsList())) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (getLogging()
          != other.getLogging()) return false;
      if (getDebugging()
          != other.getDebugging()) return false;
      if (getPaused()
          != other.getPaused()) return false;
      if (getDisabled()
          != other.getDisabled()) return false;
      if (!getNotesList()
          .equals(other.getNotesList())) return false;
      if (!getScript()
          .equals(other.getScript())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + POSX_FIELD_NUMBER;
      hash = (53 * hash) + getPosX();
      hash = (37 * hash) + POSY_FIELD_NUMBER;
      hash = (53 * hash) + getPosY();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + ICON_FIELD_NUMBER;
      hash = (53 * hash) + getIcon().hashCode();
      hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
      hash = (53 * hash) + getLibrary().hashCode();
      hash = (37 * hash) + METHOD_FIELD_NUMBER;
      hash = (53 * hash) + getMethod().hashCode();
      hash = (37 * hash) + DELAY_FIELD_NUMBER;
      hash = (53 * hash) + getDelay();
      if (getInportsCount() > 0) {
        hash = (37 * hash) + INPORTS_FIELD_NUMBER;
        hash = (53 * hash) + getInportsList().hashCode();
      }
      if (getOutportsCount() > 0) {
        hash = (37 * hash) + OUTPORTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutportsList().hashCode();
      }
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (37 * hash) + LOGGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLogging());
      hash = (37 * hash) + DEBUGGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebugging());
      hash = (37 * hash) + PAUSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPaused());
      hash = (37 * hash) + DISABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisabled());
      if (getNotesCount() > 0) {
        hash = (37 * hash) + NOTES_FIELD_NUMBER;
        hash = (53 * hash) + getNotesList().hashCode();
      }
      hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getScript().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartNode)
        TideChart.TideChartNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartNode.class, TideChart.TideChartNode.Builder.class);
      }

      // Construct using TideChart.TideChartNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInportsFieldBuilder();
          getOutportsFieldBuilder();
          getPropsFieldBuilder();
          getNotesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        type_ = "";

        posX_ = 0;

        posY_ = 0;

        title_ = "";

        icon_ = "";

        library_ = "";

        method_ = "";

        delay_ = 0;

        if (inportsBuilder_ == null) {
          inports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          inportsBuilder_.clear();
        }
        if (outportsBuilder_ == null) {
          outports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          outportsBuilder_.clear();
        }
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          propsBuilder_.clear();
        }
        logging_ = false;

        debugging_ = false;

        paused_ = false;

        disabled_ = false;

        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          notesBuilder_.clear();
        }
        script_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartNode_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartNode getDefaultInstanceForType() {
        return TideChart.TideChartNode.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartNode build() {
        TideChart.TideChartNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartNode buildPartial() {
        TideChart.TideChartNode result = new TideChart.TideChartNode(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.type_ = type_;
        result.posX_ = posX_;
        result.posY_ = posY_;
        result.title_ = title_;
        result.icon_ = icon_;
        result.library_ = library_;
        result.method_ = method_;
        result.delay_ = delay_;
        if (inportsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            inports_ = java.util.Collections.unmodifiableList(inports_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.inports_ = inports_;
        } else {
          result.inports_ = inportsBuilder_.build();
        }
        if (outportsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            outports_ = java.util.Collections.unmodifiableList(outports_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.outports_ = outports_;
        } else {
          result.outports_ = outportsBuilder_.build();
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        result.logging_ = logging_;
        result.debugging_ = debugging_;
        result.paused_ = paused_;
        result.disabled_ = disabled_;
        if (notesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            notes_ = java.util.Collections.unmodifiableList(notes_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.notes_ = notes_;
        } else {
          result.notes_ = notesBuilder_.build();
        }
        result.script_ = script_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartNode) {
          return mergeFrom((TideChart.TideChartNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartNode other) {
        if (other == TideChart.TideChartNode.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getPosX() != 0) {
          setPosX(other.getPosX());
        }
        if (other.getPosY() != 0) {
          setPosY(other.getPosY());
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (!other.getIcon().isEmpty()) {
          icon_ = other.icon_;
          onChanged();
        }
        if (!other.getLibrary().isEmpty()) {
          library_ = other.library_;
          onChanged();
        }
        if (!other.getMethod().isEmpty()) {
          method_ = other.method_;
          onChanged();
        }
        if (other.getDelay() != 0) {
          setDelay(other.getDelay());
        }
        if (inportsBuilder_ == null) {
          if (!other.inports_.isEmpty()) {
            if (inports_.isEmpty()) {
              inports_ = other.inports_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInportsIsMutable();
              inports_.addAll(other.inports_);
            }
            onChanged();
          }
        } else {
          if (!other.inports_.isEmpty()) {
            if (inportsBuilder_.isEmpty()) {
              inportsBuilder_.dispose();
              inportsBuilder_ = null;
              inports_ = other.inports_;
              bitField0_ = (bitField0_ & ~0x00000001);
              inportsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInportsFieldBuilder() : null;
            } else {
              inportsBuilder_.addAllMessages(other.inports_);
            }
          }
        }
        if (outportsBuilder_ == null) {
          if (!other.outports_.isEmpty()) {
            if (outports_.isEmpty()) {
              outports_ = other.outports_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOutportsIsMutable();
              outports_.addAll(other.outports_);
            }
            onChanged();
          }
        } else {
          if (!other.outports_.isEmpty()) {
            if (outportsBuilder_.isEmpty()) {
              outportsBuilder_.dispose();
              outportsBuilder_ = null;
              outports_ = other.outports_;
              bitField0_ = (bitField0_ & ~0x00000002);
              outportsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutportsFieldBuilder() : null;
            } else {
              outportsBuilder_.addAllMessages(other.outports_);
            }
          }
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000004);
              propsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        if (other.getLogging() != false) {
          setLogging(other.getLogging());
        }
        if (other.getDebugging() != false) {
          setDebugging(other.getDebugging());
        }
        if (other.getPaused() != false) {
          setPaused(other.getPaused());
        }
        if (other.getDisabled() != false) {
          setDisabled(other.getDisabled());
        }
        if (notesBuilder_ == null) {
          if (!other.notes_.isEmpty()) {
            if (notes_.isEmpty()) {
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureNotesIsMutable();
              notes_.addAll(other.notes_);
            }
            onChanged();
          }
        } else {
          if (!other.notes_.isEmpty()) {
            if (notesBuilder_.isEmpty()) {
              notesBuilder_.dispose();
              notesBuilder_ = null;
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000008);
              notesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNotesFieldBuilder() : null;
            } else {
              notesBuilder_.addAllMessages(other.notes_);
            }
          }
        }
        if (!other.getScript().isEmpty()) {
          script_ = other.script_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * unique (graph scope) name for this node
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique (graph scope) name for this node
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique (graph scope) name for this node
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique (graph scope) name for this node
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique (graph scope) name for this node
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * node type: action, behavior, inport, outport, trigger, event, filter, router, sequence, timeline, controller, navigation, gamepad, custom
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private int posX_ ;
      /**
       * <pre>
       * X position on the chart
       * </pre>
       *
       * <code>sint32 posX = 3;</code>
       */
      public int getPosX() {
        return posX_;
      }
      /**
       * <pre>
       * X position on the chart
       * </pre>
       *
       * <code>sint32 posX = 3;</code>
       */
      public Builder setPosX(int value) {
        
        posX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * X position on the chart
       * </pre>
       *
       * <code>sint32 posX = 3;</code>
       */
      public Builder clearPosX() {
        
        posX_ = 0;
        onChanged();
        return this;
      }

      private int posY_ ;
      /**
       * <pre>
       * Y position on the chart
       * </pre>
       *
       * <code>sint32 posY = 4;</code>
       */
      public int getPosY() {
        return posY_;
      }
      /**
       * <pre>
       * Y position on the chart
       * </pre>
       *
       * <code>sint32 posY = 4;</code>
       */
      public Builder setPosY(int value) {
        
        posY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Y position on the chart
       * </pre>
       *
       * <code>sint32 posY = 4;</code>
       */
      public Builder clearPosY() {
        
        posY_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <pre>
       * descriptive label for the name
       * </pre>
       *
       * <code>string title = 5;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * descriptive label for the name
       * </pre>
       *
       * <code>string title = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * descriptive label for the name
       * </pre>
       *
       * <code>string title = 5;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * descriptive label for the name
       * </pre>
       *
       * <code>string title = 5;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * descriptive label for the name
       * </pre>
       *
       * <code>string title = 5;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object icon_ = "";
      /**
       * <pre>
       * name of icon (font-awesome)
       * </pre>
       *
       * <code>string icon = 6;</code>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of icon (font-awesome)
       * </pre>
       *
       * <code>string icon = 6;</code>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of icon (font-awesome)
       * </pre>
       *
       * <code>string icon = 6;</code>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of icon (font-awesome)
       * </pre>
       *
       * <code>string icon = 6;</code>
       */
      public Builder clearIcon() {
        
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of icon (font-awesome)
       * </pre>
       *
       * <code>string icon = 6;</code>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        icon_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object library_ = "";
      /**
       * <pre>
       * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
       * </pre>
       *
       * <code>string library = 7;</code>
       */
      public java.lang.String getLibrary() {
        java.lang.Object ref = library_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          library_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
       * </pre>
       *
       * <code>string library = 7;</code>
       */
      public com.google.protobuf.ByteString
          getLibraryBytes() {
        java.lang.Object ref = library_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          library_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
       * </pre>
       *
       * <code>string library = 7;</code>
       */
      public Builder setLibrary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        library_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
       * </pre>
       *
       * <code>string library = 7;</code>
       */
      public Builder clearLibrary() {
        
        library_ = getDefaultInstance().getLibrary();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the library for the nodes method (libraries allow implementation to be abstracted and modular)
       * </pre>
       *
       * <code>string library = 7;</code>
       */
      public Builder setLibraryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        library_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object method_ = "";
      /**
       * <pre>
       * name of method that implements the node's action
       * </pre>
       *
       * <code>string method = 8;</code>
       */
      public java.lang.String getMethod() {
        java.lang.Object ref = method_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          method_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of method that implements the node's action
       * </pre>
       *
       * <code>string method = 8;</code>
       */
      public com.google.protobuf.ByteString
          getMethodBytes() {
        java.lang.Object ref = method_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          method_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of method that implements the node's action
       * </pre>
       *
       * <code>string method = 8;</code>
       */
      public Builder setMethod(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        method_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of method that implements the node's action
       * </pre>
       *
       * <code>string method = 8;</code>
       */
      public Builder clearMethod() {
        
        method_ = getDefaultInstance().getMethod();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of method that implements the node's action
       * </pre>
       *
       * <code>string method = 8;</code>
       */
      public Builder setMethodBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        method_ = value;
        onChanged();
        return this;
      }

      private int delay_ ;
      /**
       * <pre>
       * automatic time delay (msec) added to output messages (equivalent to routing thru a delay node)
       * </pre>
       *
       * <code>int32 delay = 9;</code>
       */
      public int getDelay() {
        return delay_;
      }
      /**
       * <pre>
       * automatic time delay (msec) added to output messages (equivalent to routing thru a delay node)
       * </pre>
       *
       * <code>int32 delay = 9;</code>
       */
      public Builder setDelay(int value) {
        
        delay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * automatic time delay (msec) added to output messages (equivalent to routing thru a delay node)
       * </pre>
       *
       * <code>int32 delay = 9;</code>
       */
      public Builder clearDelay() {
        
        delay_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartPort> inports_ =
        java.util.Collections.emptyList();
      private void ensureInportsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          inports_ = new java.util.ArrayList<TideChart.TideChartPort>(inports_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> inportsBuilder_;

      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public java.util.List<TideChart.TideChartPort> getInportsList() {
        if (inportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inports_);
        } else {
          return inportsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public int getInportsCount() {
        if (inportsBuilder_ == null) {
          return inports_.size();
        } else {
          return inportsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public TideChart.TideChartPort getInports(int index) {
        if (inportsBuilder_ == null) {
          return inports_.get(index);
        } else {
          return inportsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder setInports(
          int index, TideChart.TideChartPort value) {
        if (inportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInportsIsMutable();
          inports_.set(index, value);
          onChanged();
        } else {
          inportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder setInports(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          inports_.set(index, builderForValue.build());
          onChanged();
        } else {
          inportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder addInports(TideChart.TideChartPort value) {
        if (inportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInportsIsMutable();
          inports_.add(value);
          onChanged();
        } else {
          inportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder addInports(
          int index, TideChart.TideChartPort value) {
        if (inportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInportsIsMutable();
          inports_.add(index, value);
          onChanged();
        } else {
          inportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder addInports(
          TideChart.TideChartPort.Builder builderForValue) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          inports_.add(builderForValue.build());
          onChanged();
        } else {
          inportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder addInports(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          inports_.add(index, builderForValue.build());
          onChanged();
        } else {
          inportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder addAllInports(
          java.lang.Iterable<? extends TideChart.TideChartPort> values) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inports_);
          onChanged();
        } else {
          inportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder clearInports() {
        if (inportsBuilder_ == null) {
          inports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          inportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public Builder removeInports(int index) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          inports_.remove(index);
          onChanged();
        } else {
          inportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public TideChart.TideChartPort.Builder getInportsBuilder(
          int index) {
        return getInportsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public TideChart.TideChartPortOrBuilder getInportsOrBuilder(
          int index) {
        if (inportsBuilder_ == null) {
          return inports_.get(index);  } else {
          return inportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
           getInportsOrBuilderList() {
        if (inportsBuilder_ != null) {
          return inportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inports_);
        }
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public TideChart.TideChartPort.Builder addInportsBuilder() {
        return getInportsFieldBuilder().addBuilder(
            TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public TideChart.TideChartPort.Builder addInportsBuilder(
          int index) {
        return getInportsFieldBuilder().addBuilder(
            index, TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * node inports to connect inbound links
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 10;</code>
       */
      public java.util.List<TideChart.TideChartPort.Builder> 
           getInportsBuilderList() {
        return getInportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> 
          getInportsFieldBuilder() {
        if (inportsBuilder_ == null) {
          inportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder>(
                  inports_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          inports_ = null;
        }
        return inportsBuilder_;
      }

      private java.util.List<TideChart.TideChartPort> outports_ =
        java.util.Collections.emptyList();
      private void ensureOutportsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          outports_ = new java.util.ArrayList<TideChart.TideChartPort>(outports_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> outportsBuilder_;

      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public java.util.List<TideChart.TideChartPort> getOutportsList() {
        if (outportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outports_);
        } else {
          return outportsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public int getOutportsCount() {
        if (outportsBuilder_ == null) {
          return outports_.size();
        } else {
          return outportsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public TideChart.TideChartPort getOutports(int index) {
        if (outportsBuilder_ == null) {
          return outports_.get(index);
        } else {
          return outportsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder setOutports(
          int index, TideChart.TideChartPort value) {
        if (outportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutportsIsMutable();
          outports_.set(index, value);
          onChanged();
        } else {
          outportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder setOutports(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          outports_.set(index, builderForValue.build());
          onChanged();
        } else {
          outportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder addOutports(TideChart.TideChartPort value) {
        if (outportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutportsIsMutable();
          outports_.add(value);
          onChanged();
        } else {
          outportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder addOutports(
          int index, TideChart.TideChartPort value) {
        if (outportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutportsIsMutable();
          outports_.add(index, value);
          onChanged();
        } else {
          outportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder addOutports(
          TideChart.TideChartPort.Builder builderForValue) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          outports_.add(builderForValue.build());
          onChanged();
        } else {
          outportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder addOutports(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          outports_.add(index, builderForValue.build());
          onChanged();
        } else {
          outportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder addAllOutports(
          java.lang.Iterable<? extends TideChart.TideChartPort> values) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outports_);
          onChanged();
        } else {
          outportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder clearOutports() {
        if (outportsBuilder_ == null) {
          outports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          outportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public Builder removeOutports(int index) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          outports_.remove(index);
          onChanged();
        } else {
          outportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public TideChart.TideChartPort.Builder getOutportsBuilder(
          int index) {
        return getOutportsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public TideChart.TideChartPortOrBuilder getOutportsOrBuilder(
          int index) {
        if (outportsBuilder_ == null) {
          return outports_.get(index);  } else {
          return outportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
           getOutportsOrBuilderList() {
        if (outportsBuilder_ != null) {
          return outportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outports_);
        }
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public TideChart.TideChartPort.Builder addOutportsBuilder() {
        return getOutportsFieldBuilder().addBuilder(
            TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public TideChart.TideChartPort.Builder addOutportsBuilder(
          int index) {
        return getOutportsFieldBuilder().addBuilder(
            index, TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * node outports to connect outbound links
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 11;</code>
       */
      public java.util.List<TideChart.TideChartPort.Builder> 
           getOutportsBuilderList() {
        return getOutportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> 
          getOutportsFieldBuilder() {
        if (outportsBuilder_ == null) {
          outportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder>(
                  outports_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          outports_ = null;
        }
        return outportsBuilder_;
      }

      private java.util.List<TideChart.TideChartProperty> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          props_ = new java.util.ArrayList<TideChart.TideChartProperty>(props_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> propsBuilder_;

      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addAllProps(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * configuration properties for this node (combines with graph properties and region properties)
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }

      private boolean logging_ ;
      /**
       * <pre>
       * flag indicating this node will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public boolean getLogging() {
        return logging_;
      }
      /**
       * <pre>
       * flag indicating this node will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public Builder setLogging(boolean value) {
        
        logging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this node will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public Builder clearLogging() {
        
        logging_ = false;
        onChanged();
        return this;
      }

      private boolean debugging_ ;
      /**
       * <pre>
       * flag indicating this node is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public boolean getDebugging() {
        return debugging_;
      }
      /**
       * <pre>
       * flag indicating this node is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public Builder setDebugging(boolean value) {
        
        debugging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this node is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public Builder clearDebugging() {
        
        debugging_ = false;
        onChanged();
        return this;
      }

      private boolean paused_ ;
      /**
       * <pre>
       * flag indicating this node is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public boolean getPaused() {
        return paused_;
      }
      /**
       * <pre>
       * flag indicating this node is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public Builder setPaused(boolean value) {
        
        paused_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this node is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public Builder clearPaused() {
        
        paused_ = false;
        onChanged();
        return this;
      }

      private boolean disabled_ ;
      /**
       * <pre>
       * flag indicating this node is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public boolean getDisabled() {
        return disabled_;
      }
      /**
       * <pre>
       * flag indicating this node is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public Builder setDisabled(boolean value) {
        
        disabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this node is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public Builder clearDisabled() {
        
        disabled_ = false;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartNote> notes_ =
        java.util.Collections.emptyList();
      private void ensureNotesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          notes_ = new java.util.ArrayList<TideChart.TideChartNote>(notes_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> notesBuilder_;

      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<TideChart.TideChartNote> getNotesList() {
        if (notesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(notes_);
        } else {
          return notesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public int getNotesCount() {
        if (notesBuilder_ == null) {
          return notes_.size();
        } else {
          return notesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote getNotes(int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);
        } else {
          return notesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.set(index, value);
          onChanged();
        } else {
          notesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.set(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(value);
          onChanged();
        } else {
          notesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(index, value);
          onChanged();
        } else {
          notesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addAllNotes(
          java.lang.Iterable<? extends TideChart.TideChartNote> values) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, notes_);
          onChanged();
        } else {
          notesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder clearNotes() {
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          notesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder removeNotes(int index) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.remove(index);
          onChanged();
        } else {
          notesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder getNotesBuilder(
          int index) {
        return getNotesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
          int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);  } else {
          return notesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
           getNotesOrBuilderList() {
        if (notesBuilder_ != null) {
          return notesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(notes_);
        }
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder() {
        return getNotesFieldBuilder().addBuilder(
            TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder(
          int index) {
        return getNotesFieldBuilder().addBuilder(
            index, TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * comments associated with this node
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<TideChart.TideChartNote.Builder> 
           getNotesBuilderList() {
        return getNotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> 
          getNotesFieldBuilder() {
        if (notesBuilder_ == null) {
          notesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder>(
                  notes_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          notes_ = null;
        }
        return notesBuilder_;
      }

      private java.lang.Object script_ = "";
      /**
       * <pre>
       * a user script of custom code to implement the node's action, filter or mux/demux operations
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public java.lang.String getScript() {
        java.lang.Object ref = script_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          script_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a user script of custom code to implement the node's action, filter or mux/demux operations
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public com.google.protobuf.ByteString
          getScriptBytes() {
        java.lang.Object ref = script_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          script_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a user script of custom code to implement the node's action, filter or mux/demux operations
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder setScript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        script_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a user script of custom code to implement the node's action, filter or mux/demux operations
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder clearScript() {
        
        script_ = getDefaultInstance().getScript();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a user script of custom code to implement the node's action, filter or mux/demux operations
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder setScriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        script_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartNode)
    }

    // @@protoc_insertion_point(class_scope:TideChartNode)
    private static final TideChart.TideChartNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartNode();
    }

    public static TideChart.TideChartNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartNode>
        PARSER = new com.google.protobuf.AbstractParser<TideChartNode>() {
      @java.lang.Override
      public TideChartNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartRegionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartRegion)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique (graph scope) name for this region
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * unique (graph scope) name for this region
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * a descriptive label for the group
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    java.lang.String getTitle();
    /**
     * <pre>
     * a descriptive label for the group
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     * a collection of nodes contained within this region (nodes can be in multiple regions)
     * </pre>
     *
     * <code>repeated string nodes = 3;</code>
     */
    java.util.List<java.lang.String>
        getNodesList();
    /**
     * <pre>
     * a collection of nodes contained within this region (nodes can be in multiple regions)
     * </pre>
     *
     * <code>repeated string nodes = 3;</code>
     */
    int getNodesCount();
    /**
     * <pre>
     * a collection of nodes contained within this region (nodes can be in multiple regions)
     * </pre>
     *
     * <code>repeated string nodes = 3;</code>
     */
    java.lang.String getNodes(int index);
    /**
     * <pre>
     * a collection of nodes contained within this region (nodes can be in multiple regions)
     * </pre>
     *
     * <code>repeated string nodes = 3;</code>
     */
    com.google.protobuf.ByteString
        getNodesBytes(int index);

    /**
     * <pre>
     * regions can be associated into groups (usually just determines color)
     * </pre>
     *
     * <code>int32 group = 4;</code>
     */
    int getGroup();

    /**
     * <pre>
     * an event scope used to limit (or exclude) events to route to only nodes in the region
     * </pre>
     *
     * <code>string scope = 5;</code>
     */
    java.lang.String getScope();
    /**
     * <pre>
     * an event scope used to limit (or exclude) events to route to only nodes in the region
     * </pre>
     *
     * <code>string scope = 5;</code>
     */
    com.google.protobuf.ByteString
        getScopeBytes();

    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getPropsList();
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    TideChart.TideChartProperty getProps(int index);
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList();
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index);

    /**
     * <pre>
     * flag indicating this region will trace messages
     * </pre>
     *
     * <code>bool logging = 16;</code>
     */
    boolean getLogging();

    /**
     * <pre>
     * flag indicating this region is a debug breakpoint
     * </pre>
     *
     * <code>bool debugging = 17;</code>
     */
    boolean getDebugging();

    /**
     * <pre>
     * flag indicating this region is paused (messages are queued)
     * </pre>
     *
     * <code>bool paused = 18;</code>
     */
    boolean getPaused();

    /**
     * <pre>
     * flag indicating this region is disabled (messages are dropped)
     * </pre>
     *
     * <code>bool disabled = 19;</code>
     */
    boolean getDisabled();

    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    java.util.List<TideChart.TideChartNote> 
        getNotesList();
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    TideChart.TideChartNote getNotes(int index);
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    int getNotesCount();
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList();
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index);

    /**
     * <pre>
     * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    java.lang.String getScript();
    /**
     * <pre>
     * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    com.google.protobuf.ByteString
        getScriptBytes();
  }
  /**
   * Protobuf type {@code TideChartRegion}
   */
  public  static final class TideChartRegion extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartRegion)
      TideChartRegionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartRegion.newBuilder() to construct.
    private TideChartRegion(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartRegion() {
      name_ = "";
      title_ = "";
      nodes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      scope_ = "";
      props_ = java.util.Collections.emptyList();
      notes_ = java.util.Collections.emptyList();
      script_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartRegion();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartRegion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                nodes_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(s);
              break;
            }
            case 32: {

              group_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              scope_ = s;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                props_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000002;
              }
              props_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            case 128: {

              logging_ = input.readBool();
              break;
            }
            case 136: {

              debugging_ = input.readBool();
              break;
            }
            case 144: {

              paused_ = input.readBool();
              break;
            }
            case 152: {

              disabled_ = input.readBool();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                notes_ = new java.util.ArrayList<TideChart.TideChartNote>();
                mutable_bitField0_ |= 0x00000004;
              }
              notes_.add(
                  input.readMessage(TideChart.TideChartNote.parser(), extensionRegistry));
              break;
            }
            case 170: {
              java.lang.String s = input.readStringRequireUtf8();

              script_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          nodes_ = nodes_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          notes_ = java.util.Collections.unmodifiableList(notes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartRegion_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartRegion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartRegion.class, TideChart.TideChartRegion.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * unique (graph scope) name for this region
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique (graph scope) name for this region
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TITLE_FIELD_NUMBER = 2;
    private volatile java.lang.Object title_;
    /**
     * <pre>
     * a descriptive label for the group
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a descriptive label for the group
     * </pre>
     *
     * <code>string title = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList nodes_;
    /**
     * <pre>
     * a collection of nodes contained within this region (nodes can be in multiple regions)
     * </pre>
     *
     * <code>repeated string nodes = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     * a collection of nodes contained within this region (nodes can be in multiple regions)
     * </pre>
     *
     * <code>repeated string nodes = 3;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     * a collection of nodes contained within this region (nodes can be in multiple regions)
     * </pre>
     *
     * <code>repeated string nodes = 3;</code>
     */
    public java.lang.String getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     * a collection of nodes contained within this region (nodes can be in multiple regions)
     * </pre>
     *
     * <code>repeated string nodes = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNodesBytes(int index) {
      return nodes_.getByteString(index);
    }

    public static final int GROUP_FIELD_NUMBER = 4;
    private int group_;
    /**
     * <pre>
     * regions can be associated into groups (usually just determines color)
     * </pre>
     *
     * <code>int32 group = 4;</code>
     */
    public int getGroup() {
      return group_;
    }

    public static final int SCOPE_FIELD_NUMBER = 5;
    private volatile java.lang.Object scope_;
    /**
     * <pre>
     * an event scope used to limit (or exclude) events to route to only nodes in the region
     * </pre>
     *
     * <code>string scope = 5;</code>
     */
    public java.lang.String getScope() {
      java.lang.Object ref = scope_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        scope_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * an event scope used to limit (or exclude) events to route to only nodes in the region
     * </pre>
     *
     * <code>string scope = 5;</code>
     */
    public com.google.protobuf.ByteString
        getScopeBytes() {
      java.lang.Object ref = scope_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scope_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROPS_FIELD_NUMBER = 6;
    private java.util.List<TideChart.TideChartProperty> props_;
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    public TideChart.TideChartProperty getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     * a set of properties shared by all nodes in the region
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 6;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    public static final int LOGGING_FIELD_NUMBER = 16;
    private boolean logging_;
    /**
     * <pre>
     * flag indicating this region will trace messages
     * </pre>
     *
     * <code>bool logging = 16;</code>
     */
    public boolean getLogging() {
      return logging_;
    }

    public static final int DEBUGGING_FIELD_NUMBER = 17;
    private boolean debugging_;
    /**
     * <pre>
     * flag indicating this region is a debug breakpoint
     * </pre>
     *
     * <code>bool debugging = 17;</code>
     */
    public boolean getDebugging() {
      return debugging_;
    }

    public static final int PAUSED_FIELD_NUMBER = 18;
    private boolean paused_;
    /**
     * <pre>
     * flag indicating this region is paused (messages are queued)
     * </pre>
     *
     * <code>bool paused = 18;</code>
     */
    public boolean getPaused() {
      return paused_;
    }

    public static final int DISABLED_FIELD_NUMBER = 19;
    private boolean disabled_;
    /**
     * <pre>
     * flag indicating this region is disabled (messages are dropped)
     * </pre>
     *
     * <code>bool disabled = 19;</code>
     */
    public boolean getDisabled() {
      return disabled_;
    }

    public static final int NOTES_FIELD_NUMBER = 20;
    private java.util.List<TideChart.TideChartNote> notes_;
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public java.util.List<TideChart.TideChartNote> getNotesList() {
      return notes_;
    }
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList() {
      return notes_;
    }
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public int getNotesCount() {
      return notes_.size();
    }
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public TideChart.TideChartNote getNotes(int index) {
      return notes_.get(index);
    }
    /**
     * <pre>
     * comments associated with this region
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index) {
      return notes_.get(index);
    }

    public static final int SCRIPT_FIELD_NUMBER = 21;
    private volatile java.lang.Object script_;
    /**
     * <pre>
     * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    public java.lang.String getScript() {
      java.lang.Object ref = script_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        script_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    public com.google.protobuf.ByteString
        getScriptBytes() {
      java.lang.Object ref = script_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        script_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, title_);
      }
      for (int i = 0; i < nodes_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nodes_.getRaw(i));
      }
      if (group_ != 0) {
        output.writeInt32(4, group_);
      }
      if (!getScopeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, scope_);
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(6, props_.get(i));
      }
      if (logging_ != false) {
        output.writeBool(16, logging_);
      }
      if (debugging_ != false) {
        output.writeBool(17, debugging_);
      }
      if (paused_ != false) {
        output.writeBool(18, paused_);
      }
      if (disabled_ != false) {
        output.writeBool(19, disabled_);
      }
      for (int i = 0; i < notes_.size(); i++) {
        output.writeMessage(20, notes_.get(i));
      }
      if (!getScriptBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, script_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, title_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < nodes_.size(); i++) {
          dataSize += computeStringSizeNoTag(nodes_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getNodesList().size();
      }
      if (group_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, group_);
      }
      if (!getScopeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, scope_);
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, props_.get(i));
      }
      if (logging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, logging_);
      }
      if (debugging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, debugging_);
      }
      if (paused_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, paused_);
      }
      if (disabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, disabled_);
      }
      for (int i = 0; i < notes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, notes_.get(i));
      }
      if (!getScriptBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, script_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartRegion)) {
        return super.equals(obj);
      }
      TideChart.TideChartRegion other = (TideChart.TideChartRegion) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (!getNodesList()
          .equals(other.getNodesList())) return false;
      if (getGroup()
          != other.getGroup()) return false;
      if (!getScope()
          .equals(other.getScope())) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (getLogging()
          != other.getLogging()) return false;
      if (getDebugging()
          != other.getDebugging()) return false;
      if (getPaused()
          != other.getPaused()) return false;
      if (getDisabled()
          != other.getDisabled()) return false;
      if (!getNotesList()
          .equals(other.getNotesList())) return false;
      if (!getScript()
          .equals(other.getScript())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (37 * hash) + GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getGroup();
      hash = (37 * hash) + SCOPE_FIELD_NUMBER;
      hash = (53 * hash) + getScope().hashCode();
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (37 * hash) + LOGGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLogging());
      hash = (37 * hash) + DEBUGGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebugging());
      hash = (37 * hash) + PAUSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPaused());
      hash = (37 * hash) + DISABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisabled());
      if (getNotesCount() > 0) {
        hash = (37 * hash) + NOTES_FIELD_NUMBER;
        hash = (53 * hash) + getNotesList().hashCode();
      }
      hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getScript().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartRegion parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartRegion parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartRegion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartRegion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartRegion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartRegion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartRegion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartRegion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartRegion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartRegion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartRegion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartRegion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartRegion prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartRegion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartRegion)
        TideChart.TideChartRegionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartRegion_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartRegion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartRegion.class, TideChart.TideChartRegion.Builder.class);
      }

      // Construct using TideChart.TideChartRegion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPropsFieldBuilder();
          getNotesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        title_ = "";

        nodes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        group_ = 0;

        scope_ = "";

        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          propsBuilder_.clear();
        }
        logging_ = false;

        debugging_ = false;

        paused_ = false;

        disabled_ = false;

        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          notesBuilder_.clear();
        }
        script_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartRegion_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartRegion getDefaultInstanceForType() {
        return TideChart.TideChartRegion.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartRegion build() {
        TideChart.TideChartRegion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartRegion buildPartial() {
        TideChart.TideChartRegion result = new TideChart.TideChartRegion(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.title_ = title_;
        if (((bitField0_ & 0x00000001) != 0)) {
          nodes_ = nodes_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.nodes_ = nodes_;
        result.group_ = group_;
        result.scope_ = scope_;
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        result.logging_ = logging_;
        result.debugging_ = debugging_;
        result.paused_ = paused_;
        result.disabled_ = disabled_;
        if (notesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            notes_ = java.util.Collections.unmodifiableList(notes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.notes_ = notes_;
        } else {
          result.notes_ = notesBuilder_.build();
        }
        result.script_ = script_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartRegion) {
          return mergeFrom((TideChart.TideChartRegion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartRegion other) {
        if (other == TideChart.TideChartRegion.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (!other.nodes_.isEmpty()) {
          if (nodes_.isEmpty()) {
            nodes_ = other.nodes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNodesIsMutable();
            nodes_.addAll(other.nodes_);
          }
          onChanged();
        }
        if (other.getGroup() != 0) {
          setGroup(other.getGroup());
        }
        if (!other.getScope().isEmpty()) {
          scope_ = other.scope_;
          onChanged();
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000002);
              propsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        if (other.getLogging() != false) {
          setLogging(other.getLogging());
        }
        if (other.getDebugging() != false) {
          setDebugging(other.getDebugging());
        }
        if (other.getPaused() != false) {
          setPaused(other.getPaused());
        }
        if (other.getDisabled() != false) {
          setDisabled(other.getDisabled());
        }
        if (notesBuilder_ == null) {
          if (!other.notes_.isEmpty()) {
            if (notes_.isEmpty()) {
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNotesIsMutable();
              notes_.addAll(other.notes_);
            }
            onChanged();
          }
        } else {
          if (!other.notes_.isEmpty()) {
            if (notesBuilder_.isEmpty()) {
              notesBuilder_.dispose();
              notesBuilder_ = null;
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              notesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNotesFieldBuilder() : null;
            } else {
              notesBuilder_.addAllMessages(other.notes_);
            }
          }
        }
        if (!other.getScript().isEmpty()) {
          script_ = other.script_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartRegion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartRegion) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * unique (graph scope) name for this region
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique (graph scope) name for this region
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique (graph scope) name for this region
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique (graph scope) name for this region
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique (graph scope) name for this region
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <pre>
       * a descriptive label for the group
       * </pre>
       *
       * <code>string title = 2;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a descriptive label for the group
       * </pre>
       *
       * <code>string title = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a descriptive label for the group
       * </pre>
       *
       * <code>string title = 2;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a descriptive label for the group
       * </pre>
       *
       * <code>string title = 2;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a descriptive label for the group
       * </pre>
       *
       * <code>string title = 2;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList nodes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          nodes_ = new com.google.protobuf.LazyStringArrayList(nodes_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getNodesList() {
        return nodes_.getUnmodifiableView();
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public int getNodesCount() {
        return nodes_.size();
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public java.lang.String getNodes(int index) {
        return nodes_.get(index);
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNodesBytes(int index) {
        return nodes_.getByteString(index);
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public Builder setNodes(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNodesIsMutable();
        nodes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public Builder addNodes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNodesIsMutable();
        nodes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<java.lang.String> values) {
        ensureNodesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodes_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public Builder clearNodes() {
        nodes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a collection of nodes contained within this region (nodes can be in multiple regions)
       * </pre>
       *
       * <code>repeated string nodes = 3;</code>
       */
      public Builder addNodesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureNodesIsMutable();
        nodes_.add(value);
        onChanged();
        return this;
      }

      private int group_ ;
      /**
       * <pre>
       * regions can be associated into groups (usually just determines color)
       * </pre>
       *
       * <code>int32 group = 4;</code>
       */
      public int getGroup() {
        return group_;
      }
      /**
       * <pre>
       * regions can be associated into groups (usually just determines color)
       * </pre>
       *
       * <code>int32 group = 4;</code>
       */
      public Builder setGroup(int value) {
        
        group_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * regions can be associated into groups (usually just determines color)
       * </pre>
       *
       * <code>int32 group = 4;</code>
       */
      public Builder clearGroup() {
        
        group_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object scope_ = "";
      /**
       * <pre>
       * an event scope used to limit (or exclude) events to route to only nodes in the region
       * </pre>
       *
       * <code>string scope = 5;</code>
       */
      public java.lang.String getScope() {
        java.lang.Object ref = scope_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          scope_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * an event scope used to limit (or exclude) events to route to only nodes in the region
       * </pre>
       *
       * <code>string scope = 5;</code>
       */
      public com.google.protobuf.ByteString
          getScopeBytes() {
        java.lang.Object ref = scope_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scope_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * an event scope used to limit (or exclude) events to route to only nodes in the region
       * </pre>
       *
       * <code>string scope = 5;</code>
       */
      public Builder setScope(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        scope_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * an event scope used to limit (or exclude) events to route to only nodes in the region
       * </pre>
       *
       * <code>string scope = 5;</code>
       */
      public Builder clearScope() {
        
        scope_ = getDefaultInstance().getScope();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * an event scope used to limit (or exclude) events to route to only nodes in the region
       * </pre>
       *
       * <code>string scope = 5;</code>
       */
      public Builder setScopeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        scope_ = value;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartProperty> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          props_ = new java.util.ArrayList<TideChart.TideChartProperty>(props_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> propsBuilder_;

      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public TideChart.TideChartProperty getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder addProps(TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder addProps(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder addAllProps(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public TideChart.TideChartProperty.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * a set of properties shared by all nodes in the region
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 6;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }

      private boolean logging_ ;
      /**
       * <pre>
       * flag indicating this region will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public boolean getLogging() {
        return logging_;
      }
      /**
       * <pre>
       * flag indicating this region will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public Builder setLogging(boolean value) {
        
        logging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this region will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public Builder clearLogging() {
        
        logging_ = false;
        onChanged();
        return this;
      }

      private boolean debugging_ ;
      /**
       * <pre>
       * flag indicating this region is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public boolean getDebugging() {
        return debugging_;
      }
      /**
       * <pre>
       * flag indicating this region is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public Builder setDebugging(boolean value) {
        
        debugging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this region is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public Builder clearDebugging() {
        
        debugging_ = false;
        onChanged();
        return this;
      }

      private boolean paused_ ;
      /**
       * <pre>
       * flag indicating this region is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public boolean getPaused() {
        return paused_;
      }
      /**
       * <pre>
       * flag indicating this region is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public Builder setPaused(boolean value) {
        
        paused_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this region is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public Builder clearPaused() {
        
        paused_ = false;
        onChanged();
        return this;
      }

      private boolean disabled_ ;
      /**
       * <pre>
       * flag indicating this region is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public boolean getDisabled() {
        return disabled_;
      }
      /**
       * <pre>
       * flag indicating this region is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public Builder setDisabled(boolean value) {
        
        disabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this region is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public Builder clearDisabled() {
        
        disabled_ = false;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartNote> notes_ =
        java.util.Collections.emptyList();
      private void ensureNotesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          notes_ = new java.util.ArrayList<TideChart.TideChartNote>(notes_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> notesBuilder_;

      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<TideChart.TideChartNote> getNotesList() {
        if (notesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(notes_);
        } else {
          return notesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public int getNotesCount() {
        if (notesBuilder_ == null) {
          return notes_.size();
        } else {
          return notesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote getNotes(int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);
        } else {
          return notesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.set(index, value);
          onChanged();
        } else {
          notesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.set(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(value);
          onChanged();
        } else {
          notesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(index, value);
          onChanged();
        } else {
          notesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addAllNotes(
          java.lang.Iterable<? extends TideChart.TideChartNote> values) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, notes_);
          onChanged();
        } else {
          notesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder clearNotes() {
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          notesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder removeNotes(int index) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.remove(index);
          onChanged();
        } else {
          notesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder getNotesBuilder(
          int index) {
        return getNotesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
          int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);  } else {
          return notesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
           getNotesOrBuilderList() {
        if (notesBuilder_ != null) {
          return notesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(notes_);
        }
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder() {
        return getNotesFieldBuilder().addBuilder(
            TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder(
          int index) {
        return getNotesFieldBuilder().addBuilder(
            index, TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * comments associated with this region
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<TideChart.TideChartNote.Builder> 
           getNotesBuilderList() {
        return getNotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> 
          getNotesFieldBuilder() {
        if (notesBuilder_ == null) {
          notesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder>(
                  notes_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          notes_ = null;
        }
        return notesBuilder_;
      }

      private java.lang.Object script_ = "";
      /**
       * <pre>
       * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public java.lang.String getScript() {
        java.lang.Object ref = script_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          script_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public com.google.protobuf.ByteString
          getScriptBytes() {
        java.lang.Object ref = script_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          script_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder setScript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        script_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder clearScript() {
        
        script_ = getDefaultInstance().getScript();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a user script of custom code for the region (interacting with non-message based threads, scoped exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder setScriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        script_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartRegion)
    }

    // @@protoc_insertion_point(class_scope:TideChartRegion)
    private static final TideChart.TideChartRegion DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartRegion();
    }

    public static TideChart.TideChartRegion getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartRegion>
        PARSER = new com.google.protobuf.AbstractParser<TideChartRegion>() {
      @java.lang.Override
      public TideChartRegion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartRegion(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartRegion> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartRegion> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartRegion getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartGraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartGraph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id (global scope) for the graph
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id (global scope) for the graph
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * graph type: behavior, opmode, internal       
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * graph type: behavior, opmode, internal       
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * short name for the graph (unique chart scope)
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * short name for the graph (unique chart scope)
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * description name for the graph
     * </pre>
     *
     * <code>string title = 4;</code>
     */
    java.lang.String getTitle();
    /**
     * <pre>
     * description name for the graph
     * </pre>
     *
     * <code>string title = 4;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     * version of last command applied to the graph
     * </pre>
     *
     * <code>string version = 5;</code>
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * version of last command applied to the graph
     * </pre>
     *
     * <code>string version = 5;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * version the graph at the last committed chart version
     * </pre>
     *
     * <code>string source = 6;</code>
     */
    java.lang.String getSource();
    /**
     * <pre>
     * version the graph at the last committed chart version
     * </pre>
     *
     * <code>string source = 6;</code>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    java.util.List<TideChart.TideChartNode> 
        getNodesList();
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    TideChart.TideChartNode getNodes(int index);
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    int getNodesCount();
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    java.util.List<? extends TideChart.TideChartNodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    TideChart.TideChartNodeOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    java.util.List<TideChart.TideChartLink> 
        getLinksList();
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    TideChart.TideChartLink getLinks(int index);
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    int getLinksCount();
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    java.util.List<? extends TideChart.TideChartLinkOrBuilder> 
        getLinksOrBuilderList();
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    TideChart.TideChartLinkOrBuilder getLinksOrBuilder(
        int index);

    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    java.util.List<TideChart.TideChartRegion> 
        getRegionsList();
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    TideChart.TideChartRegion getRegions(int index);
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    int getRegionsCount();
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    java.util.List<? extends TideChart.TideChartRegionOrBuilder> 
        getRegionsOrBuilderList();
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    TideChart.TideChartRegionOrBuilder getRegionsOrBuilder(
        int index);

    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    java.util.List<TideChart.TideChartCommentBox> 
        getCommentsList();
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    TideChart.TideChartCommentBox getComments(int index);
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    int getCommentsCount();
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    java.util.List<? extends TideChart.TideChartCommentBoxOrBuilder> 
        getCommentsOrBuilderList();
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    TideChart.TideChartCommentBoxOrBuilder getCommentsOrBuilder(
        int index);

    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    java.util.List<TideChart.TideChartWidget> 
        getWidgetsList();
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    TideChart.TideChartWidget getWidgets(int index);
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    int getWidgetsCount();
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    java.util.List<? extends TideChart.TideChartWidgetOrBuilder> 
        getWidgetsOrBuilderList();
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    TideChart.TideChartWidgetOrBuilder getWidgetsOrBuilder(
        int index);

    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getPropsList();
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    TideChart.TideChartProperty getProps(int index);
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList();
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index);

    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    java.util.List<TideChart.TideChartCommand> 
        getHistoryList();
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    TideChart.TideChartCommand getHistory(int index);
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    int getHistoryCount();
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
        getHistoryOrBuilderList();
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    TideChart.TideChartCommandOrBuilder getHistoryOrBuilder(
        int index);

    /**
     * <pre>
     * flag indicating this graph will trace messages
     * </pre>
     *
     * <code>bool logging = 16;</code>
     */
    boolean getLogging();

    /**
     * <pre>
     * flag indicating this graph is a debug breakpoint
     * </pre>
     *
     * <code>bool debugging = 17;</code>
     */
    boolean getDebugging();

    /**
     * <pre>
     * flag indicating this graph is paused (messages are queued)
     * </pre>
     *
     * <code>bool paused = 18;</code>
     */
    boolean getPaused();

    /**
     * <pre>
     * flag indicating this graph is disabled (messages are dropped)
     * </pre>
     *
     * <code>bool disabled = 19;</code>
     */
    boolean getDisabled();

    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    java.util.List<TideChart.TideChartNote> 
        getNotesList();
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    TideChart.TideChartNote getNotes(int index);
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    int getNotesCount();
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList();
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index);

    /**
     * <pre>
     * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    java.lang.String getScript();
    /**
     * <pre>
     * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    com.google.protobuf.ByteString
        getScriptBytes();
  }
  /**
   * Protobuf type {@code TideChartGraph}
   */
  public  static final class TideChartGraph extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartGraph)
      TideChartGraphOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartGraph.newBuilder() to construct.
    private TideChartGraph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartGraph() {
      id_ = "";
      type_ = "";
      name_ = "";
      title_ = "";
      version_ = "";
      source_ = "";
      nodes_ = java.util.Collections.emptyList();
      links_ = java.util.Collections.emptyList();
      regions_ = java.util.Collections.emptyList();
      comments_ = java.util.Collections.emptyList();
      widgets_ = java.util.Collections.emptyList();
      props_ = java.util.Collections.emptyList();
      history_ = java.util.Collections.emptyList();
      notes_ = java.util.Collections.emptyList();
      script_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartGraph();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartGraph(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                nodes_ = new java.util.ArrayList<TideChart.TideChartNode>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(
                  input.readMessage(TideChart.TideChartNode.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                links_ = new java.util.ArrayList<TideChart.TideChartLink>();
                mutable_bitField0_ |= 0x00000002;
              }
              links_.add(
                  input.readMessage(TideChart.TideChartLink.parser(), extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                regions_ = new java.util.ArrayList<TideChart.TideChartRegion>();
                mutable_bitField0_ |= 0x00000004;
              }
              regions_.add(
                  input.readMessage(TideChart.TideChartRegion.parser(), extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                comments_ = new java.util.ArrayList<TideChart.TideChartCommentBox>();
                mutable_bitField0_ |= 0x00000008;
              }
              comments_.add(
                  input.readMessage(TideChart.TideChartCommentBox.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                widgets_ = new java.util.ArrayList<TideChart.TideChartWidget>();
                mutable_bitField0_ |= 0x00000010;
              }
              widgets_.add(
                  input.readMessage(TideChart.TideChartWidget.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                props_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000020;
              }
              props_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                history_ = new java.util.ArrayList<TideChart.TideChartCommand>();
                mutable_bitField0_ |= 0x00000040;
              }
              history_.add(
                  input.readMessage(TideChart.TideChartCommand.parser(), extensionRegistry));
              break;
            }
            case 128: {

              logging_ = input.readBool();
              break;
            }
            case 136: {

              debugging_ = input.readBool();
              break;
            }
            case 144: {

              paused_ = input.readBool();
              break;
            }
            case 152: {

              disabled_ = input.readBool();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                notes_ = new java.util.ArrayList<TideChart.TideChartNote>();
                mutable_bitField0_ |= 0x00000080;
              }
              notes_.add(
                  input.readMessage(TideChart.TideChartNote.parser(), extensionRegistry));
              break;
            }
            case 170: {
              java.lang.String s = input.readStringRequireUtf8();

              script_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          links_ = java.util.Collections.unmodifiableList(links_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          regions_ = java.util.Collections.unmodifiableList(regions_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          comments_ = java.util.Collections.unmodifiableList(comments_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          widgets_ = java.util.Collections.unmodifiableList(widgets_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          history_ = java.util.Collections.unmodifiableList(history_);
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          notes_ = java.util.Collections.unmodifiableList(notes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartGraph_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartGraph.class, TideChart.TideChartGraph.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id (global scope) for the graph
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id (global scope) for the graph
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * graph type: behavior, opmode, internal       
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * graph type: behavior, opmode, internal       
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * short name for the graph (unique chart scope)
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * short name for the graph (unique chart scope)
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TITLE_FIELD_NUMBER = 4;
    private volatile java.lang.Object title_;
    /**
     * <pre>
     * description name for the graph
     * </pre>
     *
     * <code>string title = 4;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * description name for the graph
     * </pre>
     *
     * <code>string title = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * version of last command applied to the graph
     * </pre>
     *
     * <code>string version = 5;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * version of last command applied to the graph
     * </pre>
     *
     * <code>string version = 5;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 6;
    private volatile java.lang.Object source_;
    /**
     * <pre>
     * version the graph at the last committed chart version
     * </pre>
     *
     * <code>string source = 6;</code>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * version the graph at the last committed chart version
     * </pre>
     *
     * <code>string source = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODES_FIELD_NUMBER = 7;
    private java.util.List<TideChart.TideChartNode> nodes_;
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    public java.util.List<TideChart.TideChartNode> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    public java.util.List<? extends TideChart.TideChartNodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    public TideChart.TideChartNode getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     * nodes in the graph
     * </pre>
     *
     * <code>repeated .TideChartNode nodes = 7;</code>
     */
    public TideChart.TideChartNodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int LINKS_FIELD_NUMBER = 8;
    private java.util.List<TideChart.TideChartLink> links_;
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    public java.util.List<TideChart.TideChartLink> getLinksList() {
      return links_;
    }
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    public java.util.List<? extends TideChart.TideChartLinkOrBuilder> 
        getLinksOrBuilderList() {
      return links_;
    }
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    public int getLinksCount() {
      return links_.size();
    }
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    public TideChart.TideChartLink getLinks(int index) {
      return links_.get(index);
    }
    /**
     * <pre>
     * links in the graph
     * </pre>
     *
     * <code>repeated .TideChartLink links = 8;</code>
     */
    public TideChart.TideChartLinkOrBuilder getLinksOrBuilder(
        int index) {
      return links_.get(index);
    }

    public static final int REGIONS_FIELD_NUMBER = 9;
    private java.util.List<TideChart.TideChartRegion> regions_;
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    public java.util.List<TideChart.TideChartRegion> getRegionsList() {
      return regions_;
    }
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    public java.util.List<? extends TideChart.TideChartRegionOrBuilder> 
        getRegionsOrBuilderList() {
      return regions_;
    }
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    public int getRegionsCount() {
      return regions_.size();
    }
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    public TideChart.TideChartRegion getRegions(int index) {
      return regions_.get(index);
    }
    /**
     * <pre>
     * regions in the graph
     * </pre>
     *
     * <code>repeated .TideChartRegion regions = 9;</code>
     */
    public TideChart.TideChartRegionOrBuilder getRegionsOrBuilder(
        int index) {
      return regions_.get(index);
    }

    public static final int COMMENTS_FIELD_NUMBER = 10;
    private java.util.List<TideChart.TideChartCommentBox> comments_;
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    public java.util.List<TideChart.TideChartCommentBox> getCommentsList() {
      return comments_;
    }
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    public java.util.List<? extends TideChart.TideChartCommentBoxOrBuilder> 
        getCommentsOrBuilderList() {
      return comments_;
    }
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    public int getCommentsCount() {
      return comments_.size();
    }
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    public TideChart.TideChartCommentBox getComments(int index) {
      return comments_.get(index);
    }
    /**
     * <pre>
     * comment boxes on the graph
     * </pre>
     *
     * <code>repeated .TideChartCommentBox comments = 10;</code>
     */
    public TideChart.TideChartCommentBoxOrBuilder getCommentsOrBuilder(
        int index) {
      return comments_.get(index);
    }

    public static final int WIDGETS_FIELD_NUMBER = 11;
    private java.util.List<TideChart.TideChartWidget> widgets_;
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    public java.util.List<TideChart.TideChartWidget> getWidgetsList() {
      return widgets_;
    }
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    public java.util.List<? extends TideChart.TideChartWidgetOrBuilder> 
        getWidgetsOrBuilderList() {
      return widgets_;
    }
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    public int getWidgetsCount() {
      return widgets_.size();
    }
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    public TideChart.TideChartWidget getWidgets(int index) {
      return widgets_.get(index);
    }
    /**
     * <pre>
     * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
     * </pre>
     *
     * <code>repeated .TideChartWidget widgets = 11;</code>
     */
    public TideChart.TideChartWidgetOrBuilder getWidgetsOrBuilder(
        int index) {
      return widgets_.get(index);
    }

    public static final int PROPS_FIELD_NUMBER = 12;
    private java.util.List<TideChart.TideChartProperty> props_;
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public TideChart.TideChartProperty getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     * a set of properties shared by all nodes on the graph
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 12;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    public static final int HISTORY_FIELD_NUMBER = 13;
    private java.util.List<TideChart.TideChartCommand> history_;
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    public java.util.List<TideChart.TideChartCommand> getHistoryList() {
      return history_;
    }
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    public java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
        getHistoryOrBuilderList() {
      return history_;
    }
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    public int getHistoryCount() {
      return history_.size();
    }
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    public TideChart.TideChartCommand getHistory(int index) {
      return history_.get(index);
    }
    /**
     * <pre>
     * all the changes made from source version to current version
     * </pre>
     *
     * <code>repeated .TideChartCommand history = 13;</code>
     */
    public TideChart.TideChartCommandOrBuilder getHistoryOrBuilder(
        int index) {
      return history_.get(index);
    }

    public static final int LOGGING_FIELD_NUMBER = 16;
    private boolean logging_;
    /**
     * <pre>
     * flag indicating this graph will trace messages
     * </pre>
     *
     * <code>bool logging = 16;</code>
     */
    public boolean getLogging() {
      return logging_;
    }

    public static final int DEBUGGING_FIELD_NUMBER = 17;
    private boolean debugging_;
    /**
     * <pre>
     * flag indicating this graph is a debug breakpoint
     * </pre>
     *
     * <code>bool debugging = 17;</code>
     */
    public boolean getDebugging() {
      return debugging_;
    }

    public static final int PAUSED_FIELD_NUMBER = 18;
    private boolean paused_;
    /**
     * <pre>
     * flag indicating this graph is paused (messages are queued)
     * </pre>
     *
     * <code>bool paused = 18;</code>
     */
    public boolean getPaused() {
      return paused_;
    }

    public static final int DISABLED_FIELD_NUMBER = 19;
    private boolean disabled_;
    /**
     * <pre>
     * flag indicating this graph is disabled (messages are dropped)
     * </pre>
     *
     * <code>bool disabled = 19;</code>
     */
    public boolean getDisabled() {
      return disabled_;
    }

    public static final int NOTES_FIELD_NUMBER = 20;
    private java.util.List<TideChart.TideChartNote> notes_;
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public java.util.List<TideChart.TideChartNote> getNotesList() {
      return notes_;
    }
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList() {
      return notes_;
    }
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public int getNotesCount() {
      return notes_.size();
    }
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public TideChart.TideChartNote getNotes(int index) {
      return notes_.get(index);
    }
    /**
     * <pre>
     * comments associated with this graph
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 20;</code>
     */
    public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index) {
      return notes_.get(index);
    }

    public static final int SCRIPT_FIELD_NUMBER = 21;
    private volatile java.lang.Object script_;
    /**
     * <pre>
     * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    public java.lang.String getScript() {
      java.lang.Object ref = script_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        script_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
     * </pre>
     *
     * <code>string script = 21;</code>
     */
    public com.google.protobuf.ByteString
        getScriptBytes() {
      java.lang.Object ref = script_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        script_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, title_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
      }
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, source_);
      }
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(7, nodes_.get(i));
      }
      for (int i = 0; i < links_.size(); i++) {
        output.writeMessage(8, links_.get(i));
      }
      for (int i = 0; i < regions_.size(); i++) {
        output.writeMessage(9, regions_.get(i));
      }
      for (int i = 0; i < comments_.size(); i++) {
        output.writeMessage(10, comments_.get(i));
      }
      for (int i = 0; i < widgets_.size(); i++) {
        output.writeMessage(11, widgets_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(12, props_.get(i));
      }
      for (int i = 0; i < history_.size(); i++) {
        output.writeMessage(13, history_.get(i));
      }
      if (logging_ != false) {
        output.writeBool(16, logging_);
      }
      if (debugging_ != false) {
        output.writeBool(17, debugging_);
      }
      if (paused_ != false) {
        output.writeBool(18, paused_);
      }
      if (disabled_ != false) {
        output.writeBool(19, disabled_);
      }
      for (int i = 0; i < notes_.size(); i++) {
        output.writeMessage(20, notes_.get(i));
      }
      if (!getScriptBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 21, script_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, title_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
      }
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, source_);
      }
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, nodes_.get(i));
      }
      for (int i = 0; i < links_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, links_.get(i));
      }
      for (int i = 0; i < regions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, regions_.get(i));
      }
      for (int i = 0; i < comments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, comments_.get(i));
      }
      for (int i = 0; i < widgets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, widgets_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, props_.get(i));
      }
      for (int i = 0; i < history_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, history_.get(i));
      }
      if (logging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, logging_);
      }
      if (debugging_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, debugging_);
      }
      if (paused_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, paused_);
      }
      if (disabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, disabled_);
      }
      for (int i = 0; i < notes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, notes_.get(i));
      }
      if (!getScriptBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, script_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartGraph)) {
        return super.equals(obj);
      }
      TideChart.TideChartGraph other = (TideChart.TideChartGraph) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getSource()
          .equals(other.getSource())) return false;
      if (!getNodesList()
          .equals(other.getNodesList())) return false;
      if (!getLinksList()
          .equals(other.getLinksList())) return false;
      if (!getRegionsList()
          .equals(other.getRegionsList())) return false;
      if (!getCommentsList()
          .equals(other.getCommentsList())) return false;
      if (!getWidgetsList()
          .equals(other.getWidgetsList())) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!getHistoryList()
          .equals(other.getHistoryList())) return false;
      if (getLogging()
          != other.getLogging()) return false;
      if (getDebugging()
          != other.getDebugging()) return false;
      if (getPaused()
          != other.getPaused()) return false;
      if (getDisabled()
          != other.getDisabled()) return false;
      if (!getNotesList()
          .equals(other.getNotesList())) return false;
      if (!getScript()
          .equals(other.getScript())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      if (getLinksCount() > 0) {
        hash = (37 * hash) + LINKS_FIELD_NUMBER;
        hash = (53 * hash) + getLinksList().hashCode();
      }
      if (getRegionsCount() > 0) {
        hash = (37 * hash) + REGIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRegionsList().hashCode();
      }
      if (getCommentsCount() > 0) {
        hash = (37 * hash) + COMMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getCommentsList().hashCode();
      }
      if (getWidgetsCount() > 0) {
        hash = (37 * hash) + WIDGETS_FIELD_NUMBER;
        hash = (53 * hash) + getWidgetsList().hashCode();
      }
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      if (getHistoryCount() > 0) {
        hash = (37 * hash) + HISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getHistoryList().hashCode();
      }
      hash = (37 * hash) + LOGGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLogging());
      hash = (37 * hash) + DEBUGGING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebugging());
      hash = (37 * hash) + PAUSED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPaused());
      hash = (37 * hash) + DISABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisabled());
      if (getNotesCount() > 0) {
        hash = (37 * hash) + NOTES_FIELD_NUMBER;
        hash = (53 * hash) + getNotesList().hashCode();
      }
      hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getScript().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartGraph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGraph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGraph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGraph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGraph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGraph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGraph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGraph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartGraph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGraph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartGraph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGraph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartGraph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartGraph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartGraph)
        TideChart.TideChartGraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartGraph_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartGraph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartGraph.class, TideChart.TideChartGraph.Builder.class);
      }

      // Construct using TideChart.TideChartGraph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
          getLinksFieldBuilder();
          getRegionsFieldBuilder();
          getCommentsFieldBuilder();
          getWidgetsFieldBuilder();
          getPropsFieldBuilder();
          getHistoryFieldBuilder();
          getNotesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        type_ = "";

        name_ = "";

        title_ = "";

        version_ = "";

        source_ = "";

        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          linksBuilder_.clear();
        }
        if (regionsBuilder_ == null) {
          regions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          regionsBuilder_.clear();
        }
        if (commentsBuilder_ == null) {
          comments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          commentsBuilder_.clear();
        }
        if (widgetsBuilder_ == null) {
          widgets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          widgetsBuilder_.clear();
        }
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          propsBuilder_.clear();
        }
        if (historyBuilder_ == null) {
          history_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          historyBuilder_.clear();
        }
        logging_ = false;

        debugging_ = false;

        paused_ = false;

        disabled_ = false;

        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          notesBuilder_.clear();
        }
        script_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartGraph_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartGraph getDefaultInstanceForType() {
        return TideChart.TideChartGraph.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartGraph build() {
        TideChart.TideChartGraph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartGraph buildPartial() {
        TideChart.TideChartGraph result = new TideChart.TideChartGraph(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.type_ = type_;
        result.name_ = name_;
        result.title_ = title_;
        result.version_ = version_;
        result.source_ = source_;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        if (linksBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            links_ = java.util.Collections.unmodifiableList(links_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.links_ = links_;
        } else {
          result.links_ = linksBuilder_.build();
        }
        if (regionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            regions_ = java.util.Collections.unmodifiableList(regions_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.regions_ = regions_;
        } else {
          result.regions_ = regionsBuilder_.build();
        }
        if (commentsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            comments_ = java.util.Collections.unmodifiableList(comments_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.comments_ = comments_;
        } else {
          result.comments_ = commentsBuilder_.build();
        }
        if (widgetsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            widgets_ = java.util.Collections.unmodifiableList(widgets_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.widgets_ = widgets_;
        } else {
          result.widgets_ = widgetsBuilder_.build();
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        if (historyBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            history_ = java.util.Collections.unmodifiableList(history_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.history_ = history_;
        } else {
          result.history_ = historyBuilder_.build();
        }
        result.logging_ = logging_;
        result.debugging_ = debugging_;
        result.paused_ = paused_;
        result.disabled_ = disabled_;
        if (notesBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            notes_ = java.util.Collections.unmodifiableList(notes_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.notes_ = notes_;
        } else {
          result.notes_ = notesBuilder_.build();
        }
        result.script_ = script_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartGraph) {
          return mergeFrom((TideChart.TideChartGraph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartGraph other) {
        if (other == TideChart.TideChartGraph.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        if (linksBuilder_ == null) {
          if (!other.links_.isEmpty()) {
            if (links_.isEmpty()) {
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLinksIsMutable();
              links_.addAll(other.links_);
            }
            onChanged();
          }
        } else {
          if (!other.links_.isEmpty()) {
            if (linksBuilder_.isEmpty()) {
              linksBuilder_.dispose();
              linksBuilder_ = null;
              links_ = other.links_;
              bitField0_ = (bitField0_ & ~0x00000002);
              linksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLinksFieldBuilder() : null;
            } else {
              linksBuilder_.addAllMessages(other.links_);
            }
          }
        }
        if (regionsBuilder_ == null) {
          if (!other.regions_.isEmpty()) {
            if (regions_.isEmpty()) {
              regions_ = other.regions_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRegionsIsMutable();
              regions_.addAll(other.regions_);
            }
            onChanged();
          }
        } else {
          if (!other.regions_.isEmpty()) {
            if (regionsBuilder_.isEmpty()) {
              regionsBuilder_.dispose();
              regionsBuilder_ = null;
              regions_ = other.regions_;
              bitField0_ = (bitField0_ & ~0x00000004);
              regionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRegionsFieldBuilder() : null;
            } else {
              regionsBuilder_.addAllMessages(other.regions_);
            }
          }
        }
        if (commentsBuilder_ == null) {
          if (!other.comments_.isEmpty()) {
            if (comments_.isEmpty()) {
              comments_ = other.comments_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCommentsIsMutable();
              comments_.addAll(other.comments_);
            }
            onChanged();
          }
        } else {
          if (!other.comments_.isEmpty()) {
            if (commentsBuilder_.isEmpty()) {
              commentsBuilder_.dispose();
              commentsBuilder_ = null;
              comments_ = other.comments_;
              bitField0_ = (bitField0_ & ~0x00000008);
              commentsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCommentsFieldBuilder() : null;
            } else {
              commentsBuilder_.addAllMessages(other.comments_);
            }
          }
        }
        if (widgetsBuilder_ == null) {
          if (!other.widgets_.isEmpty()) {
            if (widgets_.isEmpty()) {
              widgets_ = other.widgets_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureWidgetsIsMutable();
              widgets_.addAll(other.widgets_);
            }
            onChanged();
          }
        } else {
          if (!other.widgets_.isEmpty()) {
            if (widgetsBuilder_.isEmpty()) {
              widgetsBuilder_.dispose();
              widgetsBuilder_ = null;
              widgets_ = other.widgets_;
              bitField0_ = (bitField0_ & ~0x00000010);
              widgetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWidgetsFieldBuilder() : null;
            } else {
              widgetsBuilder_.addAllMessages(other.widgets_);
            }
          }
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000020);
              propsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        if (historyBuilder_ == null) {
          if (!other.history_.isEmpty()) {
            if (history_.isEmpty()) {
              history_ = other.history_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureHistoryIsMutable();
              history_.addAll(other.history_);
            }
            onChanged();
          }
        } else {
          if (!other.history_.isEmpty()) {
            if (historyBuilder_.isEmpty()) {
              historyBuilder_.dispose();
              historyBuilder_ = null;
              history_ = other.history_;
              bitField0_ = (bitField0_ & ~0x00000040);
              historyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHistoryFieldBuilder() : null;
            } else {
              historyBuilder_.addAllMessages(other.history_);
            }
          }
        }
        if (other.getLogging() != false) {
          setLogging(other.getLogging());
        }
        if (other.getDebugging() != false) {
          setDebugging(other.getDebugging());
        }
        if (other.getPaused() != false) {
          setPaused(other.getPaused());
        }
        if (other.getDisabled() != false) {
          setDisabled(other.getDisabled());
        }
        if (notesBuilder_ == null) {
          if (!other.notes_.isEmpty()) {
            if (notes_.isEmpty()) {
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureNotesIsMutable();
              notes_.addAll(other.notes_);
            }
            onChanged();
          }
        } else {
          if (!other.notes_.isEmpty()) {
            if (notesBuilder_.isEmpty()) {
              notesBuilder_.dispose();
              notesBuilder_ = null;
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000080);
              notesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNotesFieldBuilder() : null;
            } else {
              notesBuilder_.addAllMessages(other.notes_);
            }
          }
        }
        if (!other.getScript().isEmpty()) {
          script_ = other.script_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartGraph parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartGraph) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id (global scope) for the graph
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id (global scope) for the graph
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id (global scope) for the graph
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id (global scope) for the graph
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id (global scope) for the graph
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * graph type: behavior, opmode, internal       
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * graph type: behavior, opmode, internal       
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * graph type: behavior, opmode, internal       
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * graph type: behavior, opmode, internal       
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * graph type: behavior, opmode, internal       
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * short name for the graph (unique chart scope)
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * short name for the graph (unique chart scope)
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * short name for the graph (unique chart scope)
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * short name for the graph (unique chart scope)
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * short name for the graph (unique chart scope)
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <pre>
       * description name for the graph
       * </pre>
       *
       * <code>string title = 4;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * description name for the graph
       * </pre>
       *
       * <code>string title = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * description name for the graph
       * </pre>
       *
       * <code>string title = 4;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * description name for the graph
       * </pre>
       *
       * <code>string title = 4;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * description name for the graph
       * </pre>
       *
       * <code>string title = 4;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * version of last command applied to the graph
       * </pre>
       *
       * <code>string version = 5;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * version of last command applied to the graph
       * </pre>
       *
       * <code>string version = 5;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * version of last command applied to the graph
       * </pre>
       *
       * <code>string version = 5;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version of last command applied to the graph
       * </pre>
       *
       * <code>string version = 5;</code>
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version of last command applied to the graph
       * </pre>
       *
       * <code>string version = 5;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <pre>
       * version the graph at the last committed chart version
       * </pre>
       *
       * <code>string source = 6;</code>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * version the graph at the last committed chart version
       * </pre>
       *
       * <code>string source = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * version the graph at the last committed chart version
       * </pre>
       *
       * <code>string source = 6;</code>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version the graph at the last committed chart version
       * </pre>
       *
       * <code>string source = 6;</code>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version the graph at the last committed chart version
       * </pre>
       *
       * <code>string source = 6;</code>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartNode> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          nodes_ = new java.util.ArrayList<TideChart.TideChartNode>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder> nodesBuilder_;

      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public java.util.List<TideChart.TideChartNode> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public TideChart.TideChartNode getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder setNodes(
          int index, TideChart.TideChartNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder setNodes(
          int index, TideChart.TideChartNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder addNodes(TideChart.TideChartNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder addNodes(
          int index, TideChart.TideChartNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder addNodes(
          TideChart.TideChartNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder addNodes(
          int index, TideChart.TideChartNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends TideChart.TideChartNode> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public TideChart.TideChartNode.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public TideChart.TideChartNodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public java.util.List<? extends TideChart.TideChartNodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public TideChart.TideChartNode.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            TideChart.TideChartNode.getDefaultInstance());
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public TideChart.TideChartNode.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, TideChart.TideChartNode.getDefaultInstance());
      }
      /**
       * <pre>
       * nodes in the graph
       * </pre>
       *
       * <code>repeated .TideChartNode nodes = 7;</code>
       */
      public java.util.List<TideChart.TideChartNode.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private java.util.List<TideChart.TideChartLink> links_ =
        java.util.Collections.emptyList();
      private void ensureLinksIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          links_ = new java.util.ArrayList<TideChart.TideChartLink>(links_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder> linksBuilder_;

      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public java.util.List<TideChart.TideChartLink> getLinksList() {
        if (linksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(links_);
        } else {
          return linksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public int getLinksCount() {
        if (linksBuilder_ == null) {
          return links_.size();
        } else {
          return linksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public TideChart.TideChartLink getLinks(int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);
        } else {
          return linksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder setLinks(
          int index, TideChart.TideChartLink value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.set(index, value);
          onChanged();
        } else {
          linksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder setLinks(
          int index, TideChart.TideChartLink.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.set(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder addLinks(TideChart.TideChartLink value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(value);
          onChanged();
        } else {
          linksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder addLinks(
          int index, TideChart.TideChartLink value) {
        if (linksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinksIsMutable();
          links_.add(index, value);
          onChanged();
        } else {
          linksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder addLinks(
          TideChart.TideChartLink.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder addLinks(
          int index, TideChart.TideChartLink.Builder builderForValue) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.add(index, builderForValue.build());
          onChanged();
        } else {
          linksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder addAllLinks(
          java.lang.Iterable<? extends TideChart.TideChartLink> values) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, links_);
          onChanged();
        } else {
          linksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder clearLinks() {
        if (linksBuilder_ == null) {
          links_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          linksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public Builder removeLinks(int index) {
        if (linksBuilder_ == null) {
          ensureLinksIsMutable();
          links_.remove(index);
          onChanged();
        } else {
          linksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public TideChart.TideChartLink.Builder getLinksBuilder(
          int index) {
        return getLinksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public TideChart.TideChartLinkOrBuilder getLinksOrBuilder(
          int index) {
        if (linksBuilder_ == null) {
          return links_.get(index);  } else {
          return linksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public java.util.List<? extends TideChart.TideChartLinkOrBuilder> 
           getLinksOrBuilderList() {
        if (linksBuilder_ != null) {
          return linksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(links_);
        }
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public TideChart.TideChartLink.Builder addLinksBuilder() {
        return getLinksFieldBuilder().addBuilder(
            TideChart.TideChartLink.getDefaultInstance());
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public TideChart.TideChartLink.Builder addLinksBuilder(
          int index) {
        return getLinksFieldBuilder().addBuilder(
            index, TideChart.TideChartLink.getDefaultInstance());
      }
      /**
       * <pre>
       * links in the graph
       * </pre>
       *
       * <code>repeated .TideChartLink links = 8;</code>
       */
      public java.util.List<TideChart.TideChartLink.Builder> 
           getLinksBuilderList() {
        return getLinksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder> 
          getLinksFieldBuilder() {
        if (linksBuilder_ == null) {
          linksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder>(
                  links_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          links_ = null;
        }
        return linksBuilder_;
      }

      private java.util.List<TideChart.TideChartRegion> regions_ =
        java.util.Collections.emptyList();
      private void ensureRegionsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          regions_ = new java.util.ArrayList<TideChart.TideChartRegion>(regions_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder> regionsBuilder_;

      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public java.util.List<TideChart.TideChartRegion> getRegionsList() {
        if (regionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(regions_);
        } else {
          return regionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public int getRegionsCount() {
        if (regionsBuilder_ == null) {
          return regions_.size();
        } else {
          return regionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public TideChart.TideChartRegion getRegions(int index) {
        if (regionsBuilder_ == null) {
          return regions_.get(index);
        } else {
          return regionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder setRegions(
          int index, TideChart.TideChartRegion value) {
        if (regionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegionsIsMutable();
          regions_.set(index, value);
          onChanged();
        } else {
          regionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder setRegions(
          int index, TideChart.TideChartRegion.Builder builderForValue) {
        if (regionsBuilder_ == null) {
          ensureRegionsIsMutable();
          regions_.set(index, builderForValue.build());
          onChanged();
        } else {
          regionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder addRegions(TideChart.TideChartRegion value) {
        if (regionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegionsIsMutable();
          regions_.add(value);
          onChanged();
        } else {
          regionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder addRegions(
          int index, TideChart.TideChartRegion value) {
        if (regionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegionsIsMutable();
          regions_.add(index, value);
          onChanged();
        } else {
          regionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder addRegions(
          TideChart.TideChartRegion.Builder builderForValue) {
        if (regionsBuilder_ == null) {
          ensureRegionsIsMutable();
          regions_.add(builderForValue.build());
          onChanged();
        } else {
          regionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder addRegions(
          int index, TideChart.TideChartRegion.Builder builderForValue) {
        if (regionsBuilder_ == null) {
          ensureRegionsIsMutable();
          regions_.add(index, builderForValue.build());
          onChanged();
        } else {
          regionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder addAllRegions(
          java.lang.Iterable<? extends TideChart.TideChartRegion> values) {
        if (regionsBuilder_ == null) {
          ensureRegionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, regions_);
          onChanged();
        } else {
          regionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder clearRegions() {
        if (regionsBuilder_ == null) {
          regions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          regionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public Builder removeRegions(int index) {
        if (regionsBuilder_ == null) {
          ensureRegionsIsMutable();
          regions_.remove(index);
          onChanged();
        } else {
          regionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public TideChart.TideChartRegion.Builder getRegionsBuilder(
          int index) {
        return getRegionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public TideChart.TideChartRegionOrBuilder getRegionsOrBuilder(
          int index) {
        if (regionsBuilder_ == null) {
          return regions_.get(index);  } else {
          return regionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public java.util.List<? extends TideChart.TideChartRegionOrBuilder> 
           getRegionsOrBuilderList() {
        if (regionsBuilder_ != null) {
          return regionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(regions_);
        }
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public TideChart.TideChartRegion.Builder addRegionsBuilder() {
        return getRegionsFieldBuilder().addBuilder(
            TideChart.TideChartRegion.getDefaultInstance());
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public TideChart.TideChartRegion.Builder addRegionsBuilder(
          int index) {
        return getRegionsFieldBuilder().addBuilder(
            index, TideChart.TideChartRegion.getDefaultInstance());
      }
      /**
       * <pre>
       * regions in the graph
       * </pre>
       *
       * <code>repeated .TideChartRegion regions = 9;</code>
       */
      public java.util.List<TideChart.TideChartRegion.Builder> 
           getRegionsBuilderList() {
        return getRegionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder> 
          getRegionsFieldBuilder() {
        if (regionsBuilder_ == null) {
          regionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder>(
                  regions_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          regions_ = null;
        }
        return regionsBuilder_;
      }

      private java.util.List<TideChart.TideChartCommentBox> comments_ =
        java.util.Collections.emptyList();
      private void ensureCommentsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          comments_ = new java.util.ArrayList<TideChart.TideChartCommentBox>(comments_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder> commentsBuilder_;

      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public java.util.List<TideChart.TideChartCommentBox> getCommentsList() {
        if (commentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(comments_);
        } else {
          return commentsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public int getCommentsCount() {
        if (commentsBuilder_ == null) {
          return comments_.size();
        } else {
          return commentsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public TideChart.TideChartCommentBox getComments(int index) {
        if (commentsBuilder_ == null) {
          return comments_.get(index);
        } else {
          return commentsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder setComments(
          int index, TideChart.TideChartCommentBox value) {
        if (commentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommentsIsMutable();
          comments_.set(index, value);
          onChanged();
        } else {
          commentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder setComments(
          int index, TideChart.TideChartCommentBox.Builder builderForValue) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          comments_.set(index, builderForValue.build());
          onChanged();
        } else {
          commentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder addComments(TideChart.TideChartCommentBox value) {
        if (commentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommentsIsMutable();
          comments_.add(value);
          onChanged();
        } else {
          commentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder addComments(
          int index, TideChart.TideChartCommentBox value) {
        if (commentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCommentsIsMutable();
          comments_.add(index, value);
          onChanged();
        } else {
          commentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder addComments(
          TideChart.TideChartCommentBox.Builder builderForValue) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          comments_.add(builderForValue.build());
          onChanged();
        } else {
          commentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder addComments(
          int index, TideChart.TideChartCommentBox.Builder builderForValue) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          comments_.add(index, builderForValue.build());
          onChanged();
        } else {
          commentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder addAllComments(
          java.lang.Iterable<? extends TideChart.TideChartCommentBox> values) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, comments_);
          onChanged();
        } else {
          commentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder clearComments() {
        if (commentsBuilder_ == null) {
          comments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          commentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public Builder removeComments(int index) {
        if (commentsBuilder_ == null) {
          ensureCommentsIsMutable();
          comments_.remove(index);
          onChanged();
        } else {
          commentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public TideChart.TideChartCommentBox.Builder getCommentsBuilder(
          int index) {
        return getCommentsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public TideChart.TideChartCommentBoxOrBuilder getCommentsOrBuilder(
          int index) {
        if (commentsBuilder_ == null) {
          return comments_.get(index);  } else {
          return commentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public java.util.List<? extends TideChart.TideChartCommentBoxOrBuilder> 
           getCommentsOrBuilderList() {
        if (commentsBuilder_ != null) {
          return commentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(comments_);
        }
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public TideChart.TideChartCommentBox.Builder addCommentsBuilder() {
        return getCommentsFieldBuilder().addBuilder(
            TideChart.TideChartCommentBox.getDefaultInstance());
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public TideChart.TideChartCommentBox.Builder addCommentsBuilder(
          int index) {
        return getCommentsFieldBuilder().addBuilder(
            index, TideChart.TideChartCommentBox.getDefaultInstance());
      }
      /**
       * <pre>
       * comment boxes on the graph
       * </pre>
       *
       * <code>repeated .TideChartCommentBox comments = 10;</code>
       */
      public java.util.List<TideChart.TideChartCommentBox.Builder> 
           getCommentsBuilderList() {
        return getCommentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder> 
          getCommentsFieldBuilder() {
        if (commentsBuilder_ == null) {
          commentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder>(
                  comments_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          comments_ = null;
        }
        return commentsBuilder_;
      }

      private java.util.List<TideChart.TideChartWidget> widgets_ =
        java.util.Collections.emptyList();
      private void ensureWidgetsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          widgets_ = new java.util.ArrayList<TideChart.TideChartWidget>(widgets_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder> widgetsBuilder_;

      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public java.util.List<TideChart.TideChartWidget> getWidgetsList() {
        if (widgetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(widgets_);
        } else {
          return widgetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public int getWidgetsCount() {
        if (widgetsBuilder_ == null) {
          return widgets_.size();
        } else {
          return widgetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public TideChart.TideChartWidget getWidgets(int index) {
        if (widgetsBuilder_ == null) {
          return widgets_.get(index);
        } else {
          return widgetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder setWidgets(
          int index, TideChart.TideChartWidget value) {
        if (widgetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWidgetsIsMutable();
          widgets_.set(index, value);
          onChanged();
        } else {
          widgetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder setWidgets(
          int index, TideChart.TideChartWidget.Builder builderForValue) {
        if (widgetsBuilder_ == null) {
          ensureWidgetsIsMutable();
          widgets_.set(index, builderForValue.build());
          onChanged();
        } else {
          widgetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder addWidgets(TideChart.TideChartWidget value) {
        if (widgetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWidgetsIsMutable();
          widgets_.add(value);
          onChanged();
        } else {
          widgetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder addWidgets(
          int index, TideChart.TideChartWidget value) {
        if (widgetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWidgetsIsMutable();
          widgets_.add(index, value);
          onChanged();
        } else {
          widgetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder addWidgets(
          TideChart.TideChartWidget.Builder builderForValue) {
        if (widgetsBuilder_ == null) {
          ensureWidgetsIsMutable();
          widgets_.add(builderForValue.build());
          onChanged();
        } else {
          widgetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder addWidgets(
          int index, TideChart.TideChartWidget.Builder builderForValue) {
        if (widgetsBuilder_ == null) {
          ensureWidgetsIsMutable();
          widgets_.add(index, builderForValue.build());
          onChanged();
        } else {
          widgetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder addAllWidgets(
          java.lang.Iterable<? extends TideChart.TideChartWidget> values) {
        if (widgetsBuilder_ == null) {
          ensureWidgetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, widgets_);
          onChanged();
        } else {
          widgetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder clearWidgets() {
        if (widgetsBuilder_ == null) {
          widgets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          widgetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public Builder removeWidgets(int index) {
        if (widgetsBuilder_ == null) {
          ensureWidgetsIsMutable();
          widgets_.remove(index);
          onChanged();
        } else {
          widgetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public TideChart.TideChartWidget.Builder getWidgetsBuilder(
          int index) {
        return getWidgetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public TideChart.TideChartWidgetOrBuilder getWidgetsOrBuilder(
          int index) {
        if (widgetsBuilder_ == null) {
          return widgets_.get(index);  } else {
          return widgetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public java.util.List<? extends TideChart.TideChartWidgetOrBuilder> 
           getWidgetsOrBuilderList() {
        if (widgetsBuilder_ != null) {
          return widgetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(widgets_);
        }
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public TideChart.TideChartWidget.Builder addWidgetsBuilder() {
        return getWidgetsFieldBuilder().addBuilder(
            TideChart.TideChartWidget.getDefaultInstance());
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public TideChart.TideChartWidget.Builder addWidgetsBuilder(
          int index) {
        return getWidgetsFieldBuilder().addBuilder(
            index, TideChart.TideChartWidget.getDefaultInstance());
      }
      /**
       * <pre>
       * interactive widgets for the graph (not part of the data flow graph: test instrudements, data visualization, debugging, etc.)
       * </pre>
       *
       * <code>repeated .TideChartWidget widgets = 11;</code>
       */
      public java.util.List<TideChart.TideChartWidget.Builder> 
           getWidgetsBuilderList() {
        return getWidgetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder> 
          getWidgetsFieldBuilder() {
        if (widgetsBuilder_ == null) {
          widgetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder>(
                  widgets_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          widgets_ = null;
        }
        return widgetsBuilder_;
      }

      private java.util.List<TideChart.TideChartProperty> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          props_ = new java.util.ArrayList<TideChart.TideChartProperty>(props_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> propsBuilder_;

      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder addAllProps(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * a set of properties shared by all nodes on the graph
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 12;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }

      private java.util.List<TideChart.TideChartCommand> history_ =
        java.util.Collections.emptyList();
      private void ensureHistoryIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          history_ = new java.util.ArrayList<TideChart.TideChartCommand>(history_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder> historyBuilder_;

      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public java.util.List<TideChart.TideChartCommand> getHistoryList() {
        if (historyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(history_);
        } else {
          return historyBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public int getHistoryCount() {
        if (historyBuilder_ == null) {
          return history_.size();
        } else {
          return historyBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public TideChart.TideChartCommand getHistory(int index) {
        if (historyBuilder_ == null) {
          return history_.get(index);
        } else {
          return historyBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder setHistory(
          int index, TideChart.TideChartCommand value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.set(index, value);
          onChanged();
        } else {
          historyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder setHistory(
          int index, TideChart.TideChartCommand.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.set(index, builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder addHistory(TideChart.TideChartCommand value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.add(value);
          onChanged();
        } else {
          historyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder addHistory(
          int index, TideChart.TideChartCommand value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.add(index, value);
          onChanged();
        } else {
          historyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder addHistory(
          TideChart.TideChartCommand.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.add(builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder addHistory(
          int index, TideChart.TideChartCommand.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.add(index, builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder addAllHistory(
          java.lang.Iterable<? extends TideChart.TideChartCommand> values) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, history_);
          onChanged();
        } else {
          historyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder clearHistory() {
        if (historyBuilder_ == null) {
          history_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          historyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public Builder removeHistory(int index) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.remove(index);
          onChanged();
        } else {
          historyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public TideChart.TideChartCommand.Builder getHistoryBuilder(
          int index) {
        return getHistoryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public TideChart.TideChartCommandOrBuilder getHistoryOrBuilder(
          int index) {
        if (historyBuilder_ == null) {
          return history_.get(index);  } else {
          return historyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
           getHistoryOrBuilderList() {
        if (historyBuilder_ != null) {
          return historyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(history_);
        }
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public TideChart.TideChartCommand.Builder addHistoryBuilder() {
        return getHistoryFieldBuilder().addBuilder(
            TideChart.TideChartCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public TideChart.TideChartCommand.Builder addHistoryBuilder(
          int index) {
        return getHistoryFieldBuilder().addBuilder(
            index, TideChart.TideChartCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * all the changes made from source version to current version
       * </pre>
       *
       * <code>repeated .TideChartCommand history = 13;</code>
       */
      public java.util.List<TideChart.TideChartCommand.Builder> 
           getHistoryBuilderList() {
        return getHistoryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder> 
          getHistoryFieldBuilder() {
        if (historyBuilder_ == null) {
          historyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder>(
                  history_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          history_ = null;
        }
        return historyBuilder_;
      }

      private boolean logging_ ;
      /**
       * <pre>
       * flag indicating this graph will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public boolean getLogging() {
        return logging_;
      }
      /**
       * <pre>
       * flag indicating this graph will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public Builder setLogging(boolean value) {
        
        logging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this graph will trace messages
       * </pre>
       *
       * <code>bool logging = 16;</code>
       */
      public Builder clearLogging() {
        
        logging_ = false;
        onChanged();
        return this;
      }

      private boolean debugging_ ;
      /**
       * <pre>
       * flag indicating this graph is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public boolean getDebugging() {
        return debugging_;
      }
      /**
       * <pre>
       * flag indicating this graph is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public Builder setDebugging(boolean value) {
        
        debugging_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this graph is a debug breakpoint
       * </pre>
       *
       * <code>bool debugging = 17;</code>
       */
      public Builder clearDebugging() {
        
        debugging_ = false;
        onChanged();
        return this;
      }

      private boolean paused_ ;
      /**
       * <pre>
       * flag indicating this graph is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public boolean getPaused() {
        return paused_;
      }
      /**
       * <pre>
       * flag indicating this graph is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public Builder setPaused(boolean value) {
        
        paused_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this graph is paused (messages are queued)
       * </pre>
       *
       * <code>bool paused = 18;</code>
       */
      public Builder clearPaused() {
        
        paused_ = false;
        onChanged();
        return this;
      }

      private boolean disabled_ ;
      /**
       * <pre>
       * flag indicating this graph is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public boolean getDisabled() {
        return disabled_;
      }
      /**
       * <pre>
       * flag indicating this graph is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public Builder setDisabled(boolean value) {
        
        disabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * flag indicating this graph is disabled (messages are dropped)
       * </pre>
       *
       * <code>bool disabled = 19;</code>
       */
      public Builder clearDisabled() {
        
        disabled_ = false;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartNote> notes_ =
        java.util.Collections.emptyList();
      private void ensureNotesIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          notes_ = new java.util.ArrayList<TideChart.TideChartNote>(notes_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> notesBuilder_;

      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<TideChart.TideChartNote> getNotesList() {
        if (notesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(notes_);
        } else {
          return notesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public int getNotesCount() {
        if (notesBuilder_ == null) {
          return notes_.size();
        } else {
          return notesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote getNotes(int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);
        } else {
          return notesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.set(index, value);
          onChanged();
        } else {
          notesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.set(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(value);
          onChanged();
        } else {
          notesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(index, value);
          onChanged();
        } else {
          notesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder addAllNotes(
          java.lang.Iterable<? extends TideChart.TideChartNote> values) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, notes_);
          onChanged();
        } else {
          notesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder clearNotes() {
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          notesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public Builder removeNotes(int index) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.remove(index);
          onChanged();
        } else {
          notesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder getNotesBuilder(
          int index) {
        return getNotesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
          int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);  } else {
          return notesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
           getNotesOrBuilderList() {
        if (notesBuilder_ != null) {
          return notesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(notes_);
        }
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder() {
        return getNotesFieldBuilder().addBuilder(
            TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder(
          int index) {
        return getNotesFieldBuilder().addBuilder(
            index, TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * comments associated with this graph
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 20;</code>
       */
      public java.util.List<TideChart.TideChartNote.Builder> 
           getNotesBuilderList() {
        return getNotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> 
          getNotesFieldBuilder() {
        if (notesBuilder_ == null) {
          notesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder>(
                  notes_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          notes_ = null;
        }
        return notesBuilder_;
      }

      private java.lang.Object script_ = "";
      /**
       * <pre>
       * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public java.lang.String getScript() {
        java.lang.Object ref = script_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          script_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public com.google.protobuf.ByteString
          getScriptBytes() {
        java.lang.Object ref = script_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          script_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder setScript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        script_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder clearScript() {
        
        script_ = getDefaultInstance().getScript();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a user script of custom code for the graph (non-message based thread initialization, global exception handling)
       * </pre>
       *
       * <code>string script = 21;</code>
       */
      public Builder setScriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        script_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartGraph)
    }

    // @@protoc_insertion_point(class_scope:TideChartGraph)
    private static final TideChart.TideChartGraph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartGraph();
    }

    public static TideChart.TideChartGraph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartGraph>
        PARSER = new com.google.protobuf.AbstractParser<TideChartGraph>() {
      @java.lang.Override
      public TideChartGraph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartGraph(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartGraph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartGraph> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartGraph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for the change
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * unique id for the change
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * graph id being targetd by the the change (used by chart level streams: working, remote)
     * </pre>
     *
     * <code>string target = 2;</code>
     */
    java.lang.String getTarget();
    /**
     * <pre>
     * graph id being targetd by the the change (used by chart level streams: working, remote)
     * </pre>
     *
     * <code>string target = 2;</code>
     */
    com.google.protobuf.ByteString
        getTargetBytes();

    /**
     * <code>.TideChartGroupCommand group = 3;</code>
     */
    boolean hasGroup();
    /**
     * <code>.TideChartGroupCommand group = 3;</code>
     */
    TideChart.TideChartGroupCommand getGroup();
    /**
     * <code>.TideChartGroupCommand group = 3;</code>
     */
    TideChart.TideChartGroupCommandOrBuilder getGroupOrBuilder();

    /**
     * <code>.TideChartMoveCommand move = 4;</code>
     */
    boolean hasMove();
    /**
     * <code>.TideChartMoveCommand move = 4;</code>
     */
    TideChart.TideChartMoveCommand getMove();
    /**
     * <code>.TideChartMoveCommand move = 4;</code>
     */
    TideChart.TideChartMoveCommandOrBuilder getMoveOrBuilder();

    /**
     * <code>.TideChartCommentBoxCommand comment = 5;</code>
     */
    boolean hasComment();
    /**
     * <code>.TideChartCommentBoxCommand comment = 5;</code>
     */
    TideChart.TideChartCommentBoxCommand getComment();
    /**
     * <code>.TideChartCommentBoxCommand comment = 5;</code>
     */
    TideChart.TideChartCommentBoxCommandOrBuilder getCommentOrBuilder();

    /**
     * <code>.TideChartWidgetCommand widget = 6;</code>
     */
    boolean hasWidget();
    /**
     * <code>.TideChartWidgetCommand widget = 6;</code>
     */
    TideChart.TideChartWidgetCommand getWidget();
    /**
     * <code>.TideChartWidgetCommand widget = 6;</code>
     */
    TideChart.TideChartWidgetCommandOrBuilder getWidgetOrBuilder();

    /**
     * <code>.TideChartPortCommand port = 7;</code>
     */
    boolean hasPort();
    /**
     * <code>.TideChartPortCommand port = 7;</code>
     */
    TideChart.TideChartPortCommand getPort();
    /**
     * <code>.TideChartPortCommand port = 7;</code>
     */
    TideChart.TideChartPortCommandOrBuilder getPortOrBuilder();

    /**
     * <code>.TideChartLinkCommand link = 8;</code>
     */
    boolean hasLink();
    /**
     * <code>.TideChartLinkCommand link = 8;</code>
     */
    TideChart.TideChartLinkCommand getLink();
    /**
     * <code>.TideChartLinkCommand link = 8;</code>
     */
    TideChart.TideChartLinkCommandOrBuilder getLinkOrBuilder();

    /**
     * <code>.TideChartNodeCommand node = 9;</code>
     */
    boolean hasNode();
    /**
     * <code>.TideChartNodeCommand node = 9;</code>
     */
    TideChart.TideChartNodeCommand getNode();
    /**
     * <code>.TideChartNodeCommand node = 9;</code>
     */
    TideChart.TideChartNodeCommandOrBuilder getNodeOrBuilder();

    /**
     * <code>.TideChartRegionCommand region = 10;</code>
     */
    boolean hasRegion();
    /**
     * <code>.TideChartRegionCommand region = 10;</code>
     */
    TideChart.TideChartRegionCommand getRegion();
    /**
     * <code>.TideChartRegionCommand region = 10;</code>
     */
    TideChart.TideChartRegionCommandOrBuilder getRegionOrBuilder();

    /**
     * <code>.TideChartGraphCommand graph = 11;</code>
     */
    boolean hasGraph();
    /**
     * <code>.TideChartGraphCommand graph = 11;</code>
     */
    TideChart.TideChartGraphCommand getGraph();
    /**
     * <code>.TideChartGraphCommand graph = 11;</code>
     */
    TideChart.TideChartGraphCommandOrBuilder getGraphOrBuilder();

    /**
     * <code>.TideChartPropertyCommand props = 12;</code>
     */
    boolean hasProps();
    /**
     * <code>.TideChartPropertyCommand props = 12;</code>
     */
    TideChart.TideChartPropertyCommand getProps();
    /**
     * <code>.TideChartPropertyCommand props = 12;</code>
     */
    TideChart.TideChartPropertyCommandOrBuilder getPropsOrBuilder();

    /**
     * <code>.TideChartNoteCommand note = 13;</code>
     */
    boolean hasNote();
    /**
     * <code>.TideChartNoteCommand note = 13;</code>
     */
    TideChart.TideChartNoteCommand getNote();
    /**
     * <code>.TideChartNoteCommand note = 13;</code>
     */
    TideChart.TideChartNoteCommandOrBuilder getNoteOrBuilder();

    public TideChart.TideChartCommand.CommandCase getCommandCase();
  }
  /**
   * Protobuf type {@code TideChartCommand}
   */
  public  static final class TideChartCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartCommand)
      TideChartCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartCommand.newBuilder() to construct.
    private TideChartCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartCommand() {
      version_ = "";
      target_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              target_ = s;
              break;
            }
            case 26: {
              TideChart.TideChartGroupCommand.Builder subBuilder = null;
              if (commandCase_ == 3) {
                subBuilder = ((TideChart.TideChartGroupCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartGroupCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartGroupCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 3;
              break;
            }
            case 34: {
              TideChart.TideChartMoveCommand.Builder subBuilder = null;
              if (commandCase_ == 4) {
                subBuilder = ((TideChart.TideChartMoveCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartMoveCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartMoveCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 4;
              break;
            }
            case 42: {
              TideChart.TideChartCommentBoxCommand.Builder subBuilder = null;
              if (commandCase_ == 5) {
                subBuilder = ((TideChart.TideChartCommentBoxCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartCommentBoxCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartCommentBoxCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 5;
              break;
            }
            case 50: {
              TideChart.TideChartWidgetCommand.Builder subBuilder = null;
              if (commandCase_ == 6) {
                subBuilder = ((TideChart.TideChartWidgetCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartWidgetCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartWidgetCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 6;
              break;
            }
            case 58: {
              TideChart.TideChartPortCommand.Builder subBuilder = null;
              if (commandCase_ == 7) {
                subBuilder = ((TideChart.TideChartPortCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartPortCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartPortCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 7;
              break;
            }
            case 66: {
              TideChart.TideChartLinkCommand.Builder subBuilder = null;
              if (commandCase_ == 8) {
                subBuilder = ((TideChart.TideChartLinkCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartLinkCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartLinkCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 8;
              break;
            }
            case 74: {
              TideChart.TideChartNodeCommand.Builder subBuilder = null;
              if (commandCase_ == 9) {
                subBuilder = ((TideChart.TideChartNodeCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartNodeCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartNodeCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 9;
              break;
            }
            case 82: {
              TideChart.TideChartRegionCommand.Builder subBuilder = null;
              if (commandCase_ == 10) {
                subBuilder = ((TideChart.TideChartRegionCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartRegionCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartRegionCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 10;
              break;
            }
            case 90: {
              TideChart.TideChartGraphCommand.Builder subBuilder = null;
              if (commandCase_ == 11) {
                subBuilder = ((TideChart.TideChartGraphCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartGraphCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartGraphCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 11;
              break;
            }
            case 98: {
              TideChart.TideChartPropertyCommand.Builder subBuilder = null;
              if (commandCase_ == 12) {
                subBuilder = ((TideChart.TideChartPropertyCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartPropertyCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartPropertyCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 12;
              break;
            }
            case 106: {
              TideChart.TideChartNoteCommand.Builder subBuilder = null;
              if (commandCase_ == 13) {
                subBuilder = ((TideChart.TideChartNoteCommand) command_).toBuilder();
              }
              command_ =
                  input.readMessage(TideChart.TideChartNoteCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TideChart.TideChartNoteCommand) command_);
                command_ = subBuilder.buildPartial();
              }
              commandCase_ = 13;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartCommand.class, TideChart.TideChartCommand.Builder.class);
    }

    private int commandCase_ = 0;
    private java.lang.Object command_;
    public enum CommandCase
        implements com.google.protobuf.Internal.EnumLite {
      GROUP(3),
      MOVE(4),
      COMMENT(5),
      WIDGET(6),
      PORT(7),
      LINK(8),
      NODE(9),
      REGION(10),
      GRAPH(11),
      PROPS(12),
      NOTE(13),
      COMMAND_NOT_SET(0);
      private final int value;
      private CommandCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CommandCase valueOf(int value) {
        return forNumber(value);
      }

      public static CommandCase forNumber(int value) {
        switch (value) {
          case 3: return GROUP;
          case 4: return MOVE;
          case 5: return COMMENT;
          case 6: return WIDGET;
          case 7: return PORT;
          case 8: return LINK;
          case 9: return NODE;
          case 10: return REGION;
          case 11: return GRAPH;
          case 12: return PROPS;
          case 13: return NOTE;
          case 0: return COMMAND_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CommandCase
    getCommandCase() {
      return CommandCase.forNumber(
          commandCase_);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * unique id for the change
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for the change
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGET_FIELD_NUMBER = 2;
    private volatile java.lang.Object target_;
    /**
     * <pre>
     * graph id being targetd by the the change (used by chart level streams: working, remote)
     * </pre>
     *
     * <code>string target = 2;</code>
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        target_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * graph id being targetd by the the change (used by chart level streams: working, remote)
     * </pre>
     *
     * <code>string target = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GROUP_FIELD_NUMBER = 3;
    /**
     * <code>.TideChartGroupCommand group = 3;</code>
     */
    public boolean hasGroup() {
      return commandCase_ == 3;
    }
    /**
     * <code>.TideChartGroupCommand group = 3;</code>
     */
    public TideChart.TideChartGroupCommand getGroup() {
      if (commandCase_ == 3) {
         return (TideChart.TideChartGroupCommand) command_;
      }
      return TideChart.TideChartGroupCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartGroupCommand group = 3;</code>
     */
    public TideChart.TideChartGroupCommandOrBuilder getGroupOrBuilder() {
      if (commandCase_ == 3) {
         return (TideChart.TideChartGroupCommand) command_;
      }
      return TideChart.TideChartGroupCommand.getDefaultInstance();
    }

    public static final int MOVE_FIELD_NUMBER = 4;
    /**
     * <code>.TideChartMoveCommand move = 4;</code>
     */
    public boolean hasMove() {
      return commandCase_ == 4;
    }
    /**
     * <code>.TideChartMoveCommand move = 4;</code>
     */
    public TideChart.TideChartMoveCommand getMove() {
      if (commandCase_ == 4) {
         return (TideChart.TideChartMoveCommand) command_;
      }
      return TideChart.TideChartMoveCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartMoveCommand move = 4;</code>
     */
    public TideChart.TideChartMoveCommandOrBuilder getMoveOrBuilder() {
      if (commandCase_ == 4) {
         return (TideChart.TideChartMoveCommand) command_;
      }
      return TideChart.TideChartMoveCommand.getDefaultInstance();
    }

    public static final int COMMENT_FIELD_NUMBER = 5;
    /**
     * <code>.TideChartCommentBoxCommand comment = 5;</code>
     */
    public boolean hasComment() {
      return commandCase_ == 5;
    }
    /**
     * <code>.TideChartCommentBoxCommand comment = 5;</code>
     */
    public TideChart.TideChartCommentBoxCommand getComment() {
      if (commandCase_ == 5) {
         return (TideChart.TideChartCommentBoxCommand) command_;
      }
      return TideChart.TideChartCommentBoxCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartCommentBoxCommand comment = 5;</code>
     */
    public TideChart.TideChartCommentBoxCommandOrBuilder getCommentOrBuilder() {
      if (commandCase_ == 5) {
         return (TideChart.TideChartCommentBoxCommand) command_;
      }
      return TideChart.TideChartCommentBoxCommand.getDefaultInstance();
    }

    public static final int WIDGET_FIELD_NUMBER = 6;
    /**
     * <code>.TideChartWidgetCommand widget = 6;</code>
     */
    public boolean hasWidget() {
      return commandCase_ == 6;
    }
    /**
     * <code>.TideChartWidgetCommand widget = 6;</code>
     */
    public TideChart.TideChartWidgetCommand getWidget() {
      if (commandCase_ == 6) {
         return (TideChart.TideChartWidgetCommand) command_;
      }
      return TideChart.TideChartWidgetCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartWidgetCommand widget = 6;</code>
     */
    public TideChart.TideChartWidgetCommandOrBuilder getWidgetOrBuilder() {
      if (commandCase_ == 6) {
         return (TideChart.TideChartWidgetCommand) command_;
      }
      return TideChart.TideChartWidgetCommand.getDefaultInstance();
    }

    public static final int PORT_FIELD_NUMBER = 7;
    /**
     * <code>.TideChartPortCommand port = 7;</code>
     */
    public boolean hasPort() {
      return commandCase_ == 7;
    }
    /**
     * <code>.TideChartPortCommand port = 7;</code>
     */
    public TideChart.TideChartPortCommand getPort() {
      if (commandCase_ == 7) {
         return (TideChart.TideChartPortCommand) command_;
      }
      return TideChart.TideChartPortCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartPortCommand port = 7;</code>
     */
    public TideChart.TideChartPortCommandOrBuilder getPortOrBuilder() {
      if (commandCase_ == 7) {
         return (TideChart.TideChartPortCommand) command_;
      }
      return TideChart.TideChartPortCommand.getDefaultInstance();
    }

    public static final int LINK_FIELD_NUMBER = 8;
    /**
     * <code>.TideChartLinkCommand link = 8;</code>
     */
    public boolean hasLink() {
      return commandCase_ == 8;
    }
    /**
     * <code>.TideChartLinkCommand link = 8;</code>
     */
    public TideChart.TideChartLinkCommand getLink() {
      if (commandCase_ == 8) {
         return (TideChart.TideChartLinkCommand) command_;
      }
      return TideChart.TideChartLinkCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartLinkCommand link = 8;</code>
     */
    public TideChart.TideChartLinkCommandOrBuilder getLinkOrBuilder() {
      if (commandCase_ == 8) {
         return (TideChart.TideChartLinkCommand) command_;
      }
      return TideChart.TideChartLinkCommand.getDefaultInstance();
    }

    public static final int NODE_FIELD_NUMBER = 9;
    /**
     * <code>.TideChartNodeCommand node = 9;</code>
     */
    public boolean hasNode() {
      return commandCase_ == 9;
    }
    /**
     * <code>.TideChartNodeCommand node = 9;</code>
     */
    public TideChart.TideChartNodeCommand getNode() {
      if (commandCase_ == 9) {
         return (TideChart.TideChartNodeCommand) command_;
      }
      return TideChart.TideChartNodeCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartNodeCommand node = 9;</code>
     */
    public TideChart.TideChartNodeCommandOrBuilder getNodeOrBuilder() {
      if (commandCase_ == 9) {
         return (TideChart.TideChartNodeCommand) command_;
      }
      return TideChart.TideChartNodeCommand.getDefaultInstance();
    }

    public static final int REGION_FIELD_NUMBER = 10;
    /**
     * <code>.TideChartRegionCommand region = 10;</code>
     */
    public boolean hasRegion() {
      return commandCase_ == 10;
    }
    /**
     * <code>.TideChartRegionCommand region = 10;</code>
     */
    public TideChart.TideChartRegionCommand getRegion() {
      if (commandCase_ == 10) {
         return (TideChart.TideChartRegionCommand) command_;
      }
      return TideChart.TideChartRegionCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartRegionCommand region = 10;</code>
     */
    public TideChart.TideChartRegionCommandOrBuilder getRegionOrBuilder() {
      if (commandCase_ == 10) {
         return (TideChart.TideChartRegionCommand) command_;
      }
      return TideChart.TideChartRegionCommand.getDefaultInstance();
    }

    public static final int GRAPH_FIELD_NUMBER = 11;
    /**
     * <code>.TideChartGraphCommand graph = 11;</code>
     */
    public boolean hasGraph() {
      return commandCase_ == 11;
    }
    /**
     * <code>.TideChartGraphCommand graph = 11;</code>
     */
    public TideChart.TideChartGraphCommand getGraph() {
      if (commandCase_ == 11) {
         return (TideChart.TideChartGraphCommand) command_;
      }
      return TideChart.TideChartGraphCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartGraphCommand graph = 11;</code>
     */
    public TideChart.TideChartGraphCommandOrBuilder getGraphOrBuilder() {
      if (commandCase_ == 11) {
         return (TideChart.TideChartGraphCommand) command_;
      }
      return TideChart.TideChartGraphCommand.getDefaultInstance();
    }

    public static final int PROPS_FIELD_NUMBER = 12;
    /**
     * <code>.TideChartPropertyCommand props = 12;</code>
     */
    public boolean hasProps() {
      return commandCase_ == 12;
    }
    /**
     * <code>.TideChartPropertyCommand props = 12;</code>
     */
    public TideChart.TideChartPropertyCommand getProps() {
      if (commandCase_ == 12) {
         return (TideChart.TideChartPropertyCommand) command_;
      }
      return TideChart.TideChartPropertyCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartPropertyCommand props = 12;</code>
     */
    public TideChart.TideChartPropertyCommandOrBuilder getPropsOrBuilder() {
      if (commandCase_ == 12) {
         return (TideChart.TideChartPropertyCommand) command_;
      }
      return TideChart.TideChartPropertyCommand.getDefaultInstance();
    }

    public static final int NOTE_FIELD_NUMBER = 13;
    /**
     * <code>.TideChartNoteCommand note = 13;</code>
     */
    public boolean hasNote() {
      return commandCase_ == 13;
    }
    /**
     * <code>.TideChartNoteCommand note = 13;</code>
     */
    public TideChart.TideChartNoteCommand getNote() {
      if (commandCase_ == 13) {
         return (TideChart.TideChartNoteCommand) command_;
      }
      return TideChart.TideChartNoteCommand.getDefaultInstance();
    }
    /**
     * <code>.TideChartNoteCommand note = 13;</code>
     */
    public TideChart.TideChartNoteCommandOrBuilder getNoteOrBuilder() {
      if (commandCase_ == 13) {
         return (TideChart.TideChartNoteCommand) command_;
      }
      return TideChart.TideChartNoteCommand.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
      }
      if (!getTargetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, target_);
      }
      if (commandCase_ == 3) {
        output.writeMessage(3, (TideChart.TideChartGroupCommand) command_);
      }
      if (commandCase_ == 4) {
        output.writeMessage(4, (TideChart.TideChartMoveCommand) command_);
      }
      if (commandCase_ == 5) {
        output.writeMessage(5, (TideChart.TideChartCommentBoxCommand) command_);
      }
      if (commandCase_ == 6) {
        output.writeMessage(6, (TideChart.TideChartWidgetCommand) command_);
      }
      if (commandCase_ == 7) {
        output.writeMessage(7, (TideChart.TideChartPortCommand) command_);
      }
      if (commandCase_ == 8) {
        output.writeMessage(8, (TideChart.TideChartLinkCommand) command_);
      }
      if (commandCase_ == 9) {
        output.writeMessage(9, (TideChart.TideChartNodeCommand) command_);
      }
      if (commandCase_ == 10) {
        output.writeMessage(10, (TideChart.TideChartRegionCommand) command_);
      }
      if (commandCase_ == 11) {
        output.writeMessage(11, (TideChart.TideChartGraphCommand) command_);
      }
      if (commandCase_ == 12) {
        output.writeMessage(12, (TideChart.TideChartPropertyCommand) command_);
      }
      if (commandCase_ == 13) {
        output.writeMessage(13, (TideChart.TideChartNoteCommand) command_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
      }
      if (!getTargetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, target_);
      }
      if (commandCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (TideChart.TideChartGroupCommand) command_);
      }
      if (commandCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (TideChart.TideChartMoveCommand) command_);
      }
      if (commandCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (TideChart.TideChartCommentBoxCommand) command_);
      }
      if (commandCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (TideChart.TideChartWidgetCommand) command_);
      }
      if (commandCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (TideChart.TideChartPortCommand) command_);
      }
      if (commandCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (TideChart.TideChartLinkCommand) command_);
      }
      if (commandCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (TideChart.TideChartNodeCommand) command_);
      }
      if (commandCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (TideChart.TideChartRegionCommand) command_);
      }
      if (commandCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (TideChart.TideChartGraphCommand) command_);
      }
      if (commandCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (TideChart.TideChartPropertyCommand) command_);
      }
      if (commandCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (TideChart.TideChartNoteCommand) command_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartCommand other = (TideChart.TideChartCommand) obj;

      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getTarget()
          .equals(other.getTarget())) return false;
      if (!getCommandCase().equals(other.getCommandCase())) return false;
      switch (commandCase_) {
        case 3:
          if (!getGroup()
              .equals(other.getGroup())) return false;
          break;
        case 4:
          if (!getMove()
              .equals(other.getMove())) return false;
          break;
        case 5:
          if (!getComment()
              .equals(other.getComment())) return false;
          break;
        case 6:
          if (!getWidget()
              .equals(other.getWidget())) return false;
          break;
        case 7:
          if (!getPort()
              .equals(other.getPort())) return false;
          break;
        case 8:
          if (!getLink()
              .equals(other.getLink())) return false;
          break;
        case 9:
          if (!getNode()
              .equals(other.getNode())) return false;
          break;
        case 10:
          if (!getRegion()
              .equals(other.getRegion())) return false;
          break;
        case 11:
          if (!getGraph()
              .equals(other.getGraph())) return false;
          break;
        case 12:
          if (!getProps()
              .equals(other.getProps())) return false;
          break;
        case 13:
          if (!getNote()
              .equals(other.getNote())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + TARGET_FIELD_NUMBER;
      hash = (53 * hash) + getTarget().hashCode();
      switch (commandCase_) {
        case 3:
          hash = (37 * hash) + GROUP_FIELD_NUMBER;
          hash = (53 * hash) + getGroup().hashCode();
          break;
        case 4:
          hash = (37 * hash) + MOVE_FIELD_NUMBER;
          hash = (53 * hash) + getMove().hashCode();
          break;
        case 5:
          hash = (37 * hash) + COMMENT_FIELD_NUMBER;
          hash = (53 * hash) + getComment().hashCode();
          break;
        case 6:
          hash = (37 * hash) + WIDGET_FIELD_NUMBER;
          hash = (53 * hash) + getWidget().hashCode();
          break;
        case 7:
          hash = (37 * hash) + PORT_FIELD_NUMBER;
          hash = (53 * hash) + getPort().hashCode();
          break;
        case 8:
          hash = (37 * hash) + LINK_FIELD_NUMBER;
          hash = (53 * hash) + getLink().hashCode();
          break;
        case 9:
          hash = (37 * hash) + NODE_FIELD_NUMBER;
          hash = (53 * hash) + getNode().hashCode();
          break;
        case 10:
          hash = (37 * hash) + REGION_FIELD_NUMBER;
          hash = (53 * hash) + getRegion().hashCode();
          break;
        case 11:
          hash = (37 * hash) + GRAPH_FIELD_NUMBER;
          hash = (53 * hash) + getGraph().hashCode();
          break;
        case 12:
          hash = (37 * hash) + PROPS_FIELD_NUMBER;
          hash = (53 * hash) + getProps().hashCode();
          break;
        case 13:
          hash = (37 * hash) + NOTE_FIELD_NUMBER;
          hash = (53 * hash) + getNote().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartCommand)
        TideChart.TideChartCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartCommand.class, TideChart.TideChartCommand.Builder.class);
      }

      // Construct using TideChart.TideChartCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = "";

        target_ = "";

        commandCase_ = 0;
        command_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartCommand getDefaultInstanceForType() {
        return TideChart.TideChartCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartCommand build() {
        TideChart.TideChartCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartCommand buildPartial() {
        TideChart.TideChartCommand result = new TideChart.TideChartCommand(this);
        result.version_ = version_;
        result.target_ = target_;
        if (commandCase_ == 3) {
          if (groupBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = groupBuilder_.build();
          }
        }
        if (commandCase_ == 4) {
          if (moveBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = moveBuilder_.build();
          }
        }
        if (commandCase_ == 5) {
          if (commentBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = commentBuilder_.build();
          }
        }
        if (commandCase_ == 6) {
          if (widgetBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = widgetBuilder_.build();
          }
        }
        if (commandCase_ == 7) {
          if (portBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = portBuilder_.build();
          }
        }
        if (commandCase_ == 8) {
          if (linkBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = linkBuilder_.build();
          }
        }
        if (commandCase_ == 9) {
          if (nodeBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = nodeBuilder_.build();
          }
        }
        if (commandCase_ == 10) {
          if (regionBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = regionBuilder_.build();
          }
        }
        if (commandCase_ == 11) {
          if (graphBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = graphBuilder_.build();
          }
        }
        if (commandCase_ == 12) {
          if (propsBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = propsBuilder_.build();
          }
        }
        if (commandCase_ == 13) {
          if (noteBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = noteBuilder_.build();
          }
        }
        result.commandCase_ = commandCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartCommand) {
          return mergeFrom((TideChart.TideChartCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartCommand other) {
        if (other == TideChart.TideChartCommand.getDefaultInstance()) return this;
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getTarget().isEmpty()) {
          target_ = other.target_;
          onChanged();
        }
        switch (other.getCommandCase()) {
          case GROUP: {
            mergeGroup(other.getGroup());
            break;
          }
          case MOVE: {
            mergeMove(other.getMove());
            break;
          }
          case COMMENT: {
            mergeComment(other.getComment());
            break;
          }
          case WIDGET: {
            mergeWidget(other.getWidget());
            break;
          }
          case PORT: {
            mergePort(other.getPort());
            break;
          }
          case LINK: {
            mergeLink(other.getLink());
            break;
          }
          case NODE: {
            mergeNode(other.getNode());
            break;
          }
          case REGION: {
            mergeRegion(other.getRegion());
            break;
          }
          case GRAPH: {
            mergeGraph(other.getGraph());
            break;
          }
          case PROPS: {
            mergeProps(other.getProps());
            break;
          }
          case NOTE: {
            mergeNote(other.getNote());
            break;
          }
          case COMMAND_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int commandCase_ = 0;
      private java.lang.Object command_;
      public CommandCase
          getCommandCase() {
        return CommandCase.forNumber(
            commandCase_);
      }

      public Builder clearCommand() {
        commandCase_ = 0;
        command_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object version_ = "";
      /**
       * <pre>
       * unique id for the change
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for the change
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for the change
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the change
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the change
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object target_ = "";
      /**
       * <pre>
       * graph id being targetd by the the change (used by chart level streams: working, remote)
       * </pre>
       *
       * <code>string target = 2;</code>
       */
      public java.lang.String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          target_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * graph id being targetd by the the change (used by chart level streams: working, remote)
       * </pre>
       *
       * <code>string target = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTargetBytes() {
        java.lang.Object ref = target_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          target_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * graph id being targetd by the the change (used by chart level streams: working, remote)
       * </pre>
       *
       * <code>string target = 2;</code>
       */
      public Builder setTarget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * graph id being targetd by the the change (used by chart level streams: working, remote)
       * </pre>
       *
       * <code>string target = 2;</code>
       */
      public Builder clearTarget() {
        
        target_ = getDefaultInstance().getTarget();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * graph id being targetd by the the change (used by chart level streams: working, remote)
       * </pre>
       *
       * <code>string target = 2;</code>
       */
      public Builder setTargetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        target_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartGroupCommand, TideChart.TideChartGroupCommand.Builder, TideChart.TideChartGroupCommandOrBuilder> groupBuilder_;
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      public boolean hasGroup() {
        return commandCase_ == 3;
      }
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      public TideChart.TideChartGroupCommand getGroup() {
        if (groupBuilder_ == null) {
          if (commandCase_ == 3) {
            return (TideChart.TideChartGroupCommand) command_;
          }
          return TideChart.TideChartGroupCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 3) {
            return groupBuilder_.getMessage();
          }
          return TideChart.TideChartGroupCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      public Builder setGroup(TideChart.TideChartGroupCommand value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          groupBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      public Builder setGroup(
          TideChart.TideChartGroupCommand.Builder builderForValue) {
        if (groupBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          groupBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      public Builder mergeGroup(TideChart.TideChartGroupCommand value) {
        if (groupBuilder_ == null) {
          if (commandCase_ == 3 &&
              command_ != TideChart.TideChartGroupCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartGroupCommand.newBuilder((TideChart.TideChartGroupCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 3) {
            groupBuilder_.mergeFrom(value);
          }
          groupBuilder_.setMessage(value);
        }
        commandCase_ = 3;
        return this;
      }
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      public Builder clearGroup() {
        if (groupBuilder_ == null) {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 3) {
            commandCase_ = 0;
            command_ = null;
          }
          groupBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      public TideChart.TideChartGroupCommand.Builder getGroupBuilder() {
        return getGroupFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      public TideChart.TideChartGroupCommandOrBuilder getGroupOrBuilder() {
        if ((commandCase_ == 3) && (groupBuilder_ != null)) {
          return groupBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 3) {
            return (TideChart.TideChartGroupCommand) command_;
          }
          return TideChart.TideChartGroupCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartGroupCommand group = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartGroupCommand, TideChart.TideChartGroupCommand.Builder, TideChart.TideChartGroupCommandOrBuilder> 
          getGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          if (!(commandCase_ == 3)) {
            command_ = TideChart.TideChartGroupCommand.getDefaultInstance();
          }
          groupBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartGroupCommand, TideChart.TideChartGroupCommand.Builder, TideChart.TideChartGroupCommandOrBuilder>(
                  (TideChart.TideChartGroupCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 3;
        onChanged();;
        return groupBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartMoveCommand, TideChart.TideChartMoveCommand.Builder, TideChart.TideChartMoveCommandOrBuilder> moveBuilder_;
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      public boolean hasMove() {
        return commandCase_ == 4;
      }
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      public TideChart.TideChartMoveCommand getMove() {
        if (moveBuilder_ == null) {
          if (commandCase_ == 4) {
            return (TideChart.TideChartMoveCommand) command_;
          }
          return TideChart.TideChartMoveCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 4) {
            return moveBuilder_.getMessage();
          }
          return TideChart.TideChartMoveCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      public Builder setMove(TideChart.TideChartMoveCommand value) {
        if (moveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          moveBuilder_.setMessage(value);
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      public Builder setMove(
          TideChart.TideChartMoveCommand.Builder builderForValue) {
        if (moveBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          moveBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      public Builder mergeMove(TideChart.TideChartMoveCommand value) {
        if (moveBuilder_ == null) {
          if (commandCase_ == 4 &&
              command_ != TideChart.TideChartMoveCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartMoveCommand.newBuilder((TideChart.TideChartMoveCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 4) {
            moveBuilder_.mergeFrom(value);
          }
          moveBuilder_.setMessage(value);
        }
        commandCase_ = 4;
        return this;
      }
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      public Builder clearMove() {
        if (moveBuilder_ == null) {
          if (commandCase_ == 4) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 4) {
            commandCase_ = 0;
            command_ = null;
          }
          moveBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      public TideChart.TideChartMoveCommand.Builder getMoveBuilder() {
        return getMoveFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      public TideChart.TideChartMoveCommandOrBuilder getMoveOrBuilder() {
        if ((commandCase_ == 4) && (moveBuilder_ != null)) {
          return moveBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 4) {
            return (TideChart.TideChartMoveCommand) command_;
          }
          return TideChart.TideChartMoveCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartMoveCommand move = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartMoveCommand, TideChart.TideChartMoveCommand.Builder, TideChart.TideChartMoveCommandOrBuilder> 
          getMoveFieldBuilder() {
        if (moveBuilder_ == null) {
          if (!(commandCase_ == 4)) {
            command_ = TideChart.TideChartMoveCommand.getDefaultInstance();
          }
          moveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartMoveCommand, TideChart.TideChartMoveCommand.Builder, TideChart.TideChartMoveCommandOrBuilder>(
                  (TideChart.TideChartMoveCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 4;
        onChanged();;
        return moveBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartCommentBoxCommand, TideChart.TideChartCommentBoxCommand.Builder, TideChart.TideChartCommentBoxCommandOrBuilder> commentBuilder_;
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      public boolean hasComment() {
        return commandCase_ == 5;
      }
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      public TideChart.TideChartCommentBoxCommand getComment() {
        if (commentBuilder_ == null) {
          if (commandCase_ == 5) {
            return (TideChart.TideChartCommentBoxCommand) command_;
          }
          return TideChart.TideChartCommentBoxCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 5) {
            return commentBuilder_.getMessage();
          }
          return TideChart.TideChartCommentBoxCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      public Builder setComment(TideChart.TideChartCommentBoxCommand value) {
        if (commentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          commentBuilder_.setMessage(value);
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      public Builder setComment(
          TideChart.TideChartCommentBoxCommand.Builder builderForValue) {
        if (commentBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          commentBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      public Builder mergeComment(TideChart.TideChartCommentBoxCommand value) {
        if (commentBuilder_ == null) {
          if (commandCase_ == 5 &&
              command_ != TideChart.TideChartCommentBoxCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartCommentBoxCommand.newBuilder((TideChart.TideChartCommentBoxCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 5) {
            commentBuilder_.mergeFrom(value);
          }
          commentBuilder_.setMessage(value);
        }
        commandCase_ = 5;
        return this;
      }
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      public Builder clearComment() {
        if (commentBuilder_ == null) {
          if (commandCase_ == 5) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 5) {
            commandCase_ = 0;
            command_ = null;
          }
          commentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      public TideChart.TideChartCommentBoxCommand.Builder getCommentBuilder() {
        return getCommentFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      public TideChart.TideChartCommentBoxCommandOrBuilder getCommentOrBuilder() {
        if ((commandCase_ == 5) && (commentBuilder_ != null)) {
          return commentBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 5) {
            return (TideChart.TideChartCommentBoxCommand) command_;
          }
          return TideChart.TideChartCommentBoxCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartCommentBoxCommand comment = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartCommentBoxCommand, TideChart.TideChartCommentBoxCommand.Builder, TideChart.TideChartCommentBoxCommandOrBuilder> 
          getCommentFieldBuilder() {
        if (commentBuilder_ == null) {
          if (!(commandCase_ == 5)) {
            command_ = TideChart.TideChartCommentBoxCommand.getDefaultInstance();
          }
          commentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartCommentBoxCommand, TideChart.TideChartCommentBoxCommand.Builder, TideChart.TideChartCommentBoxCommandOrBuilder>(
                  (TideChart.TideChartCommentBoxCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 5;
        onChanged();;
        return commentBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartWidgetCommand, TideChart.TideChartWidgetCommand.Builder, TideChart.TideChartWidgetCommandOrBuilder> widgetBuilder_;
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      public boolean hasWidget() {
        return commandCase_ == 6;
      }
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      public TideChart.TideChartWidgetCommand getWidget() {
        if (widgetBuilder_ == null) {
          if (commandCase_ == 6) {
            return (TideChart.TideChartWidgetCommand) command_;
          }
          return TideChart.TideChartWidgetCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 6) {
            return widgetBuilder_.getMessage();
          }
          return TideChart.TideChartWidgetCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      public Builder setWidget(TideChart.TideChartWidgetCommand value) {
        if (widgetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          widgetBuilder_.setMessage(value);
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      public Builder setWidget(
          TideChart.TideChartWidgetCommand.Builder builderForValue) {
        if (widgetBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          widgetBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      public Builder mergeWidget(TideChart.TideChartWidgetCommand value) {
        if (widgetBuilder_ == null) {
          if (commandCase_ == 6 &&
              command_ != TideChart.TideChartWidgetCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartWidgetCommand.newBuilder((TideChart.TideChartWidgetCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 6) {
            widgetBuilder_.mergeFrom(value);
          }
          widgetBuilder_.setMessage(value);
        }
        commandCase_ = 6;
        return this;
      }
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      public Builder clearWidget() {
        if (widgetBuilder_ == null) {
          if (commandCase_ == 6) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 6) {
            commandCase_ = 0;
            command_ = null;
          }
          widgetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      public TideChart.TideChartWidgetCommand.Builder getWidgetBuilder() {
        return getWidgetFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      public TideChart.TideChartWidgetCommandOrBuilder getWidgetOrBuilder() {
        if ((commandCase_ == 6) && (widgetBuilder_ != null)) {
          return widgetBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 6) {
            return (TideChart.TideChartWidgetCommand) command_;
          }
          return TideChart.TideChartWidgetCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartWidgetCommand widget = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartWidgetCommand, TideChart.TideChartWidgetCommand.Builder, TideChart.TideChartWidgetCommandOrBuilder> 
          getWidgetFieldBuilder() {
        if (widgetBuilder_ == null) {
          if (!(commandCase_ == 6)) {
            command_ = TideChart.TideChartWidgetCommand.getDefaultInstance();
          }
          widgetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartWidgetCommand, TideChart.TideChartWidgetCommand.Builder, TideChart.TideChartWidgetCommandOrBuilder>(
                  (TideChart.TideChartWidgetCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 6;
        onChanged();;
        return widgetBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartPortCommand, TideChart.TideChartPortCommand.Builder, TideChart.TideChartPortCommandOrBuilder> portBuilder_;
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      public boolean hasPort() {
        return commandCase_ == 7;
      }
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      public TideChart.TideChartPortCommand getPort() {
        if (portBuilder_ == null) {
          if (commandCase_ == 7) {
            return (TideChart.TideChartPortCommand) command_;
          }
          return TideChart.TideChartPortCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 7) {
            return portBuilder_.getMessage();
          }
          return TideChart.TideChartPortCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      public Builder setPort(TideChart.TideChartPortCommand value) {
        if (portBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          portBuilder_.setMessage(value);
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      public Builder setPort(
          TideChart.TideChartPortCommand.Builder builderForValue) {
        if (portBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          portBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      public Builder mergePort(TideChart.TideChartPortCommand value) {
        if (portBuilder_ == null) {
          if (commandCase_ == 7 &&
              command_ != TideChart.TideChartPortCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartPortCommand.newBuilder((TideChart.TideChartPortCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 7) {
            portBuilder_.mergeFrom(value);
          }
          portBuilder_.setMessage(value);
        }
        commandCase_ = 7;
        return this;
      }
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      public Builder clearPort() {
        if (portBuilder_ == null) {
          if (commandCase_ == 7) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 7) {
            commandCase_ = 0;
            command_ = null;
          }
          portBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      public TideChart.TideChartPortCommand.Builder getPortBuilder() {
        return getPortFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      public TideChart.TideChartPortCommandOrBuilder getPortOrBuilder() {
        if ((commandCase_ == 7) && (portBuilder_ != null)) {
          return portBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 7) {
            return (TideChart.TideChartPortCommand) command_;
          }
          return TideChart.TideChartPortCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartPortCommand port = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartPortCommand, TideChart.TideChartPortCommand.Builder, TideChart.TideChartPortCommandOrBuilder> 
          getPortFieldBuilder() {
        if (portBuilder_ == null) {
          if (!(commandCase_ == 7)) {
            command_ = TideChart.TideChartPortCommand.getDefaultInstance();
          }
          portBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartPortCommand, TideChart.TideChartPortCommand.Builder, TideChart.TideChartPortCommandOrBuilder>(
                  (TideChart.TideChartPortCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 7;
        onChanged();;
        return portBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartLinkCommand, TideChart.TideChartLinkCommand.Builder, TideChart.TideChartLinkCommandOrBuilder> linkBuilder_;
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      public boolean hasLink() {
        return commandCase_ == 8;
      }
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      public TideChart.TideChartLinkCommand getLink() {
        if (linkBuilder_ == null) {
          if (commandCase_ == 8) {
            return (TideChart.TideChartLinkCommand) command_;
          }
          return TideChart.TideChartLinkCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 8) {
            return linkBuilder_.getMessage();
          }
          return TideChart.TideChartLinkCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      public Builder setLink(TideChart.TideChartLinkCommand value) {
        if (linkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          linkBuilder_.setMessage(value);
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      public Builder setLink(
          TideChart.TideChartLinkCommand.Builder builderForValue) {
        if (linkBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          linkBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      public Builder mergeLink(TideChart.TideChartLinkCommand value) {
        if (linkBuilder_ == null) {
          if (commandCase_ == 8 &&
              command_ != TideChart.TideChartLinkCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartLinkCommand.newBuilder((TideChart.TideChartLinkCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 8) {
            linkBuilder_.mergeFrom(value);
          }
          linkBuilder_.setMessage(value);
        }
        commandCase_ = 8;
        return this;
      }
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      public Builder clearLink() {
        if (linkBuilder_ == null) {
          if (commandCase_ == 8) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 8) {
            commandCase_ = 0;
            command_ = null;
          }
          linkBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      public TideChart.TideChartLinkCommand.Builder getLinkBuilder() {
        return getLinkFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      public TideChart.TideChartLinkCommandOrBuilder getLinkOrBuilder() {
        if ((commandCase_ == 8) && (linkBuilder_ != null)) {
          return linkBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 8) {
            return (TideChart.TideChartLinkCommand) command_;
          }
          return TideChart.TideChartLinkCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartLinkCommand link = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartLinkCommand, TideChart.TideChartLinkCommand.Builder, TideChart.TideChartLinkCommandOrBuilder> 
          getLinkFieldBuilder() {
        if (linkBuilder_ == null) {
          if (!(commandCase_ == 8)) {
            command_ = TideChart.TideChartLinkCommand.getDefaultInstance();
          }
          linkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartLinkCommand, TideChart.TideChartLinkCommand.Builder, TideChart.TideChartLinkCommandOrBuilder>(
                  (TideChart.TideChartLinkCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 8;
        onChanged();;
        return linkBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartNodeCommand, TideChart.TideChartNodeCommand.Builder, TideChart.TideChartNodeCommandOrBuilder> nodeBuilder_;
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      public boolean hasNode() {
        return commandCase_ == 9;
      }
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      public TideChart.TideChartNodeCommand getNode() {
        if (nodeBuilder_ == null) {
          if (commandCase_ == 9) {
            return (TideChart.TideChartNodeCommand) command_;
          }
          return TideChart.TideChartNodeCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 9) {
            return nodeBuilder_.getMessage();
          }
          return TideChart.TideChartNodeCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      public Builder setNode(TideChart.TideChartNodeCommand value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          nodeBuilder_.setMessage(value);
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      public Builder setNode(
          TideChart.TideChartNodeCommand.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          nodeBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      public Builder mergeNode(TideChart.TideChartNodeCommand value) {
        if (nodeBuilder_ == null) {
          if (commandCase_ == 9 &&
              command_ != TideChart.TideChartNodeCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartNodeCommand.newBuilder((TideChart.TideChartNodeCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 9) {
            nodeBuilder_.mergeFrom(value);
          }
          nodeBuilder_.setMessage(value);
        }
        commandCase_ = 9;
        return this;
      }
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      public Builder clearNode() {
        if (nodeBuilder_ == null) {
          if (commandCase_ == 9) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 9) {
            commandCase_ = 0;
            command_ = null;
          }
          nodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      public TideChart.TideChartNodeCommand.Builder getNodeBuilder() {
        return getNodeFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      public TideChart.TideChartNodeCommandOrBuilder getNodeOrBuilder() {
        if ((commandCase_ == 9) && (nodeBuilder_ != null)) {
          return nodeBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 9) {
            return (TideChart.TideChartNodeCommand) command_;
          }
          return TideChart.TideChartNodeCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartNodeCommand node = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartNodeCommand, TideChart.TideChartNodeCommand.Builder, TideChart.TideChartNodeCommandOrBuilder> 
          getNodeFieldBuilder() {
        if (nodeBuilder_ == null) {
          if (!(commandCase_ == 9)) {
            command_ = TideChart.TideChartNodeCommand.getDefaultInstance();
          }
          nodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartNodeCommand, TideChart.TideChartNodeCommand.Builder, TideChart.TideChartNodeCommandOrBuilder>(
                  (TideChart.TideChartNodeCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 9;
        onChanged();;
        return nodeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartRegionCommand, TideChart.TideChartRegionCommand.Builder, TideChart.TideChartRegionCommandOrBuilder> regionBuilder_;
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      public boolean hasRegion() {
        return commandCase_ == 10;
      }
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      public TideChart.TideChartRegionCommand getRegion() {
        if (regionBuilder_ == null) {
          if (commandCase_ == 10) {
            return (TideChart.TideChartRegionCommand) command_;
          }
          return TideChart.TideChartRegionCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 10) {
            return regionBuilder_.getMessage();
          }
          return TideChart.TideChartRegionCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      public Builder setRegion(TideChart.TideChartRegionCommand value) {
        if (regionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          regionBuilder_.setMessage(value);
        }
        commandCase_ = 10;
        return this;
      }
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      public Builder setRegion(
          TideChart.TideChartRegionCommand.Builder builderForValue) {
        if (regionBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          regionBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 10;
        return this;
      }
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      public Builder mergeRegion(TideChart.TideChartRegionCommand value) {
        if (regionBuilder_ == null) {
          if (commandCase_ == 10 &&
              command_ != TideChart.TideChartRegionCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartRegionCommand.newBuilder((TideChart.TideChartRegionCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 10) {
            regionBuilder_.mergeFrom(value);
          }
          regionBuilder_.setMessage(value);
        }
        commandCase_ = 10;
        return this;
      }
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      public Builder clearRegion() {
        if (regionBuilder_ == null) {
          if (commandCase_ == 10) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 10) {
            commandCase_ = 0;
            command_ = null;
          }
          regionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      public TideChart.TideChartRegionCommand.Builder getRegionBuilder() {
        return getRegionFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      public TideChart.TideChartRegionCommandOrBuilder getRegionOrBuilder() {
        if ((commandCase_ == 10) && (regionBuilder_ != null)) {
          return regionBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 10) {
            return (TideChart.TideChartRegionCommand) command_;
          }
          return TideChart.TideChartRegionCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartRegionCommand region = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartRegionCommand, TideChart.TideChartRegionCommand.Builder, TideChart.TideChartRegionCommandOrBuilder> 
          getRegionFieldBuilder() {
        if (regionBuilder_ == null) {
          if (!(commandCase_ == 10)) {
            command_ = TideChart.TideChartRegionCommand.getDefaultInstance();
          }
          regionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartRegionCommand, TideChart.TideChartRegionCommand.Builder, TideChart.TideChartRegionCommandOrBuilder>(
                  (TideChart.TideChartRegionCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 10;
        onChanged();;
        return regionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartGraphCommand, TideChart.TideChartGraphCommand.Builder, TideChart.TideChartGraphCommandOrBuilder> graphBuilder_;
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      public boolean hasGraph() {
        return commandCase_ == 11;
      }
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      public TideChart.TideChartGraphCommand getGraph() {
        if (graphBuilder_ == null) {
          if (commandCase_ == 11) {
            return (TideChart.TideChartGraphCommand) command_;
          }
          return TideChart.TideChartGraphCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 11) {
            return graphBuilder_.getMessage();
          }
          return TideChart.TideChartGraphCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      public Builder setGraph(TideChart.TideChartGraphCommand value) {
        if (graphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          graphBuilder_.setMessage(value);
        }
        commandCase_ = 11;
        return this;
      }
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      public Builder setGraph(
          TideChart.TideChartGraphCommand.Builder builderForValue) {
        if (graphBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          graphBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 11;
        return this;
      }
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      public Builder mergeGraph(TideChart.TideChartGraphCommand value) {
        if (graphBuilder_ == null) {
          if (commandCase_ == 11 &&
              command_ != TideChart.TideChartGraphCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartGraphCommand.newBuilder((TideChart.TideChartGraphCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 11) {
            graphBuilder_.mergeFrom(value);
          }
          graphBuilder_.setMessage(value);
        }
        commandCase_ = 11;
        return this;
      }
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      public Builder clearGraph() {
        if (graphBuilder_ == null) {
          if (commandCase_ == 11) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 11) {
            commandCase_ = 0;
            command_ = null;
          }
          graphBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      public TideChart.TideChartGraphCommand.Builder getGraphBuilder() {
        return getGraphFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      public TideChart.TideChartGraphCommandOrBuilder getGraphOrBuilder() {
        if ((commandCase_ == 11) && (graphBuilder_ != null)) {
          return graphBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 11) {
            return (TideChart.TideChartGraphCommand) command_;
          }
          return TideChart.TideChartGraphCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartGraphCommand graph = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartGraphCommand, TideChart.TideChartGraphCommand.Builder, TideChart.TideChartGraphCommandOrBuilder> 
          getGraphFieldBuilder() {
        if (graphBuilder_ == null) {
          if (!(commandCase_ == 11)) {
            command_ = TideChart.TideChartGraphCommand.getDefaultInstance();
          }
          graphBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartGraphCommand, TideChart.TideChartGraphCommand.Builder, TideChart.TideChartGraphCommandOrBuilder>(
                  (TideChart.TideChartGraphCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 11;
        onChanged();;
        return graphBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartPropertyCommand, TideChart.TideChartPropertyCommand.Builder, TideChart.TideChartPropertyCommandOrBuilder> propsBuilder_;
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      public boolean hasProps() {
        return commandCase_ == 12;
      }
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      public TideChart.TideChartPropertyCommand getProps() {
        if (propsBuilder_ == null) {
          if (commandCase_ == 12) {
            return (TideChart.TideChartPropertyCommand) command_;
          }
          return TideChart.TideChartPropertyCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 12) {
            return propsBuilder_.getMessage();
          }
          return TideChart.TideChartPropertyCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      public Builder setProps(TideChart.TideChartPropertyCommand value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          propsBuilder_.setMessage(value);
        }
        commandCase_ = 12;
        return this;
      }
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      public Builder setProps(
          TideChart.TideChartPropertyCommand.Builder builderForValue) {
        if (propsBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          propsBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 12;
        return this;
      }
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      public Builder mergeProps(TideChart.TideChartPropertyCommand value) {
        if (propsBuilder_ == null) {
          if (commandCase_ == 12 &&
              command_ != TideChart.TideChartPropertyCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartPropertyCommand.newBuilder((TideChart.TideChartPropertyCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 12) {
            propsBuilder_.mergeFrom(value);
          }
          propsBuilder_.setMessage(value);
        }
        commandCase_ = 12;
        return this;
      }
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          if (commandCase_ == 12) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 12) {
            commandCase_ = 0;
            command_ = null;
          }
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      public TideChart.TideChartPropertyCommand.Builder getPropsBuilder() {
        return getPropsFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      public TideChart.TideChartPropertyCommandOrBuilder getPropsOrBuilder() {
        if ((commandCase_ == 12) && (propsBuilder_ != null)) {
          return propsBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 12) {
            return (TideChart.TideChartPropertyCommand) command_;
          }
          return TideChart.TideChartPropertyCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartPropertyCommand props = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartPropertyCommand, TideChart.TideChartPropertyCommand.Builder, TideChart.TideChartPropertyCommandOrBuilder> 
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          if (!(commandCase_ == 12)) {
            command_ = TideChart.TideChartPropertyCommand.getDefaultInstance();
          }
          propsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartPropertyCommand, TideChart.TideChartPropertyCommand.Builder, TideChart.TideChartPropertyCommandOrBuilder>(
                  (TideChart.TideChartPropertyCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 12;
        onChanged();;
        return propsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartNoteCommand, TideChart.TideChartNoteCommand.Builder, TideChart.TideChartNoteCommandOrBuilder> noteBuilder_;
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      public boolean hasNote() {
        return commandCase_ == 13;
      }
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      public TideChart.TideChartNoteCommand getNote() {
        if (noteBuilder_ == null) {
          if (commandCase_ == 13) {
            return (TideChart.TideChartNoteCommand) command_;
          }
          return TideChart.TideChartNoteCommand.getDefaultInstance();
        } else {
          if (commandCase_ == 13) {
            return noteBuilder_.getMessage();
          }
          return TideChart.TideChartNoteCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      public Builder setNote(TideChart.TideChartNoteCommand value) {
        if (noteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          noteBuilder_.setMessage(value);
        }
        commandCase_ = 13;
        return this;
      }
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      public Builder setNote(
          TideChart.TideChartNoteCommand.Builder builderForValue) {
        if (noteBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          noteBuilder_.setMessage(builderForValue.build());
        }
        commandCase_ = 13;
        return this;
      }
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      public Builder mergeNote(TideChart.TideChartNoteCommand value) {
        if (noteBuilder_ == null) {
          if (commandCase_ == 13 &&
              command_ != TideChart.TideChartNoteCommand.getDefaultInstance()) {
            command_ = TideChart.TideChartNoteCommand.newBuilder((TideChart.TideChartNoteCommand) command_)
                .mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          if (commandCase_ == 13) {
            noteBuilder_.mergeFrom(value);
          }
          noteBuilder_.setMessage(value);
        }
        commandCase_ = 13;
        return this;
      }
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      public Builder clearNote() {
        if (noteBuilder_ == null) {
          if (commandCase_ == 13) {
            commandCase_ = 0;
            command_ = null;
            onChanged();
          }
        } else {
          if (commandCase_ == 13) {
            commandCase_ = 0;
            command_ = null;
          }
          noteBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      public TideChart.TideChartNoteCommand.Builder getNoteBuilder() {
        return getNoteFieldBuilder().getBuilder();
      }
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      public TideChart.TideChartNoteCommandOrBuilder getNoteOrBuilder() {
        if ((commandCase_ == 13) && (noteBuilder_ != null)) {
          return noteBuilder_.getMessageOrBuilder();
        } else {
          if (commandCase_ == 13) {
            return (TideChart.TideChartNoteCommand) command_;
          }
          return TideChart.TideChartNoteCommand.getDefaultInstance();
        }
      }
      /**
       * <code>.TideChartNoteCommand note = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartNoteCommand, TideChart.TideChartNoteCommand.Builder, TideChart.TideChartNoteCommandOrBuilder> 
          getNoteFieldBuilder() {
        if (noteBuilder_ == null) {
          if (!(commandCase_ == 13)) {
            command_ = TideChart.TideChartNoteCommand.getDefaultInstance();
          }
          noteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartNoteCommand, TideChart.TideChartNoteCommand.Builder, TideChart.TideChartNoteCommandOrBuilder>(
                  (TideChart.TideChartNoteCommand) command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        commandCase_ = 13;
        onChanged();;
        return noteBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartCommand)
    private static final TideChart.TideChartCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartCommand();
    }

    public static TideChart.TideChartCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartCommand>() {
      @java.lang.Override
      public TideChartCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartGroupCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartGroupCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    java.util.List<TideChart.TideChartCommand> 
        getCmdsList();
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    TideChart.TideChartCommand getCmds(int index);
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    int getCmdsCount();
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
        getCmdsOrBuilderList();
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    TideChart.TideChartCommandOrBuilder getCmdsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TideChartGroupCommand}
   */
  public  static final class TideChartGroupCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartGroupCommand)
      TideChartGroupCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartGroupCommand.newBuilder() to construct.
    private TideChartGroupCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartGroupCommand() {
      cmds_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartGroupCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartGroupCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                cmds_ = new java.util.ArrayList<TideChart.TideChartCommand>();
                mutable_bitField0_ |= 0x00000001;
              }
              cmds_.add(
                  input.readMessage(TideChart.TideChartCommand.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          cmds_ = java.util.Collections.unmodifiableList(cmds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartGroupCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartGroupCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartGroupCommand.class, TideChart.TideChartGroupCommand.Builder.class);
    }

    public static final int CMDS_FIELD_NUMBER = 1;
    private java.util.List<TideChart.TideChartCommand> cmds_;
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    public java.util.List<TideChart.TideChartCommand> getCmdsList() {
      return cmds_;
    }
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    public java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
        getCmdsOrBuilderList() {
      return cmds_;
    }
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    public int getCmdsCount() {
      return cmds_.size();
    }
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    public TideChart.TideChartCommand getCmds(int index) {
      return cmds_.get(index);
    }
    /**
     * <pre>
     * a collection of updates that are applied atomically
     * </pre>
     *
     * <code>repeated .TideChartCommand cmds = 1;</code>
     */
    public TideChart.TideChartCommandOrBuilder getCmdsOrBuilder(
        int index) {
      return cmds_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cmds_.size(); i++) {
        output.writeMessage(1, cmds_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cmds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cmds_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartGroupCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartGroupCommand other = (TideChart.TideChartGroupCommand) obj;

      if (!getCmdsList()
          .equals(other.getCmdsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCmdsCount() > 0) {
        hash = (37 * hash) + CMDS_FIELD_NUMBER;
        hash = (53 * hash) + getCmdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartGroupCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGroupCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGroupCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGroupCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGroupCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGroupCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGroupCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGroupCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartGroupCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGroupCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartGroupCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGroupCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartGroupCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartGroupCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartGroupCommand)
        TideChart.TideChartGroupCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartGroupCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartGroupCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartGroupCommand.class, TideChart.TideChartGroupCommand.Builder.class);
      }

      // Construct using TideChart.TideChartGroupCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCmdsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (cmdsBuilder_ == null) {
          cmds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cmdsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartGroupCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartGroupCommand getDefaultInstanceForType() {
        return TideChart.TideChartGroupCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartGroupCommand build() {
        TideChart.TideChartGroupCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartGroupCommand buildPartial() {
        TideChart.TideChartGroupCommand result = new TideChart.TideChartGroupCommand(this);
        int from_bitField0_ = bitField0_;
        if (cmdsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            cmds_ = java.util.Collections.unmodifiableList(cmds_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cmds_ = cmds_;
        } else {
          result.cmds_ = cmdsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartGroupCommand) {
          return mergeFrom((TideChart.TideChartGroupCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartGroupCommand other) {
        if (other == TideChart.TideChartGroupCommand.getDefaultInstance()) return this;
        if (cmdsBuilder_ == null) {
          if (!other.cmds_.isEmpty()) {
            if (cmds_.isEmpty()) {
              cmds_ = other.cmds_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCmdsIsMutable();
              cmds_.addAll(other.cmds_);
            }
            onChanged();
          }
        } else {
          if (!other.cmds_.isEmpty()) {
            if (cmdsBuilder_.isEmpty()) {
              cmdsBuilder_.dispose();
              cmdsBuilder_ = null;
              cmds_ = other.cmds_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cmdsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCmdsFieldBuilder() : null;
            } else {
              cmdsBuilder_.addAllMessages(other.cmds_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartGroupCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartGroupCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<TideChart.TideChartCommand> cmds_ =
        java.util.Collections.emptyList();
      private void ensureCmdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cmds_ = new java.util.ArrayList<TideChart.TideChartCommand>(cmds_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder> cmdsBuilder_;

      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public java.util.List<TideChart.TideChartCommand> getCmdsList() {
        if (cmdsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cmds_);
        } else {
          return cmdsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public int getCmdsCount() {
        if (cmdsBuilder_ == null) {
          return cmds_.size();
        } else {
          return cmdsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public TideChart.TideChartCommand getCmds(int index) {
        if (cmdsBuilder_ == null) {
          return cmds_.get(index);
        } else {
          return cmdsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder setCmds(
          int index, TideChart.TideChartCommand value) {
        if (cmdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCmdsIsMutable();
          cmds_.set(index, value);
          onChanged();
        } else {
          cmdsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder setCmds(
          int index, TideChart.TideChartCommand.Builder builderForValue) {
        if (cmdsBuilder_ == null) {
          ensureCmdsIsMutable();
          cmds_.set(index, builderForValue.build());
          onChanged();
        } else {
          cmdsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder addCmds(TideChart.TideChartCommand value) {
        if (cmdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCmdsIsMutable();
          cmds_.add(value);
          onChanged();
        } else {
          cmdsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder addCmds(
          int index, TideChart.TideChartCommand value) {
        if (cmdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCmdsIsMutable();
          cmds_.add(index, value);
          onChanged();
        } else {
          cmdsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder addCmds(
          TideChart.TideChartCommand.Builder builderForValue) {
        if (cmdsBuilder_ == null) {
          ensureCmdsIsMutable();
          cmds_.add(builderForValue.build());
          onChanged();
        } else {
          cmdsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder addCmds(
          int index, TideChart.TideChartCommand.Builder builderForValue) {
        if (cmdsBuilder_ == null) {
          ensureCmdsIsMutable();
          cmds_.add(index, builderForValue.build());
          onChanged();
        } else {
          cmdsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder addAllCmds(
          java.lang.Iterable<? extends TideChart.TideChartCommand> values) {
        if (cmdsBuilder_ == null) {
          ensureCmdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cmds_);
          onChanged();
        } else {
          cmdsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder clearCmds() {
        if (cmdsBuilder_ == null) {
          cmds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cmdsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public Builder removeCmds(int index) {
        if (cmdsBuilder_ == null) {
          ensureCmdsIsMutable();
          cmds_.remove(index);
          onChanged();
        } else {
          cmdsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public TideChart.TideChartCommand.Builder getCmdsBuilder(
          int index) {
        return getCmdsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public TideChart.TideChartCommandOrBuilder getCmdsOrBuilder(
          int index) {
        if (cmdsBuilder_ == null) {
          return cmds_.get(index);  } else {
          return cmdsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
           getCmdsOrBuilderList() {
        if (cmdsBuilder_ != null) {
          return cmdsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cmds_);
        }
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public TideChart.TideChartCommand.Builder addCmdsBuilder() {
        return getCmdsFieldBuilder().addBuilder(
            TideChart.TideChartCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public TideChart.TideChartCommand.Builder addCmdsBuilder(
          int index) {
        return getCmdsFieldBuilder().addBuilder(
            index, TideChart.TideChartCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * a collection of updates that are applied atomically
       * </pre>
       *
       * <code>repeated .TideChartCommand cmds = 1;</code>
       */
      public java.util.List<TideChart.TideChartCommand.Builder> 
           getCmdsBuilderList() {
        return getCmdsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder> 
          getCmdsFieldBuilder() {
        if (cmdsBuilder_ == null) {
          cmdsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder>(
                  cmds_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          cmds_ = null;
        }
        return cmdsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartGroupCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartGroupCommand)
    private static final TideChart.TideChartGroupCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartGroupCommand();
    }

    public static TideChart.TideChartGroupCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartGroupCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartGroupCommand>() {
      @java.lang.Override
      public TideChartGroupCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartGroupCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartGroupCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartGroupCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartGroupCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartMoveCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartMoveCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * name of node being moved
     * </pre>
     *
     * <code>string node = 1;</code>
     */
    java.lang.String getNode();
    /**
     * <pre>
     * name of node being moved
     * </pre>
     *
     * <code>string node = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeBytes();

    /**
     * <pre>
     * previous X position on the chart
     * </pre>
     *
     * <code>sint32 fromPosX = 2;</code>
     */
    int getFromPosX();

    /**
     * <pre>
     * previous Y position on the chart
     * </pre>
     *
     * <code>sint32 fromPosY = 3;</code>
     */
    int getFromPosY();

    /**
     * <pre>
     * next X position on the chart
     * </pre>
     *
     * <code>sint32 toPosX = 4;</code>
     */
    int getToPosX();

    /**
     * <pre>
     * next Y position on the chart
     * </pre>
     *
     * <code>sint32 toPosY = 5;</code>
     */
    int getToPosY();
  }
  /**
   * Protobuf type {@code TideChartMoveCommand}
   */
  public  static final class TideChartMoveCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartMoveCommand)
      TideChartMoveCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartMoveCommand.newBuilder() to construct.
    private TideChartMoveCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartMoveCommand() {
      node_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartMoveCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartMoveCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              node_ = s;
              break;
            }
            case 16: {

              fromPosX_ = input.readSInt32();
              break;
            }
            case 24: {

              fromPosY_ = input.readSInt32();
              break;
            }
            case 32: {

              toPosX_ = input.readSInt32();
              break;
            }
            case 40: {

              toPosY_ = input.readSInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartMoveCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartMoveCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartMoveCommand.class, TideChart.TideChartMoveCommand.Builder.class);
    }

    public static final int NODE_FIELD_NUMBER = 1;
    private volatile java.lang.Object node_;
    /**
     * <pre>
     * name of node being moved
     * </pre>
     *
     * <code>string node = 1;</code>
     */
    public java.lang.String getNode() {
      java.lang.Object ref = node_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        node_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name of node being moved
     * </pre>
     *
     * <code>string node = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeBytes() {
      java.lang.Object ref = node_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        node_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FROMPOSX_FIELD_NUMBER = 2;
    private int fromPosX_;
    /**
     * <pre>
     * previous X position on the chart
     * </pre>
     *
     * <code>sint32 fromPosX = 2;</code>
     */
    public int getFromPosX() {
      return fromPosX_;
    }

    public static final int FROMPOSY_FIELD_NUMBER = 3;
    private int fromPosY_;
    /**
     * <pre>
     * previous Y position on the chart
     * </pre>
     *
     * <code>sint32 fromPosY = 3;</code>
     */
    public int getFromPosY() {
      return fromPosY_;
    }

    public static final int TOPOSX_FIELD_NUMBER = 4;
    private int toPosX_;
    /**
     * <pre>
     * next X position on the chart
     * </pre>
     *
     * <code>sint32 toPosX = 4;</code>
     */
    public int getToPosX() {
      return toPosX_;
    }

    public static final int TOPOSY_FIELD_NUMBER = 5;
    private int toPosY_;
    /**
     * <pre>
     * next Y position on the chart
     * </pre>
     *
     * <code>sint32 toPosY = 5;</code>
     */
    public int getToPosY() {
      return toPosY_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, node_);
      }
      if (fromPosX_ != 0) {
        output.writeSInt32(2, fromPosX_);
      }
      if (fromPosY_ != 0) {
        output.writeSInt32(3, fromPosY_);
      }
      if (toPosX_ != 0) {
        output.writeSInt32(4, toPosX_);
      }
      if (toPosY_ != 0) {
        output.writeSInt32(5, toPosY_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, node_);
      }
      if (fromPosX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, fromPosX_);
      }
      if (fromPosY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, fromPosY_);
      }
      if (toPosX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, toPosX_);
      }
      if (toPosY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, toPosY_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartMoveCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartMoveCommand other = (TideChart.TideChartMoveCommand) obj;

      if (!getNode()
          .equals(other.getNode())) return false;
      if (getFromPosX()
          != other.getFromPosX()) return false;
      if (getFromPosY()
          != other.getFromPosY()) return false;
      if (getToPosX()
          != other.getToPosX()) return false;
      if (getToPosY()
          != other.getToPosY()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_FIELD_NUMBER;
      hash = (53 * hash) + getNode().hashCode();
      hash = (37 * hash) + FROMPOSX_FIELD_NUMBER;
      hash = (53 * hash) + getFromPosX();
      hash = (37 * hash) + FROMPOSY_FIELD_NUMBER;
      hash = (53 * hash) + getFromPosY();
      hash = (37 * hash) + TOPOSX_FIELD_NUMBER;
      hash = (53 * hash) + getToPosX();
      hash = (37 * hash) + TOPOSY_FIELD_NUMBER;
      hash = (53 * hash) + getToPosY();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartMoveCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMoveCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMoveCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMoveCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMoveCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMoveCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMoveCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMoveCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartMoveCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMoveCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartMoveCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMoveCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartMoveCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartMoveCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartMoveCommand)
        TideChart.TideChartMoveCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartMoveCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartMoveCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartMoveCommand.class, TideChart.TideChartMoveCommand.Builder.class);
      }

      // Construct using TideChart.TideChartMoveCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        node_ = "";

        fromPosX_ = 0;

        fromPosY_ = 0;

        toPosX_ = 0;

        toPosY_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartMoveCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartMoveCommand getDefaultInstanceForType() {
        return TideChart.TideChartMoveCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartMoveCommand build() {
        TideChart.TideChartMoveCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartMoveCommand buildPartial() {
        TideChart.TideChartMoveCommand result = new TideChart.TideChartMoveCommand(this);
        result.node_ = node_;
        result.fromPosX_ = fromPosX_;
        result.fromPosY_ = fromPosY_;
        result.toPosX_ = toPosX_;
        result.toPosY_ = toPosY_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartMoveCommand) {
          return mergeFrom((TideChart.TideChartMoveCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartMoveCommand other) {
        if (other == TideChart.TideChartMoveCommand.getDefaultInstance()) return this;
        if (!other.getNode().isEmpty()) {
          node_ = other.node_;
          onChanged();
        }
        if (other.getFromPosX() != 0) {
          setFromPosX(other.getFromPosX());
        }
        if (other.getFromPosY() != 0) {
          setFromPosY(other.getFromPosY());
        }
        if (other.getToPosX() != 0) {
          setToPosX(other.getToPosX());
        }
        if (other.getToPosY() != 0) {
          setToPosY(other.getToPosY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartMoveCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartMoveCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object node_ = "";
      /**
       * <pre>
       * name of node being moved
       * </pre>
       *
       * <code>string node = 1;</code>
       */
      public java.lang.String getNode() {
        java.lang.Object ref = node_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          node_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of node being moved
       * </pre>
       *
       * <code>string node = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeBytes() {
        java.lang.Object ref = node_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          node_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of node being moved
       * </pre>
       *
       * <code>string node = 1;</code>
       */
      public Builder setNode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        node_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of node being moved
       * </pre>
       *
       * <code>string node = 1;</code>
       */
      public Builder clearNode() {
        
        node_ = getDefaultInstance().getNode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of node being moved
       * </pre>
       *
       * <code>string node = 1;</code>
       */
      public Builder setNodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        node_ = value;
        onChanged();
        return this;
      }

      private int fromPosX_ ;
      /**
       * <pre>
       * previous X position on the chart
       * </pre>
       *
       * <code>sint32 fromPosX = 2;</code>
       */
      public int getFromPosX() {
        return fromPosX_;
      }
      /**
       * <pre>
       * previous X position on the chart
       * </pre>
       *
       * <code>sint32 fromPosX = 2;</code>
       */
      public Builder setFromPosX(int value) {
        
        fromPosX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous X position on the chart
       * </pre>
       *
       * <code>sint32 fromPosX = 2;</code>
       */
      public Builder clearFromPosX() {
        
        fromPosX_ = 0;
        onChanged();
        return this;
      }

      private int fromPosY_ ;
      /**
       * <pre>
       * previous Y position on the chart
       * </pre>
       *
       * <code>sint32 fromPosY = 3;</code>
       */
      public int getFromPosY() {
        return fromPosY_;
      }
      /**
       * <pre>
       * previous Y position on the chart
       * </pre>
       *
       * <code>sint32 fromPosY = 3;</code>
       */
      public Builder setFromPosY(int value) {
        
        fromPosY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous Y position on the chart
       * </pre>
       *
       * <code>sint32 fromPosY = 3;</code>
       */
      public Builder clearFromPosY() {
        
        fromPosY_ = 0;
        onChanged();
        return this;
      }

      private int toPosX_ ;
      /**
       * <pre>
       * next X position on the chart
       * </pre>
       *
       * <code>sint32 toPosX = 4;</code>
       */
      public int getToPosX() {
        return toPosX_;
      }
      /**
       * <pre>
       * next X position on the chart
       * </pre>
       *
       * <code>sint32 toPosX = 4;</code>
       */
      public Builder setToPosX(int value) {
        
        toPosX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * next X position on the chart
       * </pre>
       *
       * <code>sint32 toPosX = 4;</code>
       */
      public Builder clearToPosX() {
        
        toPosX_ = 0;
        onChanged();
        return this;
      }

      private int toPosY_ ;
      /**
       * <pre>
       * next Y position on the chart
       * </pre>
       *
       * <code>sint32 toPosY = 5;</code>
       */
      public int getToPosY() {
        return toPosY_;
      }
      /**
       * <pre>
       * next Y position on the chart
       * </pre>
       *
       * <code>sint32 toPosY = 5;</code>
       */
      public Builder setToPosY(int value) {
        
        toPosY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * next Y position on the chart
       * </pre>
       *
       * <code>sint32 toPosY = 5;</code>
       */
      public Builder clearToPosY() {
        
        toPosY_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartMoveCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartMoveCommand)
    private static final TideChart.TideChartMoveCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartMoveCommand();
    }

    public static TideChart.TideChartMoveCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartMoveCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartMoveCommand>() {
      @java.lang.Override
      public TideChartMoveCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartMoveCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartMoveCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartMoveCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartMoveCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartCommentBoxCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartCommentBoxCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * previous version of the comment         
     * </pre>
     *
     * <code>.TideChartCommentBox fromComment = 1;</code>
     */
    boolean hasFromComment();
    /**
     * <pre>
     * previous version of the comment         
     * </pre>
     *
     * <code>.TideChartCommentBox fromComment = 1;</code>
     */
    TideChart.TideChartCommentBox getFromComment();
    /**
     * <pre>
     * previous version of the comment         
     * </pre>
     *
     * <code>.TideChartCommentBox fromComment = 1;</code>
     */
    TideChart.TideChartCommentBoxOrBuilder getFromCommentOrBuilder();

    /**
     * <pre>
     * new version of the comment
     * </pre>
     *
     * <code>.TideChartCommentBox toComment = 2;</code>
     */
    boolean hasToComment();
    /**
     * <pre>
     * new version of the comment
     * </pre>
     *
     * <code>.TideChartCommentBox toComment = 2;</code>
     */
    TideChart.TideChartCommentBox getToComment();
    /**
     * <pre>
     * new version of the comment
     * </pre>
     *
     * <code>.TideChartCommentBox toComment = 2;</code>
     */
    TideChart.TideChartCommentBoxOrBuilder getToCommentOrBuilder();

    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code TideChartCommentBoxCommand}
   */
  public  static final class TideChartCommentBoxCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartCommentBoxCommand)
      TideChartCommentBoxCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartCommentBoxCommand.newBuilder() to construct.
    private TideChartCommentBoxCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartCommentBoxCommand() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartCommentBoxCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartCommentBoxCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              TideChart.TideChartCommentBox.Builder subBuilder = null;
              if (fromComment_ != null) {
                subBuilder = fromComment_.toBuilder();
              }
              fromComment_ = input.readMessage(TideChart.TideChartCommentBox.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromComment_);
                fromComment_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              TideChart.TideChartCommentBox.Builder subBuilder = null;
              if (toComment_ != null) {
                subBuilder = toComment_.toBuilder();
              }
              toComment_ = input.readMessage(TideChart.TideChartCommentBox.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toComment_);
                toComment_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartCommentBoxCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartCommentBoxCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartCommentBoxCommand.class, TideChart.TideChartCommentBoxCommand.Builder.class);
    }

    public static final int FROMCOMMENT_FIELD_NUMBER = 1;
    private TideChart.TideChartCommentBox fromComment_;
    /**
     * <pre>
     * previous version of the comment         
     * </pre>
     *
     * <code>.TideChartCommentBox fromComment = 1;</code>
     */
    public boolean hasFromComment() {
      return fromComment_ != null;
    }
    /**
     * <pre>
     * previous version of the comment         
     * </pre>
     *
     * <code>.TideChartCommentBox fromComment = 1;</code>
     */
    public TideChart.TideChartCommentBox getFromComment() {
      return fromComment_ == null ? TideChart.TideChartCommentBox.getDefaultInstance() : fromComment_;
    }
    /**
     * <pre>
     * previous version of the comment         
     * </pre>
     *
     * <code>.TideChartCommentBox fromComment = 1;</code>
     */
    public TideChart.TideChartCommentBoxOrBuilder getFromCommentOrBuilder() {
      return getFromComment();
    }

    public static final int TOCOMMENT_FIELD_NUMBER = 2;
    private TideChart.TideChartCommentBox toComment_;
    /**
     * <pre>
     * new version of the comment
     * </pre>
     *
     * <code>.TideChartCommentBox toComment = 2;</code>
     */
    public boolean hasToComment() {
      return toComment_ != null;
    }
    /**
     * <pre>
     * new version of the comment
     * </pre>
     *
     * <code>.TideChartCommentBox toComment = 2;</code>
     */
    public TideChart.TideChartCommentBox getToComment() {
      return toComment_ == null ? TideChart.TideChartCommentBox.getDefaultInstance() : toComment_;
    }
    /**
     * <pre>
     * new version of the comment
     * </pre>
     *
     * <code>.TideChartCommentBox toComment = 2;</code>
     */
    public TideChart.TideChartCommentBoxOrBuilder getToCommentOrBuilder() {
      return getToComment();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromComment_ != null) {
        output.writeMessage(1, getFromComment());
      }
      if (toComment_ != null) {
        output.writeMessage(2, getToComment());
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromComment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromComment());
      }
      if (toComment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToComment());
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartCommentBoxCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartCommentBoxCommand other = (TideChart.TideChartCommentBoxCommand) obj;

      if (hasFromComment() != other.hasFromComment()) return false;
      if (hasFromComment()) {
        if (!getFromComment()
            .equals(other.getFromComment())) return false;
      }
      if (hasToComment() != other.hasToComment()) return false;
      if (hasToComment()) {
        if (!getToComment()
            .equals(other.getToComment())) return false;
      }
      if (!getType()
          .equals(other.getType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFromComment()) {
        hash = (37 * hash) + FROMCOMMENT_FIELD_NUMBER;
        hash = (53 * hash) + getFromComment().hashCode();
      }
      if (hasToComment()) {
        hash = (37 * hash) + TOCOMMENT_FIELD_NUMBER;
        hash = (53 * hash) + getToComment().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartCommentBoxCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartCommentBoxCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommentBoxCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartCommentBoxCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartCommentBoxCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartCommentBoxCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartCommentBoxCommand)
        TideChart.TideChartCommentBoxCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartCommentBoxCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartCommentBoxCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartCommentBoxCommand.class, TideChart.TideChartCommentBoxCommand.Builder.class);
      }

      // Construct using TideChart.TideChartCommentBoxCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromCommentBuilder_ == null) {
          fromComment_ = null;
        } else {
          fromComment_ = null;
          fromCommentBuilder_ = null;
        }
        if (toCommentBuilder_ == null) {
          toComment_ = null;
        } else {
          toComment_ = null;
          toCommentBuilder_ = null;
        }
        type_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartCommentBoxCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartCommentBoxCommand getDefaultInstanceForType() {
        return TideChart.TideChartCommentBoxCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartCommentBoxCommand build() {
        TideChart.TideChartCommentBoxCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartCommentBoxCommand buildPartial() {
        TideChart.TideChartCommentBoxCommand result = new TideChart.TideChartCommentBoxCommand(this);
        if (fromCommentBuilder_ == null) {
          result.fromComment_ = fromComment_;
        } else {
          result.fromComment_ = fromCommentBuilder_.build();
        }
        if (toCommentBuilder_ == null) {
          result.toComment_ = toComment_;
        } else {
          result.toComment_ = toCommentBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartCommentBoxCommand) {
          return mergeFrom((TideChart.TideChartCommentBoxCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartCommentBoxCommand other) {
        if (other == TideChart.TideChartCommentBoxCommand.getDefaultInstance()) return this;
        if (other.hasFromComment()) {
          mergeFromComment(other.getFromComment());
        }
        if (other.hasToComment()) {
          mergeToComment(other.getToComment());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartCommentBoxCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartCommentBoxCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private TideChart.TideChartCommentBox fromComment_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder> fromCommentBuilder_;
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      public boolean hasFromComment() {
        return fromCommentBuilder_ != null || fromComment_ != null;
      }
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      public TideChart.TideChartCommentBox getFromComment() {
        if (fromCommentBuilder_ == null) {
          return fromComment_ == null ? TideChart.TideChartCommentBox.getDefaultInstance() : fromComment_;
        } else {
          return fromCommentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      public Builder setFromComment(TideChart.TideChartCommentBox value) {
        if (fromCommentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromComment_ = value;
          onChanged();
        } else {
          fromCommentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      public Builder setFromComment(
          TideChart.TideChartCommentBox.Builder builderForValue) {
        if (fromCommentBuilder_ == null) {
          fromComment_ = builderForValue.build();
          onChanged();
        } else {
          fromCommentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      public Builder mergeFromComment(TideChart.TideChartCommentBox value) {
        if (fromCommentBuilder_ == null) {
          if (fromComment_ != null) {
            fromComment_ =
              TideChart.TideChartCommentBox.newBuilder(fromComment_).mergeFrom(value).buildPartial();
          } else {
            fromComment_ = value;
          }
          onChanged();
        } else {
          fromCommentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      public Builder clearFromComment() {
        if (fromCommentBuilder_ == null) {
          fromComment_ = null;
          onChanged();
        } else {
          fromComment_ = null;
          fromCommentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      public TideChart.TideChartCommentBox.Builder getFromCommentBuilder() {
        
        onChanged();
        return getFromCommentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      public TideChart.TideChartCommentBoxOrBuilder getFromCommentOrBuilder() {
        if (fromCommentBuilder_ != null) {
          return fromCommentBuilder_.getMessageOrBuilder();
        } else {
          return fromComment_ == null ?
              TideChart.TideChartCommentBox.getDefaultInstance() : fromComment_;
        }
      }
      /**
       * <pre>
       * previous version of the comment         
       * </pre>
       *
       * <code>.TideChartCommentBox fromComment = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder> 
          getFromCommentFieldBuilder() {
        if (fromCommentBuilder_ == null) {
          fromCommentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder>(
                  getFromComment(),
                  getParentForChildren(),
                  isClean());
          fromComment_ = null;
        }
        return fromCommentBuilder_;
      }

      private TideChart.TideChartCommentBox toComment_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder> toCommentBuilder_;
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      public boolean hasToComment() {
        return toCommentBuilder_ != null || toComment_ != null;
      }
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      public TideChart.TideChartCommentBox getToComment() {
        if (toCommentBuilder_ == null) {
          return toComment_ == null ? TideChart.TideChartCommentBox.getDefaultInstance() : toComment_;
        } else {
          return toCommentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      public Builder setToComment(TideChart.TideChartCommentBox value) {
        if (toCommentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toComment_ = value;
          onChanged();
        } else {
          toCommentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      public Builder setToComment(
          TideChart.TideChartCommentBox.Builder builderForValue) {
        if (toCommentBuilder_ == null) {
          toComment_ = builderForValue.build();
          onChanged();
        } else {
          toCommentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      public Builder mergeToComment(TideChart.TideChartCommentBox value) {
        if (toCommentBuilder_ == null) {
          if (toComment_ != null) {
            toComment_ =
              TideChart.TideChartCommentBox.newBuilder(toComment_).mergeFrom(value).buildPartial();
          } else {
            toComment_ = value;
          }
          onChanged();
        } else {
          toCommentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      public Builder clearToComment() {
        if (toCommentBuilder_ == null) {
          toComment_ = null;
          onChanged();
        } else {
          toComment_ = null;
          toCommentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      public TideChart.TideChartCommentBox.Builder getToCommentBuilder() {
        
        onChanged();
        return getToCommentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      public TideChart.TideChartCommentBoxOrBuilder getToCommentOrBuilder() {
        if (toCommentBuilder_ != null) {
          return toCommentBuilder_.getMessageOrBuilder();
        } else {
          return toComment_ == null ?
              TideChart.TideChartCommentBox.getDefaultInstance() : toComment_;
        }
      }
      /**
       * <pre>
       * new version of the comment
       * </pre>
       *
       * <code>.TideChartCommentBox toComment = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder> 
          getToCommentFieldBuilder() {
        if (toCommentBuilder_ == null) {
          toCommentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartCommentBox, TideChart.TideChartCommentBox.Builder, TideChart.TideChartCommentBoxOrBuilder>(
                  getToComment(),
                  getParentForChildren(),
                  isClean());
          toComment_ = null;
        }
        return toCommentBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartCommentBoxCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartCommentBoxCommand)
    private static final TideChart.TideChartCommentBoxCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartCommentBoxCommand();
    }

    public static TideChart.TideChartCommentBoxCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartCommentBoxCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartCommentBoxCommand>() {
      @java.lang.Override
      public TideChartCommentBoxCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartCommentBoxCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartCommentBoxCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartCommentBoxCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartCommentBoxCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartWidgetCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartWidgetCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * previous version of the widget    
     * </pre>
     *
     * <code>.TideChartWidget fromWidget = 1;</code>
     */
    boolean hasFromWidget();
    /**
     * <pre>
     * previous version of the widget    
     * </pre>
     *
     * <code>.TideChartWidget fromWidget = 1;</code>
     */
    TideChart.TideChartWidget getFromWidget();
    /**
     * <pre>
     * previous version of the widget    
     * </pre>
     *
     * <code>.TideChartWidget fromWidget = 1;</code>
     */
    TideChart.TideChartWidgetOrBuilder getFromWidgetOrBuilder();

    /**
     * <pre>
     * new version of the widget
     * </pre>
     *
     * <code>.TideChartWidget toWidget = 2;</code>
     */
    boolean hasToWidget();
    /**
     * <pre>
     * new version of the widget
     * </pre>
     *
     * <code>.TideChartWidget toWidget = 2;</code>
     */
    TideChart.TideChartWidget getToWidget();
    /**
     * <pre>
     * new version of the widget
     * </pre>
     *
     * <code>.TideChartWidget toWidget = 2;</code>
     */
    TideChart.TideChartWidgetOrBuilder getToWidgetOrBuilder();

    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code TideChartWidgetCommand}
   */
  public  static final class TideChartWidgetCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartWidgetCommand)
      TideChartWidgetCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartWidgetCommand.newBuilder() to construct.
    private TideChartWidgetCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartWidgetCommand() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartWidgetCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartWidgetCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              TideChart.TideChartWidget.Builder subBuilder = null;
              if (fromWidget_ != null) {
                subBuilder = fromWidget_.toBuilder();
              }
              fromWidget_ = input.readMessage(TideChart.TideChartWidget.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromWidget_);
                fromWidget_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              TideChart.TideChartWidget.Builder subBuilder = null;
              if (toWidget_ != null) {
                subBuilder = toWidget_.toBuilder();
              }
              toWidget_ = input.readMessage(TideChart.TideChartWidget.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toWidget_);
                toWidget_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartWidgetCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartWidgetCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartWidgetCommand.class, TideChart.TideChartWidgetCommand.Builder.class);
    }

    public static final int FROMWIDGET_FIELD_NUMBER = 1;
    private TideChart.TideChartWidget fromWidget_;
    /**
     * <pre>
     * previous version of the widget    
     * </pre>
     *
     * <code>.TideChartWidget fromWidget = 1;</code>
     */
    public boolean hasFromWidget() {
      return fromWidget_ != null;
    }
    /**
     * <pre>
     * previous version of the widget    
     * </pre>
     *
     * <code>.TideChartWidget fromWidget = 1;</code>
     */
    public TideChart.TideChartWidget getFromWidget() {
      return fromWidget_ == null ? TideChart.TideChartWidget.getDefaultInstance() : fromWidget_;
    }
    /**
     * <pre>
     * previous version of the widget    
     * </pre>
     *
     * <code>.TideChartWidget fromWidget = 1;</code>
     */
    public TideChart.TideChartWidgetOrBuilder getFromWidgetOrBuilder() {
      return getFromWidget();
    }

    public static final int TOWIDGET_FIELD_NUMBER = 2;
    private TideChart.TideChartWidget toWidget_;
    /**
     * <pre>
     * new version of the widget
     * </pre>
     *
     * <code>.TideChartWidget toWidget = 2;</code>
     */
    public boolean hasToWidget() {
      return toWidget_ != null;
    }
    /**
     * <pre>
     * new version of the widget
     * </pre>
     *
     * <code>.TideChartWidget toWidget = 2;</code>
     */
    public TideChart.TideChartWidget getToWidget() {
      return toWidget_ == null ? TideChart.TideChartWidget.getDefaultInstance() : toWidget_;
    }
    /**
     * <pre>
     * new version of the widget
     * </pre>
     *
     * <code>.TideChartWidget toWidget = 2;</code>
     */
    public TideChart.TideChartWidgetOrBuilder getToWidgetOrBuilder() {
      return getToWidget();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromWidget_ != null) {
        output.writeMessage(1, getFromWidget());
      }
      if (toWidget_ != null) {
        output.writeMessage(2, getToWidget());
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromWidget_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromWidget());
      }
      if (toWidget_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToWidget());
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartWidgetCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartWidgetCommand other = (TideChart.TideChartWidgetCommand) obj;

      if (hasFromWidget() != other.hasFromWidget()) return false;
      if (hasFromWidget()) {
        if (!getFromWidget()
            .equals(other.getFromWidget())) return false;
      }
      if (hasToWidget() != other.hasToWidget()) return false;
      if (hasToWidget()) {
        if (!getToWidget()
            .equals(other.getToWidget())) return false;
      }
      if (!getType()
          .equals(other.getType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFromWidget()) {
        hash = (37 * hash) + FROMWIDGET_FIELD_NUMBER;
        hash = (53 * hash) + getFromWidget().hashCode();
      }
      if (hasToWidget()) {
        hash = (37 * hash) + TOWIDGET_FIELD_NUMBER;
        hash = (53 * hash) + getToWidget().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartWidgetCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartWidgetCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartWidgetCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartWidgetCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartWidgetCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartWidgetCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartWidgetCommand)
        TideChart.TideChartWidgetCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartWidgetCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartWidgetCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartWidgetCommand.class, TideChart.TideChartWidgetCommand.Builder.class);
      }

      // Construct using TideChart.TideChartWidgetCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromWidgetBuilder_ == null) {
          fromWidget_ = null;
        } else {
          fromWidget_ = null;
          fromWidgetBuilder_ = null;
        }
        if (toWidgetBuilder_ == null) {
          toWidget_ = null;
        } else {
          toWidget_ = null;
          toWidgetBuilder_ = null;
        }
        type_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartWidgetCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartWidgetCommand getDefaultInstanceForType() {
        return TideChart.TideChartWidgetCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartWidgetCommand build() {
        TideChart.TideChartWidgetCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartWidgetCommand buildPartial() {
        TideChart.TideChartWidgetCommand result = new TideChart.TideChartWidgetCommand(this);
        if (fromWidgetBuilder_ == null) {
          result.fromWidget_ = fromWidget_;
        } else {
          result.fromWidget_ = fromWidgetBuilder_.build();
        }
        if (toWidgetBuilder_ == null) {
          result.toWidget_ = toWidget_;
        } else {
          result.toWidget_ = toWidgetBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartWidgetCommand) {
          return mergeFrom((TideChart.TideChartWidgetCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartWidgetCommand other) {
        if (other == TideChart.TideChartWidgetCommand.getDefaultInstance()) return this;
        if (other.hasFromWidget()) {
          mergeFromWidget(other.getFromWidget());
        }
        if (other.hasToWidget()) {
          mergeToWidget(other.getToWidget());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartWidgetCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartWidgetCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private TideChart.TideChartWidget fromWidget_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder> fromWidgetBuilder_;
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      public boolean hasFromWidget() {
        return fromWidgetBuilder_ != null || fromWidget_ != null;
      }
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      public TideChart.TideChartWidget getFromWidget() {
        if (fromWidgetBuilder_ == null) {
          return fromWidget_ == null ? TideChart.TideChartWidget.getDefaultInstance() : fromWidget_;
        } else {
          return fromWidgetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      public Builder setFromWidget(TideChart.TideChartWidget value) {
        if (fromWidgetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromWidget_ = value;
          onChanged();
        } else {
          fromWidgetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      public Builder setFromWidget(
          TideChart.TideChartWidget.Builder builderForValue) {
        if (fromWidgetBuilder_ == null) {
          fromWidget_ = builderForValue.build();
          onChanged();
        } else {
          fromWidgetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      public Builder mergeFromWidget(TideChart.TideChartWidget value) {
        if (fromWidgetBuilder_ == null) {
          if (fromWidget_ != null) {
            fromWidget_ =
              TideChart.TideChartWidget.newBuilder(fromWidget_).mergeFrom(value).buildPartial();
          } else {
            fromWidget_ = value;
          }
          onChanged();
        } else {
          fromWidgetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      public Builder clearFromWidget() {
        if (fromWidgetBuilder_ == null) {
          fromWidget_ = null;
          onChanged();
        } else {
          fromWidget_ = null;
          fromWidgetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      public TideChart.TideChartWidget.Builder getFromWidgetBuilder() {
        
        onChanged();
        return getFromWidgetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      public TideChart.TideChartWidgetOrBuilder getFromWidgetOrBuilder() {
        if (fromWidgetBuilder_ != null) {
          return fromWidgetBuilder_.getMessageOrBuilder();
        } else {
          return fromWidget_ == null ?
              TideChart.TideChartWidget.getDefaultInstance() : fromWidget_;
        }
      }
      /**
       * <pre>
       * previous version of the widget    
       * </pre>
       *
       * <code>.TideChartWidget fromWidget = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder> 
          getFromWidgetFieldBuilder() {
        if (fromWidgetBuilder_ == null) {
          fromWidgetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder>(
                  getFromWidget(),
                  getParentForChildren(),
                  isClean());
          fromWidget_ = null;
        }
        return fromWidgetBuilder_;
      }

      private TideChart.TideChartWidget toWidget_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder> toWidgetBuilder_;
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      public boolean hasToWidget() {
        return toWidgetBuilder_ != null || toWidget_ != null;
      }
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      public TideChart.TideChartWidget getToWidget() {
        if (toWidgetBuilder_ == null) {
          return toWidget_ == null ? TideChart.TideChartWidget.getDefaultInstance() : toWidget_;
        } else {
          return toWidgetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      public Builder setToWidget(TideChart.TideChartWidget value) {
        if (toWidgetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toWidget_ = value;
          onChanged();
        } else {
          toWidgetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      public Builder setToWidget(
          TideChart.TideChartWidget.Builder builderForValue) {
        if (toWidgetBuilder_ == null) {
          toWidget_ = builderForValue.build();
          onChanged();
        } else {
          toWidgetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      public Builder mergeToWidget(TideChart.TideChartWidget value) {
        if (toWidgetBuilder_ == null) {
          if (toWidget_ != null) {
            toWidget_ =
              TideChart.TideChartWidget.newBuilder(toWidget_).mergeFrom(value).buildPartial();
          } else {
            toWidget_ = value;
          }
          onChanged();
        } else {
          toWidgetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      public Builder clearToWidget() {
        if (toWidgetBuilder_ == null) {
          toWidget_ = null;
          onChanged();
        } else {
          toWidget_ = null;
          toWidgetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      public TideChart.TideChartWidget.Builder getToWidgetBuilder() {
        
        onChanged();
        return getToWidgetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      public TideChart.TideChartWidgetOrBuilder getToWidgetOrBuilder() {
        if (toWidgetBuilder_ != null) {
          return toWidgetBuilder_.getMessageOrBuilder();
        } else {
          return toWidget_ == null ?
              TideChart.TideChartWidget.getDefaultInstance() : toWidget_;
        }
      }
      /**
       * <pre>
       * new version of the widget
       * </pre>
       *
       * <code>.TideChartWidget toWidget = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder> 
          getToWidgetFieldBuilder() {
        if (toWidgetBuilder_ == null) {
          toWidgetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartWidget, TideChart.TideChartWidget.Builder, TideChart.TideChartWidgetOrBuilder>(
                  getToWidget(),
                  getParentForChildren(),
                  isClean());
          toWidget_ = null;
        }
        return toWidgetBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartWidgetCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartWidgetCommand)
    private static final TideChart.TideChartWidgetCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartWidgetCommand();
    }

    public static TideChart.TideChartWidgetCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartWidgetCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartWidgetCommand>() {
      @java.lang.Override
      public TideChartWidgetCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartWidgetCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartWidgetCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartWidgetCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartWidgetCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartPortCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartPortCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * previons version of the port
     * </pre>
     *
     * <code>.TideChartPort fromPort = 1;</code>
     */
    boolean hasFromPort();
    /**
     * <pre>
     * previons version of the port
     * </pre>
     *
     * <code>.TideChartPort fromPort = 1;</code>
     */
    TideChart.TideChartPort getFromPort();
    /**
     * <pre>
     * previons version of the port
     * </pre>
     *
     * <code>.TideChartPort fromPort = 1;</code>
     */
    TideChart.TideChartPortOrBuilder getFromPortOrBuilder();

    /**
     * <pre>
     * new version of the port
     * </pre>
     *
     * <code>.TideChartPort toPort = 2;</code>
     */
    boolean hasToPort();
    /**
     * <pre>
     * new version of the port
     * </pre>
     *
     * <code>.TideChartPort toPort = 2;</code>
     */
    TideChart.TideChartPort getToPort();
    /**
     * <pre>
     * new version of the port
     * </pre>
     *
     * <code>.TideChartPort toPort = 2;</code>
     */
    TideChart.TideChartPortOrBuilder getToPortOrBuilder();

    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code TideChartPortCommand}
   */
  public  static final class TideChartPortCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartPortCommand)
      TideChartPortCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartPortCommand.newBuilder() to construct.
    private TideChartPortCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartPortCommand() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartPortCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartPortCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              TideChart.TideChartPort.Builder subBuilder = null;
              if (fromPort_ != null) {
                subBuilder = fromPort_.toBuilder();
              }
              fromPort_ = input.readMessage(TideChart.TideChartPort.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromPort_);
                fromPort_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              TideChart.TideChartPort.Builder subBuilder = null;
              if (toPort_ != null) {
                subBuilder = toPort_.toBuilder();
              }
              toPort_ = input.readMessage(TideChart.TideChartPort.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toPort_);
                toPort_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartPortCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartPortCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartPortCommand.class, TideChart.TideChartPortCommand.Builder.class);
    }

    public static final int FROMPORT_FIELD_NUMBER = 1;
    private TideChart.TideChartPort fromPort_;
    /**
     * <pre>
     * previons version of the port
     * </pre>
     *
     * <code>.TideChartPort fromPort = 1;</code>
     */
    public boolean hasFromPort() {
      return fromPort_ != null;
    }
    /**
     * <pre>
     * previons version of the port
     * </pre>
     *
     * <code>.TideChartPort fromPort = 1;</code>
     */
    public TideChart.TideChartPort getFromPort() {
      return fromPort_ == null ? TideChart.TideChartPort.getDefaultInstance() : fromPort_;
    }
    /**
     * <pre>
     * previons version of the port
     * </pre>
     *
     * <code>.TideChartPort fromPort = 1;</code>
     */
    public TideChart.TideChartPortOrBuilder getFromPortOrBuilder() {
      return getFromPort();
    }

    public static final int TOPORT_FIELD_NUMBER = 2;
    private TideChart.TideChartPort toPort_;
    /**
     * <pre>
     * new version of the port
     * </pre>
     *
     * <code>.TideChartPort toPort = 2;</code>
     */
    public boolean hasToPort() {
      return toPort_ != null;
    }
    /**
     * <pre>
     * new version of the port
     * </pre>
     *
     * <code>.TideChartPort toPort = 2;</code>
     */
    public TideChart.TideChartPort getToPort() {
      return toPort_ == null ? TideChart.TideChartPort.getDefaultInstance() : toPort_;
    }
    /**
     * <pre>
     * new version of the port
     * </pre>
     *
     * <code>.TideChartPort toPort = 2;</code>
     */
    public TideChart.TideChartPortOrBuilder getToPortOrBuilder() {
      return getToPort();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromPort_ != null) {
        output.writeMessage(1, getFromPort());
      }
      if (toPort_ != null) {
        output.writeMessage(2, getToPort());
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromPort_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromPort());
      }
      if (toPort_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToPort());
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartPortCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartPortCommand other = (TideChart.TideChartPortCommand) obj;

      if (hasFromPort() != other.hasFromPort()) return false;
      if (hasFromPort()) {
        if (!getFromPort()
            .equals(other.getFromPort())) return false;
      }
      if (hasToPort() != other.hasToPort()) return false;
      if (hasToPort()) {
        if (!getToPort()
            .equals(other.getToPort())) return false;
      }
      if (!getType()
          .equals(other.getType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFromPort()) {
        hash = (37 * hash) + FROMPORT_FIELD_NUMBER;
        hash = (53 * hash) + getFromPort().hashCode();
      }
      if (hasToPort()) {
        hash = (37 * hash) + TOPORT_FIELD_NUMBER;
        hash = (53 * hash) + getToPort().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartPortCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPortCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPortCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPortCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPortCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPortCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPortCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPortCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartPortCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPortCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartPortCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPortCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartPortCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartPortCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartPortCommand)
        TideChart.TideChartPortCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartPortCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartPortCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartPortCommand.class, TideChart.TideChartPortCommand.Builder.class);
      }

      // Construct using TideChart.TideChartPortCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromPortBuilder_ == null) {
          fromPort_ = null;
        } else {
          fromPort_ = null;
          fromPortBuilder_ = null;
        }
        if (toPortBuilder_ == null) {
          toPort_ = null;
        } else {
          toPort_ = null;
          toPortBuilder_ = null;
        }
        type_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartPortCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartPortCommand getDefaultInstanceForType() {
        return TideChart.TideChartPortCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartPortCommand build() {
        TideChart.TideChartPortCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartPortCommand buildPartial() {
        TideChart.TideChartPortCommand result = new TideChart.TideChartPortCommand(this);
        if (fromPortBuilder_ == null) {
          result.fromPort_ = fromPort_;
        } else {
          result.fromPort_ = fromPortBuilder_.build();
        }
        if (toPortBuilder_ == null) {
          result.toPort_ = toPort_;
        } else {
          result.toPort_ = toPortBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartPortCommand) {
          return mergeFrom((TideChart.TideChartPortCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartPortCommand other) {
        if (other == TideChart.TideChartPortCommand.getDefaultInstance()) return this;
        if (other.hasFromPort()) {
          mergeFromPort(other.getFromPort());
        }
        if (other.hasToPort()) {
          mergeToPort(other.getToPort());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartPortCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartPortCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private TideChart.TideChartPort fromPort_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> fromPortBuilder_;
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      public boolean hasFromPort() {
        return fromPortBuilder_ != null || fromPort_ != null;
      }
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      public TideChart.TideChartPort getFromPort() {
        if (fromPortBuilder_ == null) {
          return fromPort_ == null ? TideChart.TideChartPort.getDefaultInstance() : fromPort_;
        } else {
          return fromPortBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      public Builder setFromPort(TideChart.TideChartPort value) {
        if (fromPortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromPort_ = value;
          onChanged();
        } else {
          fromPortBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      public Builder setFromPort(
          TideChart.TideChartPort.Builder builderForValue) {
        if (fromPortBuilder_ == null) {
          fromPort_ = builderForValue.build();
          onChanged();
        } else {
          fromPortBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      public Builder mergeFromPort(TideChart.TideChartPort value) {
        if (fromPortBuilder_ == null) {
          if (fromPort_ != null) {
            fromPort_ =
              TideChart.TideChartPort.newBuilder(fromPort_).mergeFrom(value).buildPartial();
          } else {
            fromPort_ = value;
          }
          onChanged();
        } else {
          fromPortBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      public Builder clearFromPort() {
        if (fromPortBuilder_ == null) {
          fromPort_ = null;
          onChanged();
        } else {
          fromPort_ = null;
          fromPortBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      public TideChart.TideChartPort.Builder getFromPortBuilder() {
        
        onChanged();
        return getFromPortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      public TideChart.TideChartPortOrBuilder getFromPortOrBuilder() {
        if (fromPortBuilder_ != null) {
          return fromPortBuilder_.getMessageOrBuilder();
        } else {
          return fromPort_ == null ?
              TideChart.TideChartPort.getDefaultInstance() : fromPort_;
        }
      }
      /**
       * <pre>
       * previons version of the port
       * </pre>
       *
       * <code>.TideChartPort fromPort = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> 
          getFromPortFieldBuilder() {
        if (fromPortBuilder_ == null) {
          fromPortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder>(
                  getFromPort(),
                  getParentForChildren(),
                  isClean());
          fromPort_ = null;
        }
        return fromPortBuilder_;
      }

      private TideChart.TideChartPort toPort_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> toPortBuilder_;
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      public boolean hasToPort() {
        return toPortBuilder_ != null || toPort_ != null;
      }
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      public TideChart.TideChartPort getToPort() {
        if (toPortBuilder_ == null) {
          return toPort_ == null ? TideChart.TideChartPort.getDefaultInstance() : toPort_;
        } else {
          return toPortBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      public Builder setToPort(TideChart.TideChartPort value) {
        if (toPortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toPort_ = value;
          onChanged();
        } else {
          toPortBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      public Builder setToPort(
          TideChart.TideChartPort.Builder builderForValue) {
        if (toPortBuilder_ == null) {
          toPort_ = builderForValue.build();
          onChanged();
        } else {
          toPortBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      public Builder mergeToPort(TideChart.TideChartPort value) {
        if (toPortBuilder_ == null) {
          if (toPort_ != null) {
            toPort_ =
              TideChart.TideChartPort.newBuilder(toPort_).mergeFrom(value).buildPartial();
          } else {
            toPort_ = value;
          }
          onChanged();
        } else {
          toPortBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      public Builder clearToPort() {
        if (toPortBuilder_ == null) {
          toPort_ = null;
          onChanged();
        } else {
          toPort_ = null;
          toPortBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      public TideChart.TideChartPort.Builder getToPortBuilder() {
        
        onChanged();
        return getToPortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      public TideChart.TideChartPortOrBuilder getToPortOrBuilder() {
        if (toPortBuilder_ != null) {
          return toPortBuilder_.getMessageOrBuilder();
        } else {
          return toPort_ == null ?
              TideChart.TideChartPort.getDefaultInstance() : toPort_;
        }
      }
      /**
       * <pre>
       * new version of the port
       * </pre>
       *
       * <code>.TideChartPort toPort = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> 
          getToPortFieldBuilder() {
        if (toPortBuilder_ == null) {
          toPortBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder>(
                  getToPort(),
                  getParentForChildren(),
                  isClean());
          toPort_ = null;
        }
        return toPortBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartPortCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartPortCommand)
    private static final TideChart.TideChartPortCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartPortCommand();
    }

    public static TideChart.TideChartPortCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartPortCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartPortCommand>() {
      @java.lang.Override
      public TideChartPortCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartPortCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartPortCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartPortCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartPortCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartLinkCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartLinkCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * previous version of the link
     * </pre>
     *
     * <code>.TideChartLink fromLink = 1;</code>
     */
    boolean hasFromLink();
    /**
     * <pre>
     * previous version of the link
     * </pre>
     *
     * <code>.TideChartLink fromLink = 1;</code>
     */
    TideChart.TideChartLink getFromLink();
    /**
     * <pre>
     * previous version of the link
     * </pre>
     *
     * <code>.TideChartLink fromLink = 1;</code>
     */
    TideChart.TideChartLinkOrBuilder getFromLinkOrBuilder();

    /**
     * <pre>
     * new version of the link
     * </pre>
     *
     * <code>.TideChartLink toLink = 2;</code>
     */
    boolean hasToLink();
    /**
     * <pre>
     * new version of the link
     * </pre>
     *
     * <code>.TideChartLink toLink = 2;</code>
     */
    TideChart.TideChartLink getToLink();
    /**
     * <pre>
     * new version of the link
     * </pre>
     *
     * <code>.TideChartLink toLink = 2;</code>
     */
    TideChart.TideChartLinkOrBuilder getToLinkOrBuilder();

    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code TideChartLinkCommand}
   */
  public  static final class TideChartLinkCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartLinkCommand)
      TideChartLinkCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartLinkCommand.newBuilder() to construct.
    private TideChartLinkCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartLinkCommand() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartLinkCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartLinkCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              TideChart.TideChartLink.Builder subBuilder = null;
              if (fromLink_ != null) {
                subBuilder = fromLink_.toBuilder();
              }
              fromLink_ = input.readMessage(TideChart.TideChartLink.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromLink_);
                fromLink_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              TideChart.TideChartLink.Builder subBuilder = null;
              if (toLink_ != null) {
                subBuilder = toLink_.toBuilder();
              }
              toLink_ = input.readMessage(TideChart.TideChartLink.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toLink_);
                toLink_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartLinkCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartLinkCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartLinkCommand.class, TideChart.TideChartLinkCommand.Builder.class);
    }

    public static final int FROMLINK_FIELD_NUMBER = 1;
    private TideChart.TideChartLink fromLink_;
    /**
     * <pre>
     * previous version of the link
     * </pre>
     *
     * <code>.TideChartLink fromLink = 1;</code>
     */
    public boolean hasFromLink() {
      return fromLink_ != null;
    }
    /**
     * <pre>
     * previous version of the link
     * </pre>
     *
     * <code>.TideChartLink fromLink = 1;</code>
     */
    public TideChart.TideChartLink getFromLink() {
      return fromLink_ == null ? TideChart.TideChartLink.getDefaultInstance() : fromLink_;
    }
    /**
     * <pre>
     * previous version of the link
     * </pre>
     *
     * <code>.TideChartLink fromLink = 1;</code>
     */
    public TideChart.TideChartLinkOrBuilder getFromLinkOrBuilder() {
      return getFromLink();
    }

    public static final int TOLINK_FIELD_NUMBER = 2;
    private TideChart.TideChartLink toLink_;
    /**
     * <pre>
     * new version of the link
     * </pre>
     *
     * <code>.TideChartLink toLink = 2;</code>
     */
    public boolean hasToLink() {
      return toLink_ != null;
    }
    /**
     * <pre>
     * new version of the link
     * </pre>
     *
     * <code>.TideChartLink toLink = 2;</code>
     */
    public TideChart.TideChartLink getToLink() {
      return toLink_ == null ? TideChart.TideChartLink.getDefaultInstance() : toLink_;
    }
    /**
     * <pre>
     * new version of the link
     * </pre>
     *
     * <code>.TideChartLink toLink = 2;</code>
     */
    public TideChart.TideChartLinkOrBuilder getToLinkOrBuilder() {
      return getToLink();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromLink_ != null) {
        output.writeMessage(1, getFromLink());
      }
      if (toLink_ != null) {
        output.writeMessage(2, getToLink());
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromLink_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromLink());
      }
      if (toLink_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToLink());
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartLinkCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartLinkCommand other = (TideChart.TideChartLinkCommand) obj;

      if (hasFromLink() != other.hasFromLink()) return false;
      if (hasFromLink()) {
        if (!getFromLink()
            .equals(other.getFromLink())) return false;
      }
      if (hasToLink() != other.hasToLink()) return false;
      if (hasToLink()) {
        if (!getToLink()
            .equals(other.getToLink())) return false;
      }
      if (!getType()
          .equals(other.getType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFromLink()) {
        hash = (37 * hash) + FROMLINK_FIELD_NUMBER;
        hash = (53 * hash) + getFromLink().hashCode();
      }
      if (hasToLink()) {
        hash = (37 * hash) + TOLINK_FIELD_NUMBER;
        hash = (53 * hash) + getToLink().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartLinkCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLinkCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLinkCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLinkCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLinkCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLinkCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLinkCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLinkCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartLinkCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLinkCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartLinkCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLinkCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartLinkCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartLinkCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartLinkCommand)
        TideChart.TideChartLinkCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartLinkCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartLinkCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartLinkCommand.class, TideChart.TideChartLinkCommand.Builder.class);
      }

      // Construct using TideChart.TideChartLinkCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromLinkBuilder_ == null) {
          fromLink_ = null;
        } else {
          fromLink_ = null;
          fromLinkBuilder_ = null;
        }
        if (toLinkBuilder_ == null) {
          toLink_ = null;
        } else {
          toLink_ = null;
          toLinkBuilder_ = null;
        }
        type_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartLinkCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartLinkCommand getDefaultInstanceForType() {
        return TideChart.TideChartLinkCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartLinkCommand build() {
        TideChart.TideChartLinkCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartLinkCommand buildPartial() {
        TideChart.TideChartLinkCommand result = new TideChart.TideChartLinkCommand(this);
        if (fromLinkBuilder_ == null) {
          result.fromLink_ = fromLink_;
        } else {
          result.fromLink_ = fromLinkBuilder_.build();
        }
        if (toLinkBuilder_ == null) {
          result.toLink_ = toLink_;
        } else {
          result.toLink_ = toLinkBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartLinkCommand) {
          return mergeFrom((TideChart.TideChartLinkCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartLinkCommand other) {
        if (other == TideChart.TideChartLinkCommand.getDefaultInstance()) return this;
        if (other.hasFromLink()) {
          mergeFromLink(other.getFromLink());
        }
        if (other.hasToLink()) {
          mergeToLink(other.getToLink());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartLinkCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartLinkCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private TideChart.TideChartLink fromLink_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder> fromLinkBuilder_;
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      public boolean hasFromLink() {
        return fromLinkBuilder_ != null || fromLink_ != null;
      }
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      public TideChart.TideChartLink getFromLink() {
        if (fromLinkBuilder_ == null) {
          return fromLink_ == null ? TideChart.TideChartLink.getDefaultInstance() : fromLink_;
        } else {
          return fromLinkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      public Builder setFromLink(TideChart.TideChartLink value) {
        if (fromLinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromLink_ = value;
          onChanged();
        } else {
          fromLinkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      public Builder setFromLink(
          TideChart.TideChartLink.Builder builderForValue) {
        if (fromLinkBuilder_ == null) {
          fromLink_ = builderForValue.build();
          onChanged();
        } else {
          fromLinkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      public Builder mergeFromLink(TideChart.TideChartLink value) {
        if (fromLinkBuilder_ == null) {
          if (fromLink_ != null) {
            fromLink_ =
              TideChart.TideChartLink.newBuilder(fromLink_).mergeFrom(value).buildPartial();
          } else {
            fromLink_ = value;
          }
          onChanged();
        } else {
          fromLinkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      public Builder clearFromLink() {
        if (fromLinkBuilder_ == null) {
          fromLink_ = null;
          onChanged();
        } else {
          fromLink_ = null;
          fromLinkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      public TideChart.TideChartLink.Builder getFromLinkBuilder() {
        
        onChanged();
        return getFromLinkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      public TideChart.TideChartLinkOrBuilder getFromLinkOrBuilder() {
        if (fromLinkBuilder_ != null) {
          return fromLinkBuilder_.getMessageOrBuilder();
        } else {
          return fromLink_ == null ?
              TideChart.TideChartLink.getDefaultInstance() : fromLink_;
        }
      }
      /**
       * <pre>
       * previous version of the link
       * </pre>
       *
       * <code>.TideChartLink fromLink = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder> 
          getFromLinkFieldBuilder() {
        if (fromLinkBuilder_ == null) {
          fromLinkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder>(
                  getFromLink(),
                  getParentForChildren(),
                  isClean());
          fromLink_ = null;
        }
        return fromLinkBuilder_;
      }

      private TideChart.TideChartLink toLink_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder> toLinkBuilder_;
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      public boolean hasToLink() {
        return toLinkBuilder_ != null || toLink_ != null;
      }
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      public TideChart.TideChartLink getToLink() {
        if (toLinkBuilder_ == null) {
          return toLink_ == null ? TideChart.TideChartLink.getDefaultInstance() : toLink_;
        } else {
          return toLinkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      public Builder setToLink(TideChart.TideChartLink value) {
        if (toLinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toLink_ = value;
          onChanged();
        } else {
          toLinkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      public Builder setToLink(
          TideChart.TideChartLink.Builder builderForValue) {
        if (toLinkBuilder_ == null) {
          toLink_ = builderForValue.build();
          onChanged();
        } else {
          toLinkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      public Builder mergeToLink(TideChart.TideChartLink value) {
        if (toLinkBuilder_ == null) {
          if (toLink_ != null) {
            toLink_ =
              TideChart.TideChartLink.newBuilder(toLink_).mergeFrom(value).buildPartial();
          } else {
            toLink_ = value;
          }
          onChanged();
        } else {
          toLinkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      public Builder clearToLink() {
        if (toLinkBuilder_ == null) {
          toLink_ = null;
          onChanged();
        } else {
          toLink_ = null;
          toLinkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      public TideChart.TideChartLink.Builder getToLinkBuilder() {
        
        onChanged();
        return getToLinkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      public TideChart.TideChartLinkOrBuilder getToLinkOrBuilder() {
        if (toLinkBuilder_ != null) {
          return toLinkBuilder_.getMessageOrBuilder();
        } else {
          return toLink_ == null ?
              TideChart.TideChartLink.getDefaultInstance() : toLink_;
        }
      }
      /**
       * <pre>
       * new version of the link
       * </pre>
       *
       * <code>.TideChartLink toLink = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder> 
          getToLinkFieldBuilder() {
        if (toLinkBuilder_ == null) {
          toLinkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartLink, TideChart.TideChartLink.Builder, TideChart.TideChartLinkOrBuilder>(
                  getToLink(),
                  getParentForChildren(),
                  isClean());
          toLink_ = null;
        }
        return toLinkBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartLinkCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartLinkCommand)
    private static final TideChart.TideChartLinkCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartLinkCommand();
    }

    public static TideChart.TideChartLinkCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartLinkCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartLinkCommand>() {
      @java.lang.Override
      public TideChartLinkCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartLinkCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartLinkCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartLinkCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartLinkCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartNodeCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartNodeCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * previous version of the graph node
     * </pre>
     *
     * <code>.TideChartNode fromNode = 1;</code>
     */
    boolean hasFromNode();
    /**
     * <pre>
     * previous version of the graph node
     * </pre>
     *
     * <code>.TideChartNode fromNode = 1;</code>
     */
    TideChart.TideChartNode getFromNode();
    /**
     * <pre>
     * previous version of the graph node
     * </pre>
     *
     * <code>.TideChartNode fromNode = 1;</code>
     */
    TideChart.TideChartNodeOrBuilder getFromNodeOrBuilder();

    /**
     * <pre>
     * new version of the graph node
     * </pre>
     *
     * <code>.TideChartNode toNode = 2;</code>
     */
    boolean hasToNode();
    /**
     * <pre>
     * new version of the graph node
     * </pre>
     *
     * <code>.TideChartNode toNode = 2;</code>
     */
    TideChart.TideChartNode getToNode();
    /**
     * <pre>
     * new version of the graph node
     * </pre>
     *
     * <code>.TideChartNode toNode = 2;</code>
     */
    TideChart.TideChartNodeOrBuilder getToNodeOrBuilder();

    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code TideChartNodeCommand}
   */
  public  static final class TideChartNodeCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartNodeCommand)
      TideChartNodeCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartNodeCommand.newBuilder() to construct.
    private TideChartNodeCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartNodeCommand() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartNodeCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartNodeCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              TideChart.TideChartNode.Builder subBuilder = null;
              if (fromNode_ != null) {
                subBuilder = fromNode_.toBuilder();
              }
              fromNode_ = input.readMessage(TideChart.TideChartNode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromNode_);
                fromNode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              TideChart.TideChartNode.Builder subBuilder = null;
              if (toNode_ != null) {
                subBuilder = toNode_.toBuilder();
              }
              toNode_ = input.readMessage(TideChart.TideChartNode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toNode_);
                toNode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartNodeCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartNodeCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartNodeCommand.class, TideChart.TideChartNodeCommand.Builder.class);
    }

    public static final int FROMNODE_FIELD_NUMBER = 1;
    private TideChart.TideChartNode fromNode_;
    /**
     * <pre>
     * previous version of the graph node
     * </pre>
     *
     * <code>.TideChartNode fromNode = 1;</code>
     */
    public boolean hasFromNode() {
      return fromNode_ != null;
    }
    /**
     * <pre>
     * previous version of the graph node
     * </pre>
     *
     * <code>.TideChartNode fromNode = 1;</code>
     */
    public TideChart.TideChartNode getFromNode() {
      return fromNode_ == null ? TideChart.TideChartNode.getDefaultInstance() : fromNode_;
    }
    /**
     * <pre>
     * previous version of the graph node
     * </pre>
     *
     * <code>.TideChartNode fromNode = 1;</code>
     */
    public TideChart.TideChartNodeOrBuilder getFromNodeOrBuilder() {
      return getFromNode();
    }

    public static final int TONODE_FIELD_NUMBER = 2;
    private TideChart.TideChartNode toNode_;
    /**
     * <pre>
     * new version of the graph node
     * </pre>
     *
     * <code>.TideChartNode toNode = 2;</code>
     */
    public boolean hasToNode() {
      return toNode_ != null;
    }
    /**
     * <pre>
     * new version of the graph node
     * </pre>
     *
     * <code>.TideChartNode toNode = 2;</code>
     */
    public TideChart.TideChartNode getToNode() {
      return toNode_ == null ? TideChart.TideChartNode.getDefaultInstance() : toNode_;
    }
    /**
     * <pre>
     * new version of the graph node
     * </pre>
     *
     * <code>.TideChartNode toNode = 2;</code>
     */
    public TideChart.TideChartNodeOrBuilder getToNodeOrBuilder() {
      return getToNode();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromNode_ != null) {
        output.writeMessage(1, getFromNode());
      }
      if (toNode_ != null) {
        output.writeMessage(2, getToNode());
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromNode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromNode());
      }
      if (toNode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToNode());
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartNodeCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartNodeCommand other = (TideChart.TideChartNodeCommand) obj;

      if (hasFromNode() != other.hasFromNode()) return false;
      if (hasFromNode()) {
        if (!getFromNode()
            .equals(other.getFromNode())) return false;
      }
      if (hasToNode() != other.hasToNode()) return false;
      if (hasToNode()) {
        if (!getToNode()
            .equals(other.getToNode())) return false;
      }
      if (!getType()
          .equals(other.getType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFromNode()) {
        hash = (37 * hash) + FROMNODE_FIELD_NUMBER;
        hash = (53 * hash) + getFromNode().hashCode();
      }
      if (hasToNode()) {
        hash = (37 * hash) + TONODE_FIELD_NUMBER;
        hash = (53 * hash) + getToNode().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartNodeCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNodeCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNodeCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNodeCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNodeCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNodeCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNodeCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNodeCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartNodeCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNodeCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartNodeCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNodeCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartNodeCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartNodeCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartNodeCommand)
        TideChart.TideChartNodeCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartNodeCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartNodeCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartNodeCommand.class, TideChart.TideChartNodeCommand.Builder.class);
      }

      // Construct using TideChart.TideChartNodeCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromNodeBuilder_ == null) {
          fromNode_ = null;
        } else {
          fromNode_ = null;
          fromNodeBuilder_ = null;
        }
        if (toNodeBuilder_ == null) {
          toNode_ = null;
        } else {
          toNode_ = null;
          toNodeBuilder_ = null;
        }
        type_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartNodeCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartNodeCommand getDefaultInstanceForType() {
        return TideChart.TideChartNodeCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartNodeCommand build() {
        TideChart.TideChartNodeCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartNodeCommand buildPartial() {
        TideChart.TideChartNodeCommand result = new TideChart.TideChartNodeCommand(this);
        if (fromNodeBuilder_ == null) {
          result.fromNode_ = fromNode_;
        } else {
          result.fromNode_ = fromNodeBuilder_.build();
        }
        if (toNodeBuilder_ == null) {
          result.toNode_ = toNode_;
        } else {
          result.toNode_ = toNodeBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartNodeCommand) {
          return mergeFrom((TideChart.TideChartNodeCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartNodeCommand other) {
        if (other == TideChart.TideChartNodeCommand.getDefaultInstance()) return this;
        if (other.hasFromNode()) {
          mergeFromNode(other.getFromNode());
        }
        if (other.hasToNode()) {
          mergeToNode(other.getToNode());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartNodeCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartNodeCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private TideChart.TideChartNode fromNode_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder> fromNodeBuilder_;
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      public boolean hasFromNode() {
        return fromNodeBuilder_ != null || fromNode_ != null;
      }
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      public TideChart.TideChartNode getFromNode() {
        if (fromNodeBuilder_ == null) {
          return fromNode_ == null ? TideChart.TideChartNode.getDefaultInstance() : fromNode_;
        } else {
          return fromNodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      public Builder setFromNode(TideChart.TideChartNode value) {
        if (fromNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromNode_ = value;
          onChanged();
        } else {
          fromNodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      public Builder setFromNode(
          TideChart.TideChartNode.Builder builderForValue) {
        if (fromNodeBuilder_ == null) {
          fromNode_ = builderForValue.build();
          onChanged();
        } else {
          fromNodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      public Builder mergeFromNode(TideChart.TideChartNode value) {
        if (fromNodeBuilder_ == null) {
          if (fromNode_ != null) {
            fromNode_ =
              TideChart.TideChartNode.newBuilder(fromNode_).mergeFrom(value).buildPartial();
          } else {
            fromNode_ = value;
          }
          onChanged();
        } else {
          fromNodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      public Builder clearFromNode() {
        if (fromNodeBuilder_ == null) {
          fromNode_ = null;
          onChanged();
        } else {
          fromNode_ = null;
          fromNodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      public TideChart.TideChartNode.Builder getFromNodeBuilder() {
        
        onChanged();
        return getFromNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      public TideChart.TideChartNodeOrBuilder getFromNodeOrBuilder() {
        if (fromNodeBuilder_ != null) {
          return fromNodeBuilder_.getMessageOrBuilder();
        } else {
          return fromNode_ == null ?
              TideChart.TideChartNode.getDefaultInstance() : fromNode_;
        }
      }
      /**
       * <pre>
       * previous version of the graph node
       * </pre>
       *
       * <code>.TideChartNode fromNode = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder> 
          getFromNodeFieldBuilder() {
        if (fromNodeBuilder_ == null) {
          fromNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder>(
                  getFromNode(),
                  getParentForChildren(),
                  isClean());
          fromNode_ = null;
        }
        return fromNodeBuilder_;
      }

      private TideChart.TideChartNode toNode_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder> toNodeBuilder_;
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      public boolean hasToNode() {
        return toNodeBuilder_ != null || toNode_ != null;
      }
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      public TideChart.TideChartNode getToNode() {
        if (toNodeBuilder_ == null) {
          return toNode_ == null ? TideChart.TideChartNode.getDefaultInstance() : toNode_;
        } else {
          return toNodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      public Builder setToNode(TideChart.TideChartNode value) {
        if (toNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toNode_ = value;
          onChanged();
        } else {
          toNodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      public Builder setToNode(
          TideChart.TideChartNode.Builder builderForValue) {
        if (toNodeBuilder_ == null) {
          toNode_ = builderForValue.build();
          onChanged();
        } else {
          toNodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      public Builder mergeToNode(TideChart.TideChartNode value) {
        if (toNodeBuilder_ == null) {
          if (toNode_ != null) {
            toNode_ =
              TideChart.TideChartNode.newBuilder(toNode_).mergeFrom(value).buildPartial();
          } else {
            toNode_ = value;
          }
          onChanged();
        } else {
          toNodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      public Builder clearToNode() {
        if (toNodeBuilder_ == null) {
          toNode_ = null;
          onChanged();
        } else {
          toNode_ = null;
          toNodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      public TideChart.TideChartNode.Builder getToNodeBuilder() {
        
        onChanged();
        return getToNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      public TideChart.TideChartNodeOrBuilder getToNodeOrBuilder() {
        if (toNodeBuilder_ != null) {
          return toNodeBuilder_.getMessageOrBuilder();
        } else {
          return toNode_ == null ?
              TideChart.TideChartNode.getDefaultInstance() : toNode_;
        }
      }
      /**
       * <pre>
       * new version of the graph node
       * </pre>
       *
       * <code>.TideChartNode toNode = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder> 
          getToNodeFieldBuilder() {
        if (toNodeBuilder_ == null) {
          toNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartNode, TideChart.TideChartNode.Builder, TideChart.TideChartNodeOrBuilder>(
                  getToNode(),
                  getParentForChildren(),
                  isClean());
          toNode_ = null;
        }
        return toNodeBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartNodeCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartNodeCommand)
    private static final TideChart.TideChartNodeCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartNodeCommand();
    }

    public static TideChart.TideChartNodeCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartNodeCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartNodeCommand>() {
      @java.lang.Override
      public TideChartNodeCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartNodeCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartNodeCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartNodeCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartNodeCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartRegionCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartRegionCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * previous version of the region
     * </pre>
     *
     * <code>.TideChartRegion fromRegion = 1;</code>
     */
    boolean hasFromRegion();
    /**
     * <pre>
     * previous version of the region
     * </pre>
     *
     * <code>.TideChartRegion fromRegion = 1;</code>
     */
    TideChart.TideChartRegion getFromRegion();
    /**
     * <pre>
     * previous version of the region
     * </pre>
     *
     * <code>.TideChartRegion fromRegion = 1;</code>
     */
    TideChart.TideChartRegionOrBuilder getFromRegionOrBuilder();

    /**
     * <pre>
     * new version of the region
     * </pre>
     *
     * <code>.TideChartRegion toRegion = 2;</code>
     */
    boolean hasToRegion();
    /**
     * <pre>
     * new version of the region
     * </pre>
     *
     * <code>.TideChartRegion toRegion = 2;</code>
     */
    TideChart.TideChartRegion getToRegion();
    /**
     * <pre>
     * new version of the region
     * </pre>
     *
     * <code>.TideChartRegion toRegion = 2;</code>
     */
    TideChart.TideChartRegionOrBuilder getToRegionOrBuilder();

    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code TideChartRegionCommand}
   */
  public  static final class TideChartRegionCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartRegionCommand)
      TideChartRegionCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartRegionCommand.newBuilder() to construct.
    private TideChartRegionCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartRegionCommand() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartRegionCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartRegionCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              TideChart.TideChartRegion.Builder subBuilder = null;
              if (fromRegion_ != null) {
                subBuilder = fromRegion_.toBuilder();
              }
              fromRegion_ = input.readMessage(TideChart.TideChartRegion.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromRegion_);
                fromRegion_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              TideChart.TideChartRegion.Builder subBuilder = null;
              if (toRegion_ != null) {
                subBuilder = toRegion_.toBuilder();
              }
              toRegion_ = input.readMessage(TideChart.TideChartRegion.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toRegion_);
                toRegion_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartRegionCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartRegionCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartRegionCommand.class, TideChart.TideChartRegionCommand.Builder.class);
    }

    public static final int FROMREGION_FIELD_NUMBER = 1;
    private TideChart.TideChartRegion fromRegion_;
    /**
     * <pre>
     * previous version of the region
     * </pre>
     *
     * <code>.TideChartRegion fromRegion = 1;</code>
     */
    public boolean hasFromRegion() {
      return fromRegion_ != null;
    }
    /**
     * <pre>
     * previous version of the region
     * </pre>
     *
     * <code>.TideChartRegion fromRegion = 1;</code>
     */
    public TideChart.TideChartRegion getFromRegion() {
      return fromRegion_ == null ? TideChart.TideChartRegion.getDefaultInstance() : fromRegion_;
    }
    /**
     * <pre>
     * previous version of the region
     * </pre>
     *
     * <code>.TideChartRegion fromRegion = 1;</code>
     */
    public TideChart.TideChartRegionOrBuilder getFromRegionOrBuilder() {
      return getFromRegion();
    }

    public static final int TOREGION_FIELD_NUMBER = 2;
    private TideChart.TideChartRegion toRegion_;
    /**
     * <pre>
     * new version of the region
     * </pre>
     *
     * <code>.TideChartRegion toRegion = 2;</code>
     */
    public boolean hasToRegion() {
      return toRegion_ != null;
    }
    /**
     * <pre>
     * new version of the region
     * </pre>
     *
     * <code>.TideChartRegion toRegion = 2;</code>
     */
    public TideChart.TideChartRegion getToRegion() {
      return toRegion_ == null ? TideChart.TideChartRegion.getDefaultInstance() : toRegion_;
    }
    /**
     * <pre>
     * new version of the region
     * </pre>
     *
     * <code>.TideChartRegion toRegion = 2;</code>
     */
    public TideChart.TideChartRegionOrBuilder getToRegionOrBuilder() {
      return getToRegion();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromRegion_ != null) {
        output.writeMessage(1, getFromRegion());
      }
      if (toRegion_ != null) {
        output.writeMessage(2, getToRegion());
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromRegion_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromRegion());
      }
      if (toRegion_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToRegion());
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartRegionCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartRegionCommand other = (TideChart.TideChartRegionCommand) obj;

      if (hasFromRegion() != other.hasFromRegion()) return false;
      if (hasFromRegion()) {
        if (!getFromRegion()
            .equals(other.getFromRegion())) return false;
      }
      if (hasToRegion() != other.hasToRegion()) return false;
      if (hasToRegion()) {
        if (!getToRegion()
            .equals(other.getToRegion())) return false;
      }
      if (!getType()
          .equals(other.getType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFromRegion()) {
        hash = (37 * hash) + FROMREGION_FIELD_NUMBER;
        hash = (53 * hash) + getFromRegion().hashCode();
      }
      if (hasToRegion()) {
        hash = (37 * hash) + TOREGION_FIELD_NUMBER;
        hash = (53 * hash) + getToRegion().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartRegionCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartRegionCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartRegionCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartRegionCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartRegionCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartRegionCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartRegionCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartRegionCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartRegionCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartRegionCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartRegionCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartRegionCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartRegionCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartRegionCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartRegionCommand)
        TideChart.TideChartRegionCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartRegionCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartRegionCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartRegionCommand.class, TideChart.TideChartRegionCommand.Builder.class);
      }

      // Construct using TideChart.TideChartRegionCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromRegionBuilder_ == null) {
          fromRegion_ = null;
        } else {
          fromRegion_ = null;
          fromRegionBuilder_ = null;
        }
        if (toRegionBuilder_ == null) {
          toRegion_ = null;
        } else {
          toRegion_ = null;
          toRegionBuilder_ = null;
        }
        type_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartRegionCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartRegionCommand getDefaultInstanceForType() {
        return TideChart.TideChartRegionCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartRegionCommand build() {
        TideChart.TideChartRegionCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartRegionCommand buildPartial() {
        TideChart.TideChartRegionCommand result = new TideChart.TideChartRegionCommand(this);
        if (fromRegionBuilder_ == null) {
          result.fromRegion_ = fromRegion_;
        } else {
          result.fromRegion_ = fromRegionBuilder_.build();
        }
        if (toRegionBuilder_ == null) {
          result.toRegion_ = toRegion_;
        } else {
          result.toRegion_ = toRegionBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartRegionCommand) {
          return mergeFrom((TideChart.TideChartRegionCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartRegionCommand other) {
        if (other == TideChart.TideChartRegionCommand.getDefaultInstance()) return this;
        if (other.hasFromRegion()) {
          mergeFromRegion(other.getFromRegion());
        }
        if (other.hasToRegion()) {
          mergeToRegion(other.getToRegion());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartRegionCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartRegionCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private TideChart.TideChartRegion fromRegion_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder> fromRegionBuilder_;
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      public boolean hasFromRegion() {
        return fromRegionBuilder_ != null || fromRegion_ != null;
      }
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      public TideChart.TideChartRegion getFromRegion() {
        if (fromRegionBuilder_ == null) {
          return fromRegion_ == null ? TideChart.TideChartRegion.getDefaultInstance() : fromRegion_;
        } else {
          return fromRegionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      public Builder setFromRegion(TideChart.TideChartRegion value) {
        if (fromRegionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromRegion_ = value;
          onChanged();
        } else {
          fromRegionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      public Builder setFromRegion(
          TideChart.TideChartRegion.Builder builderForValue) {
        if (fromRegionBuilder_ == null) {
          fromRegion_ = builderForValue.build();
          onChanged();
        } else {
          fromRegionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      public Builder mergeFromRegion(TideChart.TideChartRegion value) {
        if (fromRegionBuilder_ == null) {
          if (fromRegion_ != null) {
            fromRegion_ =
              TideChart.TideChartRegion.newBuilder(fromRegion_).mergeFrom(value).buildPartial();
          } else {
            fromRegion_ = value;
          }
          onChanged();
        } else {
          fromRegionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      public Builder clearFromRegion() {
        if (fromRegionBuilder_ == null) {
          fromRegion_ = null;
          onChanged();
        } else {
          fromRegion_ = null;
          fromRegionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      public TideChart.TideChartRegion.Builder getFromRegionBuilder() {
        
        onChanged();
        return getFromRegionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      public TideChart.TideChartRegionOrBuilder getFromRegionOrBuilder() {
        if (fromRegionBuilder_ != null) {
          return fromRegionBuilder_.getMessageOrBuilder();
        } else {
          return fromRegion_ == null ?
              TideChart.TideChartRegion.getDefaultInstance() : fromRegion_;
        }
      }
      /**
       * <pre>
       * previous version of the region
       * </pre>
       *
       * <code>.TideChartRegion fromRegion = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder> 
          getFromRegionFieldBuilder() {
        if (fromRegionBuilder_ == null) {
          fromRegionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder>(
                  getFromRegion(),
                  getParentForChildren(),
                  isClean());
          fromRegion_ = null;
        }
        return fromRegionBuilder_;
      }

      private TideChart.TideChartRegion toRegion_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder> toRegionBuilder_;
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      public boolean hasToRegion() {
        return toRegionBuilder_ != null || toRegion_ != null;
      }
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      public TideChart.TideChartRegion getToRegion() {
        if (toRegionBuilder_ == null) {
          return toRegion_ == null ? TideChart.TideChartRegion.getDefaultInstance() : toRegion_;
        } else {
          return toRegionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      public Builder setToRegion(TideChart.TideChartRegion value) {
        if (toRegionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toRegion_ = value;
          onChanged();
        } else {
          toRegionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      public Builder setToRegion(
          TideChart.TideChartRegion.Builder builderForValue) {
        if (toRegionBuilder_ == null) {
          toRegion_ = builderForValue.build();
          onChanged();
        } else {
          toRegionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      public Builder mergeToRegion(TideChart.TideChartRegion value) {
        if (toRegionBuilder_ == null) {
          if (toRegion_ != null) {
            toRegion_ =
              TideChart.TideChartRegion.newBuilder(toRegion_).mergeFrom(value).buildPartial();
          } else {
            toRegion_ = value;
          }
          onChanged();
        } else {
          toRegionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      public Builder clearToRegion() {
        if (toRegionBuilder_ == null) {
          toRegion_ = null;
          onChanged();
        } else {
          toRegion_ = null;
          toRegionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      public TideChart.TideChartRegion.Builder getToRegionBuilder() {
        
        onChanged();
        return getToRegionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      public TideChart.TideChartRegionOrBuilder getToRegionOrBuilder() {
        if (toRegionBuilder_ != null) {
          return toRegionBuilder_.getMessageOrBuilder();
        } else {
          return toRegion_ == null ?
              TideChart.TideChartRegion.getDefaultInstance() : toRegion_;
        }
      }
      /**
       * <pre>
       * new version of the region
       * </pre>
       *
       * <code>.TideChartRegion toRegion = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder> 
          getToRegionFieldBuilder() {
        if (toRegionBuilder_ == null) {
          toRegionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartRegion, TideChart.TideChartRegion.Builder, TideChart.TideChartRegionOrBuilder>(
                  getToRegion(),
                  getParentForChildren(),
                  isClean());
          toRegion_ = null;
        }
        return toRegionBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartRegionCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartRegionCommand)
    private static final TideChart.TideChartRegionCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartRegionCommand();
    }

    public static TideChart.TideChartRegionCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartRegionCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartRegionCommand>() {
      @java.lang.Override
      public TideChartRegionCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartRegionCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartRegionCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartRegionCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartRegionCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartGraphCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartGraphCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * previous versino of the graph
     * </pre>
     *
     * <code>.TideChartGraph fromGraph = 1;</code>
     */
    boolean hasFromGraph();
    /**
     * <pre>
     * previous versino of the graph
     * </pre>
     *
     * <code>.TideChartGraph fromGraph = 1;</code>
     */
    TideChart.TideChartGraph getFromGraph();
    /**
     * <pre>
     * previous versino of the graph
     * </pre>
     *
     * <code>.TideChartGraph fromGraph = 1;</code>
     */
    TideChart.TideChartGraphOrBuilder getFromGraphOrBuilder();

    /**
     * <pre>
     * new version of the graph
     * </pre>
     *
     * <code>.TideChartGraph toGraph = 2;</code>
     */
    boolean hasToGraph();
    /**
     * <pre>
     * new version of the graph
     * </pre>
     *
     * <code>.TideChartGraph toGraph = 2;</code>
     */
    TideChart.TideChartGraph getToGraph();
    /**
     * <pre>
     * new version of the graph
     * </pre>
     *
     * <code>.TideChartGraph toGraph = 2;</code>
     */
    TideChart.TideChartGraphOrBuilder getToGraphOrBuilder();

    /**
     * <pre>
     * type of update: add, update or remove    
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, update or remove    
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code TideChartGraphCommand}
   */
  public  static final class TideChartGraphCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartGraphCommand)
      TideChartGraphCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartGraphCommand.newBuilder() to construct.
    private TideChartGraphCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartGraphCommand() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartGraphCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartGraphCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              TideChart.TideChartGraph.Builder subBuilder = null;
              if (fromGraph_ != null) {
                subBuilder = fromGraph_.toBuilder();
              }
              fromGraph_ = input.readMessage(TideChart.TideChartGraph.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromGraph_);
                fromGraph_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              TideChart.TideChartGraph.Builder subBuilder = null;
              if (toGraph_ != null) {
                subBuilder = toGraph_.toBuilder();
              }
              toGraph_ = input.readMessage(TideChart.TideChartGraph.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toGraph_);
                toGraph_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartGraphCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartGraphCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartGraphCommand.class, TideChart.TideChartGraphCommand.Builder.class);
    }

    public static final int FROMGRAPH_FIELD_NUMBER = 1;
    private TideChart.TideChartGraph fromGraph_;
    /**
     * <pre>
     * previous versino of the graph
     * </pre>
     *
     * <code>.TideChartGraph fromGraph = 1;</code>
     */
    public boolean hasFromGraph() {
      return fromGraph_ != null;
    }
    /**
     * <pre>
     * previous versino of the graph
     * </pre>
     *
     * <code>.TideChartGraph fromGraph = 1;</code>
     */
    public TideChart.TideChartGraph getFromGraph() {
      return fromGraph_ == null ? TideChart.TideChartGraph.getDefaultInstance() : fromGraph_;
    }
    /**
     * <pre>
     * previous versino of the graph
     * </pre>
     *
     * <code>.TideChartGraph fromGraph = 1;</code>
     */
    public TideChart.TideChartGraphOrBuilder getFromGraphOrBuilder() {
      return getFromGraph();
    }

    public static final int TOGRAPH_FIELD_NUMBER = 2;
    private TideChart.TideChartGraph toGraph_;
    /**
     * <pre>
     * new version of the graph
     * </pre>
     *
     * <code>.TideChartGraph toGraph = 2;</code>
     */
    public boolean hasToGraph() {
      return toGraph_ != null;
    }
    /**
     * <pre>
     * new version of the graph
     * </pre>
     *
     * <code>.TideChartGraph toGraph = 2;</code>
     */
    public TideChart.TideChartGraph getToGraph() {
      return toGraph_ == null ? TideChart.TideChartGraph.getDefaultInstance() : toGraph_;
    }
    /**
     * <pre>
     * new version of the graph
     * </pre>
     *
     * <code>.TideChartGraph toGraph = 2;</code>
     */
    public TideChart.TideChartGraphOrBuilder getToGraphOrBuilder() {
      return getToGraph();
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, update or remove    
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, update or remove    
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromGraph_ != null) {
        output.writeMessage(1, getFromGraph());
      }
      if (toGraph_ != null) {
        output.writeMessage(2, getToGraph());
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromGraph_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromGraph());
      }
      if (toGraph_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToGraph());
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartGraphCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartGraphCommand other = (TideChart.TideChartGraphCommand) obj;

      if (hasFromGraph() != other.hasFromGraph()) return false;
      if (hasFromGraph()) {
        if (!getFromGraph()
            .equals(other.getFromGraph())) return false;
      }
      if (hasToGraph() != other.hasToGraph()) return false;
      if (hasToGraph()) {
        if (!getToGraph()
            .equals(other.getToGraph())) return false;
      }
      if (!getType()
          .equals(other.getType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFromGraph()) {
        hash = (37 * hash) + FROMGRAPH_FIELD_NUMBER;
        hash = (53 * hash) + getFromGraph().hashCode();
      }
      if (hasToGraph()) {
        hash = (37 * hash) + TOGRAPH_FIELD_NUMBER;
        hash = (53 * hash) + getToGraph().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartGraphCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGraphCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGraphCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGraphCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGraphCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartGraphCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartGraphCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGraphCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartGraphCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGraphCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartGraphCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartGraphCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartGraphCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartGraphCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartGraphCommand)
        TideChart.TideChartGraphCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartGraphCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartGraphCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartGraphCommand.class, TideChart.TideChartGraphCommand.Builder.class);
      }

      // Construct using TideChart.TideChartGraphCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromGraphBuilder_ == null) {
          fromGraph_ = null;
        } else {
          fromGraph_ = null;
          fromGraphBuilder_ = null;
        }
        if (toGraphBuilder_ == null) {
          toGraph_ = null;
        } else {
          toGraph_ = null;
          toGraphBuilder_ = null;
        }
        type_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartGraphCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartGraphCommand getDefaultInstanceForType() {
        return TideChart.TideChartGraphCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartGraphCommand build() {
        TideChart.TideChartGraphCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartGraphCommand buildPartial() {
        TideChart.TideChartGraphCommand result = new TideChart.TideChartGraphCommand(this);
        if (fromGraphBuilder_ == null) {
          result.fromGraph_ = fromGraph_;
        } else {
          result.fromGraph_ = fromGraphBuilder_.build();
        }
        if (toGraphBuilder_ == null) {
          result.toGraph_ = toGraph_;
        } else {
          result.toGraph_ = toGraphBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartGraphCommand) {
          return mergeFrom((TideChart.TideChartGraphCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartGraphCommand other) {
        if (other == TideChart.TideChartGraphCommand.getDefaultInstance()) return this;
        if (other.hasFromGraph()) {
          mergeFromGraph(other.getFromGraph());
        }
        if (other.hasToGraph()) {
          mergeToGraph(other.getToGraph());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartGraphCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartGraphCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private TideChart.TideChartGraph fromGraph_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder> fromGraphBuilder_;
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      public boolean hasFromGraph() {
        return fromGraphBuilder_ != null || fromGraph_ != null;
      }
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      public TideChart.TideChartGraph getFromGraph() {
        if (fromGraphBuilder_ == null) {
          return fromGraph_ == null ? TideChart.TideChartGraph.getDefaultInstance() : fromGraph_;
        } else {
          return fromGraphBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      public Builder setFromGraph(TideChart.TideChartGraph value) {
        if (fromGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromGraph_ = value;
          onChanged();
        } else {
          fromGraphBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      public Builder setFromGraph(
          TideChart.TideChartGraph.Builder builderForValue) {
        if (fromGraphBuilder_ == null) {
          fromGraph_ = builderForValue.build();
          onChanged();
        } else {
          fromGraphBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      public Builder mergeFromGraph(TideChart.TideChartGraph value) {
        if (fromGraphBuilder_ == null) {
          if (fromGraph_ != null) {
            fromGraph_ =
              TideChart.TideChartGraph.newBuilder(fromGraph_).mergeFrom(value).buildPartial();
          } else {
            fromGraph_ = value;
          }
          onChanged();
        } else {
          fromGraphBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      public Builder clearFromGraph() {
        if (fromGraphBuilder_ == null) {
          fromGraph_ = null;
          onChanged();
        } else {
          fromGraph_ = null;
          fromGraphBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      public TideChart.TideChartGraph.Builder getFromGraphBuilder() {
        
        onChanged();
        return getFromGraphFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      public TideChart.TideChartGraphOrBuilder getFromGraphOrBuilder() {
        if (fromGraphBuilder_ != null) {
          return fromGraphBuilder_.getMessageOrBuilder();
        } else {
          return fromGraph_ == null ?
              TideChart.TideChartGraph.getDefaultInstance() : fromGraph_;
        }
      }
      /**
       * <pre>
       * previous versino of the graph
       * </pre>
       *
       * <code>.TideChartGraph fromGraph = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder> 
          getFromGraphFieldBuilder() {
        if (fromGraphBuilder_ == null) {
          fromGraphBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder>(
                  getFromGraph(),
                  getParentForChildren(),
                  isClean());
          fromGraph_ = null;
        }
        return fromGraphBuilder_;
      }

      private TideChart.TideChartGraph toGraph_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder> toGraphBuilder_;
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      public boolean hasToGraph() {
        return toGraphBuilder_ != null || toGraph_ != null;
      }
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      public TideChart.TideChartGraph getToGraph() {
        if (toGraphBuilder_ == null) {
          return toGraph_ == null ? TideChart.TideChartGraph.getDefaultInstance() : toGraph_;
        } else {
          return toGraphBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      public Builder setToGraph(TideChart.TideChartGraph value) {
        if (toGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toGraph_ = value;
          onChanged();
        } else {
          toGraphBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      public Builder setToGraph(
          TideChart.TideChartGraph.Builder builderForValue) {
        if (toGraphBuilder_ == null) {
          toGraph_ = builderForValue.build();
          onChanged();
        } else {
          toGraphBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      public Builder mergeToGraph(TideChart.TideChartGraph value) {
        if (toGraphBuilder_ == null) {
          if (toGraph_ != null) {
            toGraph_ =
              TideChart.TideChartGraph.newBuilder(toGraph_).mergeFrom(value).buildPartial();
          } else {
            toGraph_ = value;
          }
          onChanged();
        } else {
          toGraphBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      public Builder clearToGraph() {
        if (toGraphBuilder_ == null) {
          toGraph_ = null;
          onChanged();
        } else {
          toGraph_ = null;
          toGraphBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      public TideChart.TideChartGraph.Builder getToGraphBuilder() {
        
        onChanged();
        return getToGraphFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      public TideChart.TideChartGraphOrBuilder getToGraphOrBuilder() {
        if (toGraphBuilder_ != null) {
          return toGraphBuilder_.getMessageOrBuilder();
        } else {
          return toGraph_ == null ?
              TideChart.TideChartGraph.getDefaultInstance() : toGraph_;
        }
      }
      /**
       * <pre>
       * new version of the graph
       * </pre>
       *
       * <code>.TideChartGraph toGraph = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder> 
          getToGraphFieldBuilder() {
        if (toGraphBuilder_ == null) {
          toGraphBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder>(
                  getToGraph(),
                  getParentForChildren(),
                  isClean());
          toGraph_ = null;
        }
        return toGraphBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, update or remove    
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove    
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove    
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove    
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove    
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartGraphCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartGraphCommand)
    private static final TideChart.TideChartGraphCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartGraphCommand();
    }

    public static TideChart.TideChartGraphCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartGraphCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartGraphCommand>() {
      @java.lang.Override
      public TideChartGraphCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartGraphCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartGraphCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartGraphCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartGraphCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartPropertyCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartPropertyCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getFromPropsList();
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    TideChart.TideChartProperty getFromProps(int index);
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    int getFromPropsCount();
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getFromPropsOrBuilderList();
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    TideChart.TideChartPropertyOrBuilder getFromPropsOrBuilder(
        int index);

    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getToPropsList();
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    TideChart.TideChartProperty getToProps(int index);
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    int getToPropsCount();
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getToPropsOrBuilderList();
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    TideChart.TideChartPropertyOrBuilder getToPropsOrBuilder(
        int index);

    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * node reference (graph-id:node-name)
     * </pre>
     *
     * <code>string node = 5;</code>
     */
    java.lang.String getNode();
    /**
     * <pre>
     * node reference (graph-id:node-name)
     * </pre>
     *
     * <code>string node = 5;</code>
     */
    com.google.protobuf.ByteString
        getNodeBytes();

    /**
     * <pre>
     * region reference (graph-id:region-name)
     * </pre>
     *
     * <code>string region = 6;</code>
     */
    java.lang.String getRegion();
    /**
     * <pre>
     * region reference (graph-id:region-name)
     * </pre>
     *
     * <code>string region = 6;</code>
     */
    com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * widget reference (widget-id)
     * </pre>
     *
     * <code>string widget = 7;</code>
     */
    java.lang.String getWidget();
    /**
     * <pre>
     * widget reference (widget-id)
     * </pre>
     *
     * <code>string widget = 7;</code>
     */
    com.google.protobuf.ByteString
        getWidgetBytes();

    /**
     * <pre>
     * graph reference (graph-id)
     * </pre>
     *
     * <code>string graph = 8;</code>
     */
    java.lang.String getGraph();
    /**
     * <pre>
     * graph reference (graph-id)
     * </pre>
     *
     * <code>string graph = 8;</code>
     */
    com.google.protobuf.ByteString
        getGraphBytes();

    public TideChart.TideChartPropertyCommand.TargetCase getTargetCase();
  }
  /**
   * Protobuf type {@code TideChartPropertyCommand}
   */
  public  static final class TideChartPropertyCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartPropertyCommand)
      TideChartPropertyCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartPropertyCommand.newBuilder() to construct.
    private TideChartPropertyCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartPropertyCommand() {
      fromProps_ = java.util.Collections.emptyList();
      toProps_ = java.util.Collections.emptyList();
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartPropertyCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartPropertyCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fromProps_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000001;
              }
              fromProps_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                toProps_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000002;
              }
              toProps_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 5;
              target_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 6;
              target_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 7;
              target_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 8;
              target_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fromProps_ = java.util.Collections.unmodifiableList(fromProps_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          toProps_ = java.util.Collections.unmodifiableList(toProps_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartPropertyCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartPropertyCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartPropertyCommand.class, TideChart.TideChartPropertyCommand.Builder.class);
    }

    private int targetCase_ = 0;
    private java.lang.Object target_;
    public enum TargetCase
        implements com.google.protobuf.Internal.EnumLite {
      NODE(5),
      REGION(6),
      WIDGET(7),
      GRAPH(8),
      TARGET_NOT_SET(0);
      private final int value;
      private TargetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TargetCase valueOf(int value) {
        return forNumber(value);
      }

      public static TargetCase forNumber(int value) {
        switch (value) {
          case 5: return NODE;
          case 6: return REGION;
          case 7: return WIDGET;
          case 8: return GRAPH;
          case 0: return TARGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TargetCase
    getTargetCase() {
      return TargetCase.forNumber(
          targetCase_);
    }

    public static final int FROMPROPS_FIELD_NUMBER = 1;
    private java.util.List<TideChart.TideChartProperty> fromProps_;
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getFromPropsList() {
      return fromProps_;
    }
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getFromPropsOrBuilderList() {
      return fromProps_;
    }
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    public int getFromPropsCount() {
      return fromProps_.size();
    }
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    public TideChart.TideChartProperty getFromProps(int index) {
      return fromProps_.get(index);
    }
    /**
     * <pre>
     * previous values of the properties (only for included updates)
     * </pre>
     *
     * <code>repeated .TideChartProperty fromProps = 1;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getFromPropsOrBuilder(
        int index) {
      return fromProps_.get(index);
    }

    public static final int TOPROPS_FIELD_NUMBER = 2;
    private java.util.List<TideChart.TideChartProperty> toProps_;
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getToPropsList() {
      return toProps_;
    }
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getToPropsOrBuilderList() {
      return toProps_;
    }
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    public int getToPropsCount() {
      return toProps_.size();
    }
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    public TideChart.TideChartProperty getToProps(int index) {
      return toProps_.get(index);
    }
    /**
     * <pre>
     * new values of the properties (only include changes)
     * </pre>
     *
     * <code>repeated .TideChartProperty toProps = 2;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getToPropsOrBuilder(
        int index) {
      return toProps_.get(index);
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, update or remove
     * </pre>
     *
     * <code>string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_FIELD_NUMBER = 5;
    /**
     * <pre>
     * node reference (graph-id:node-name)
     * </pre>
     *
     * <code>string node = 5;</code>
     */
    public java.lang.String getNode() {
      java.lang.Object ref = "";
      if (targetCase_ == 5) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 5) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * node reference (graph-id:node-name)
     * </pre>
     *
     * <code>string node = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNodeBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 5) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 5) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REGION_FIELD_NUMBER = 6;
    /**
     * <pre>
     * region reference (graph-id:region-name)
     * </pre>
     *
     * <code>string region = 6;</code>
     */
    public java.lang.String getRegion() {
      java.lang.Object ref = "";
      if (targetCase_ == 6) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 6) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * region reference (graph-id:region-name)
     * </pre>
     *
     * <code>string region = 6;</code>
     */
    public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 6) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 6) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WIDGET_FIELD_NUMBER = 7;
    /**
     * <pre>
     * widget reference (widget-id)
     * </pre>
     *
     * <code>string widget = 7;</code>
     */
    public java.lang.String getWidget() {
      java.lang.Object ref = "";
      if (targetCase_ == 7) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 7) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * widget reference (widget-id)
     * </pre>
     *
     * <code>string widget = 7;</code>
     */
    public com.google.protobuf.ByteString
        getWidgetBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 7) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 7) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GRAPH_FIELD_NUMBER = 8;
    /**
     * <pre>
     * graph reference (graph-id)
     * </pre>
     *
     * <code>string graph = 8;</code>
     */
    public java.lang.String getGraph() {
      java.lang.Object ref = "";
      if (targetCase_ == 8) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 8) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * graph reference (graph-id)
     * </pre>
     *
     * <code>string graph = 8;</code>
     */
    public com.google.protobuf.ByteString
        getGraphBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 8) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 8) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fromProps_.size(); i++) {
        output.writeMessage(1, fromProps_.get(i));
      }
      for (int i = 0; i < toProps_.size(); i++) {
        output.writeMessage(2, toProps_.get(i));
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
      }
      if (targetCase_ == 5) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, target_);
      }
      if (targetCase_ == 6) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, target_);
      }
      if (targetCase_ == 7) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, target_);
      }
      if (targetCase_ == 8) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, target_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fromProps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fromProps_.get(i));
      }
      for (int i = 0; i < toProps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, toProps_.get(i));
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
      }
      if (targetCase_ == 5) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, target_);
      }
      if (targetCase_ == 6) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, target_);
      }
      if (targetCase_ == 7) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, target_);
      }
      if (targetCase_ == 8) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, target_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartPropertyCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartPropertyCommand other = (TideChart.TideChartPropertyCommand) obj;

      if (!getFromPropsList()
          .equals(other.getFromPropsList())) return false;
      if (!getToPropsList()
          .equals(other.getToPropsList())) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!getTargetCase().equals(other.getTargetCase())) return false;
      switch (targetCase_) {
        case 5:
          if (!getNode()
              .equals(other.getNode())) return false;
          break;
        case 6:
          if (!getRegion()
              .equals(other.getRegion())) return false;
          break;
        case 7:
          if (!getWidget()
              .equals(other.getWidget())) return false;
          break;
        case 8:
          if (!getGraph()
              .equals(other.getGraph())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFromPropsCount() > 0) {
        hash = (37 * hash) + FROMPROPS_FIELD_NUMBER;
        hash = (53 * hash) + getFromPropsList().hashCode();
      }
      if (getToPropsCount() > 0) {
        hash = (37 * hash) + TOPROPS_FIELD_NUMBER;
        hash = (53 * hash) + getToPropsList().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      switch (targetCase_) {
        case 5:
          hash = (37 * hash) + NODE_FIELD_NUMBER;
          hash = (53 * hash) + getNode().hashCode();
          break;
        case 6:
          hash = (37 * hash) + REGION_FIELD_NUMBER;
          hash = (53 * hash) + getRegion().hashCode();
          break;
        case 7:
          hash = (37 * hash) + WIDGET_FIELD_NUMBER;
          hash = (53 * hash) + getWidget().hashCode();
          break;
        case 8:
          hash = (37 * hash) + GRAPH_FIELD_NUMBER;
          hash = (53 * hash) + getGraph().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartPropertyCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartPropertyCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPropertyCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartPropertyCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartPropertyCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartPropertyCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartPropertyCommand)
        TideChart.TideChartPropertyCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartPropertyCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartPropertyCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartPropertyCommand.class, TideChart.TideChartPropertyCommand.Builder.class);
      }

      // Construct using TideChart.TideChartPropertyCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFromPropsFieldBuilder();
          getToPropsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromPropsBuilder_ == null) {
          fromProps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fromPropsBuilder_.clear();
        }
        if (toPropsBuilder_ == null) {
          toProps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          toPropsBuilder_.clear();
        }
        type_ = "";

        targetCase_ = 0;
        target_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartPropertyCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartPropertyCommand getDefaultInstanceForType() {
        return TideChart.TideChartPropertyCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartPropertyCommand build() {
        TideChart.TideChartPropertyCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartPropertyCommand buildPartial() {
        TideChart.TideChartPropertyCommand result = new TideChart.TideChartPropertyCommand(this);
        int from_bitField0_ = bitField0_;
        if (fromPropsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fromProps_ = java.util.Collections.unmodifiableList(fromProps_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fromProps_ = fromProps_;
        } else {
          result.fromProps_ = fromPropsBuilder_.build();
        }
        if (toPropsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            toProps_ = java.util.Collections.unmodifiableList(toProps_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.toProps_ = toProps_;
        } else {
          result.toProps_ = toPropsBuilder_.build();
        }
        result.type_ = type_;
        if (targetCase_ == 5) {
          result.target_ = target_;
        }
        if (targetCase_ == 6) {
          result.target_ = target_;
        }
        if (targetCase_ == 7) {
          result.target_ = target_;
        }
        if (targetCase_ == 8) {
          result.target_ = target_;
        }
        result.targetCase_ = targetCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartPropertyCommand) {
          return mergeFrom((TideChart.TideChartPropertyCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartPropertyCommand other) {
        if (other == TideChart.TideChartPropertyCommand.getDefaultInstance()) return this;
        if (fromPropsBuilder_ == null) {
          if (!other.fromProps_.isEmpty()) {
            if (fromProps_.isEmpty()) {
              fromProps_ = other.fromProps_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFromPropsIsMutable();
              fromProps_.addAll(other.fromProps_);
            }
            onChanged();
          }
        } else {
          if (!other.fromProps_.isEmpty()) {
            if (fromPropsBuilder_.isEmpty()) {
              fromPropsBuilder_.dispose();
              fromPropsBuilder_ = null;
              fromProps_ = other.fromProps_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fromPropsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFromPropsFieldBuilder() : null;
            } else {
              fromPropsBuilder_.addAllMessages(other.fromProps_);
            }
          }
        }
        if (toPropsBuilder_ == null) {
          if (!other.toProps_.isEmpty()) {
            if (toProps_.isEmpty()) {
              toProps_ = other.toProps_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureToPropsIsMutable();
              toProps_.addAll(other.toProps_);
            }
            onChanged();
          }
        } else {
          if (!other.toProps_.isEmpty()) {
            if (toPropsBuilder_.isEmpty()) {
              toPropsBuilder_.dispose();
              toPropsBuilder_ = null;
              toProps_ = other.toProps_;
              bitField0_ = (bitField0_ & ~0x00000002);
              toPropsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getToPropsFieldBuilder() : null;
            } else {
              toPropsBuilder_.addAllMessages(other.toProps_);
            }
          }
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        switch (other.getTargetCase()) {
          case NODE: {
            targetCase_ = 5;
            target_ = other.target_;
            onChanged();
            break;
          }
          case REGION: {
            targetCase_ = 6;
            target_ = other.target_;
            onChanged();
            break;
          }
          case WIDGET: {
            targetCase_ = 7;
            target_ = other.target_;
            onChanged();
            break;
          }
          case GRAPH: {
            targetCase_ = 8;
            target_ = other.target_;
            onChanged();
            break;
          }
          case TARGET_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartPropertyCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartPropertyCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int targetCase_ = 0;
      private java.lang.Object target_;
      public TargetCase
          getTargetCase() {
        return TargetCase.forNumber(
            targetCase_);
      }

      public Builder clearTarget() {
        targetCase_ = 0;
        target_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.util.List<TideChart.TideChartProperty> fromProps_ =
        java.util.Collections.emptyList();
      private void ensureFromPropsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fromProps_ = new java.util.ArrayList<TideChart.TideChartProperty>(fromProps_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> fromPropsBuilder_;

      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getFromPropsList() {
        if (fromPropsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fromProps_);
        } else {
          return fromPropsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public int getFromPropsCount() {
        if (fromPropsBuilder_ == null) {
          return fromProps_.size();
        } else {
          return fromPropsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public TideChart.TideChartProperty getFromProps(int index) {
        if (fromPropsBuilder_ == null) {
          return fromProps_.get(index);
        } else {
          return fromPropsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder setFromProps(
          int index, TideChart.TideChartProperty value) {
        if (fromPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFromPropsIsMutable();
          fromProps_.set(index, value);
          onChanged();
        } else {
          fromPropsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder setFromProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (fromPropsBuilder_ == null) {
          ensureFromPropsIsMutable();
          fromProps_.set(index, builderForValue.build());
          onChanged();
        } else {
          fromPropsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder addFromProps(TideChart.TideChartProperty value) {
        if (fromPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFromPropsIsMutable();
          fromProps_.add(value);
          onChanged();
        } else {
          fromPropsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder addFromProps(
          int index, TideChart.TideChartProperty value) {
        if (fromPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFromPropsIsMutable();
          fromProps_.add(index, value);
          onChanged();
        } else {
          fromPropsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder addFromProps(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (fromPropsBuilder_ == null) {
          ensureFromPropsIsMutable();
          fromProps_.add(builderForValue.build());
          onChanged();
        } else {
          fromPropsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder addFromProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (fromPropsBuilder_ == null) {
          ensureFromPropsIsMutable();
          fromProps_.add(index, builderForValue.build());
          onChanged();
        } else {
          fromPropsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder addAllFromProps(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (fromPropsBuilder_ == null) {
          ensureFromPropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fromProps_);
          onChanged();
        } else {
          fromPropsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder clearFromProps() {
        if (fromPropsBuilder_ == null) {
          fromProps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fromPropsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public Builder removeFromProps(int index) {
        if (fromPropsBuilder_ == null) {
          ensureFromPropsIsMutable();
          fromProps_.remove(index);
          onChanged();
        } else {
          fromPropsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public TideChart.TideChartProperty.Builder getFromPropsBuilder(
          int index) {
        return getFromPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getFromPropsOrBuilder(
          int index) {
        if (fromPropsBuilder_ == null) {
          return fromProps_.get(index);  } else {
          return fromPropsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getFromPropsOrBuilderList() {
        if (fromPropsBuilder_ != null) {
          return fromPropsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fromProps_);
        }
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public TideChart.TideChartProperty.Builder addFromPropsBuilder() {
        return getFromPropsFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public TideChart.TideChartProperty.Builder addFromPropsBuilder(
          int index) {
        return getFromPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * previous values of the properties (only for included updates)
       * </pre>
       *
       * <code>repeated .TideChartProperty fromProps = 1;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getFromPropsBuilderList() {
        return getFromPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getFromPropsFieldBuilder() {
        if (fromPropsBuilder_ == null) {
          fromPropsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  fromProps_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fromProps_ = null;
        }
        return fromPropsBuilder_;
      }

      private java.util.List<TideChart.TideChartProperty> toProps_ =
        java.util.Collections.emptyList();
      private void ensureToPropsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          toProps_ = new java.util.ArrayList<TideChart.TideChartProperty>(toProps_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> toPropsBuilder_;

      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getToPropsList() {
        if (toPropsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(toProps_);
        } else {
          return toPropsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public int getToPropsCount() {
        if (toPropsBuilder_ == null) {
          return toProps_.size();
        } else {
          return toPropsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public TideChart.TideChartProperty getToProps(int index) {
        if (toPropsBuilder_ == null) {
          return toProps_.get(index);
        } else {
          return toPropsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder setToProps(
          int index, TideChart.TideChartProperty value) {
        if (toPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureToPropsIsMutable();
          toProps_.set(index, value);
          onChanged();
        } else {
          toPropsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder setToProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (toPropsBuilder_ == null) {
          ensureToPropsIsMutable();
          toProps_.set(index, builderForValue.build());
          onChanged();
        } else {
          toPropsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder addToProps(TideChart.TideChartProperty value) {
        if (toPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureToPropsIsMutable();
          toProps_.add(value);
          onChanged();
        } else {
          toPropsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder addToProps(
          int index, TideChart.TideChartProperty value) {
        if (toPropsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureToPropsIsMutable();
          toProps_.add(index, value);
          onChanged();
        } else {
          toPropsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder addToProps(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (toPropsBuilder_ == null) {
          ensureToPropsIsMutable();
          toProps_.add(builderForValue.build());
          onChanged();
        } else {
          toPropsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder addToProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (toPropsBuilder_ == null) {
          ensureToPropsIsMutable();
          toProps_.add(index, builderForValue.build());
          onChanged();
        } else {
          toPropsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder addAllToProps(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (toPropsBuilder_ == null) {
          ensureToPropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, toProps_);
          onChanged();
        } else {
          toPropsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder clearToProps() {
        if (toPropsBuilder_ == null) {
          toProps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          toPropsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public Builder removeToProps(int index) {
        if (toPropsBuilder_ == null) {
          ensureToPropsIsMutable();
          toProps_.remove(index);
          onChanged();
        } else {
          toPropsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public TideChart.TideChartProperty.Builder getToPropsBuilder(
          int index) {
        return getToPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getToPropsOrBuilder(
          int index) {
        if (toPropsBuilder_ == null) {
          return toProps_.get(index);  } else {
          return toPropsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getToPropsOrBuilderList() {
        if (toPropsBuilder_ != null) {
          return toPropsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(toProps_);
        }
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public TideChart.TideChartProperty.Builder addToPropsBuilder() {
        return getToPropsFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public TideChart.TideChartProperty.Builder addToPropsBuilder(
          int index) {
        return getToPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * new values of the properties (only include changes)
       * </pre>
       *
       * <code>repeated .TideChartProperty toProps = 2;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getToPropsBuilderList() {
        return getToPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getToPropsFieldBuilder() {
        if (toPropsBuilder_ == null) {
          toPropsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  toProps_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          toProps_ = null;
        }
        return toPropsBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, update or remove
       * </pre>
       *
       * <code>string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * node reference (graph-id:node-name)
       * </pre>
       *
       * <code>string node = 5;</code>
       */
      public java.lang.String getNode() {
        java.lang.Object ref = "";
        if (targetCase_ == 5) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 5) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * node reference (graph-id:node-name)
       * </pre>
       *
       * <code>string node = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNodeBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 5) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 5) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * node reference (graph-id:node-name)
       * </pre>
       *
       * <code>string node = 5;</code>
       */
      public Builder setNode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 5;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * node reference (graph-id:node-name)
       * </pre>
       *
       * <code>string node = 5;</code>
       */
      public Builder clearNode() {
        if (targetCase_ == 5) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * node reference (graph-id:node-name)
       * </pre>
       *
       * <code>string node = 5;</code>
       */
      public Builder setNodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 5;
        target_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * region reference (graph-id:region-name)
       * </pre>
       *
       * <code>string region = 6;</code>
       */
      public java.lang.String getRegion() {
        java.lang.Object ref = "";
        if (targetCase_ == 6) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 6) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * region reference (graph-id:region-name)
       * </pre>
       *
       * <code>string region = 6;</code>
       */
      public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 6) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 6) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * region reference (graph-id:region-name)
       * </pre>
       *
       * <code>string region = 6;</code>
       */
      public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 6;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * region reference (graph-id:region-name)
       * </pre>
       *
       * <code>string region = 6;</code>
       */
      public Builder clearRegion() {
        if (targetCase_ == 6) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * region reference (graph-id:region-name)
       * </pre>
       *
       * <code>string region = 6;</code>
       */
      public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 6;
        target_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * widget reference (widget-id)
       * </pre>
       *
       * <code>string widget = 7;</code>
       */
      public java.lang.String getWidget() {
        java.lang.Object ref = "";
        if (targetCase_ == 7) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 7) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * widget reference (widget-id)
       * </pre>
       *
       * <code>string widget = 7;</code>
       */
      public com.google.protobuf.ByteString
          getWidgetBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 7) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 7) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * widget reference (widget-id)
       * </pre>
       *
       * <code>string widget = 7;</code>
       */
      public Builder setWidget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 7;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * widget reference (widget-id)
       * </pre>
       *
       * <code>string widget = 7;</code>
       */
      public Builder clearWidget() {
        if (targetCase_ == 7) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * widget reference (widget-id)
       * </pre>
       *
       * <code>string widget = 7;</code>
       */
      public Builder setWidgetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 7;
        target_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * graph reference (graph-id)
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public java.lang.String getGraph() {
        java.lang.Object ref = "";
        if (targetCase_ == 8) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 8) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * graph reference (graph-id)
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public com.google.protobuf.ByteString
          getGraphBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 8) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 8) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * graph reference (graph-id)
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public Builder setGraph(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 8;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * graph reference (graph-id)
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public Builder clearGraph() {
        if (targetCase_ == 8) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * graph reference (graph-id)
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public Builder setGraphBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 8;
        target_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartPropertyCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartPropertyCommand)
    private static final TideChart.TideChartPropertyCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartPropertyCommand();
    }

    public static TideChart.TideChartPropertyCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartPropertyCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartPropertyCommand>() {
      @java.lang.Override
      public TideChartPropertyCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartPropertyCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartPropertyCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartPropertyCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartPropertyCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartNoteCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartNoteCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    java.util.List<TideChart.TideChartNote> 
        getNotesList();
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    TideChart.TideChartNote getNotes(int index);
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    int getNotesCount();
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList();
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index);

    /**
     * <pre>
     * type of update: add, remove
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of update: add, remove
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * node reference (node-name)
     * </pre>
     *
     * <code>string node = 3;</code>
     */
    java.lang.String getNode();
    /**
     * <pre>
     * node reference (node-name)
     * </pre>
     *
     * <code>string node = 3;</code>
     */
    com.google.protobuf.ByteString
        getNodeBytes();

    /**
     * <pre>
     * region reference (region-name)
     * </pre>
     *
     * <code>string region = 4;</code>
     */
    java.lang.String getRegion();
    /**
     * <pre>
     * region reference (region-name)
     * </pre>
     *
     * <code>string region = 4;</code>
     */
    com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * graph reference (graph-name)
     * </pre>
     *
     * <code>string graph = 5;</code>
     */
    java.lang.String getGraph();
    /**
     * <pre>
     * graph reference (graph-name)
     * </pre>
     *
     * <code>string graph = 5;</code>
     */
    com.google.protobuf.ByteString
        getGraphBytes();

    public TideChart.TideChartNoteCommand.TargetCase getTargetCase();
  }
  /**
   * Protobuf type {@code TideChartNoteCommand}
   */
  public  static final class TideChartNoteCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartNoteCommand)
      TideChartNoteCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartNoteCommand.newBuilder() to construct.
    private TideChartNoteCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartNoteCommand() {
      notes_ = java.util.Collections.emptyList();
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartNoteCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartNoteCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                notes_ = new java.util.ArrayList<TideChart.TideChartNote>();
                mutable_bitField0_ |= 0x00000001;
              }
              notes_.add(
                  input.readMessage(TideChart.TideChartNote.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 3;
              target_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 4;
              target_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              targetCase_ = 5;
              target_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          notes_ = java.util.Collections.unmodifiableList(notes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartNoteCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartNoteCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartNoteCommand.class, TideChart.TideChartNoteCommand.Builder.class);
    }

    private int targetCase_ = 0;
    private java.lang.Object target_;
    public enum TargetCase
        implements com.google.protobuf.Internal.EnumLite {
      NODE(3),
      REGION(4),
      GRAPH(5),
      TARGET_NOT_SET(0);
      private final int value;
      private TargetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TargetCase valueOf(int value) {
        return forNumber(value);
      }

      public static TargetCase forNumber(int value) {
        switch (value) {
          case 3: return NODE;
          case 4: return REGION;
          case 5: return GRAPH;
          case 0: return TARGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TargetCase
    getTargetCase() {
      return TargetCase.forNumber(
          targetCase_);
    }

    public static final int NOTES_FIELD_NUMBER = 1;
    private java.util.List<TideChart.TideChartNote> notes_;
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    public java.util.List<TideChart.TideChartNote> getNotesList() {
      return notes_;
    }
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList() {
      return notes_;
    }
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    public int getNotesCount() {
      return notes_.size();
    }
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    public TideChart.TideChartNote getNotes(int index) {
      return notes_.get(index);
    }
    /**
     * <pre>
     * a set of notes being added or removed
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 1;</code>
     */
    public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index) {
      return notes_.get(index);
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of update: add, remove
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of update: add, remove
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * node reference (node-name)
     * </pre>
     *
     * <code>string node = 3;</code>
     */
    public java.lang.String getNode() {
      java.lang.Object ref = "";
      if (targetCase_ == 3) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 3) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * node reference (node-name)
     * </pre>
     *
     * <code>string node = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNodeBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 3) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 3) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REGION_FIELD_NUMBER = 4;
    /**
     * <pre>
     * region reference (region-name)
     * </pre>
     *
     * <code>string region = 4;</code>
     */
    public java.lang.String getRegion() {
      java.lang.Object ref = "";
      if (targetCase_ == 4) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 4) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * region reference (region-name)
     * </pre>
     *
     * <code>string region = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 4) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 4) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GRAPH_FIELD_NUMBER = 5;
    /**
     * <pre>
     * graph reference (graph-name)
     * </pre>
     *
     * <code>string graph = 5;</code>
     */
    public java.lang.String getGraph() {
      java.lang.Object ref = "";
      if (targetCase_ == 5) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (targetCase_ == 5) {
          target_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * graph reference (graph-name)
     * </pre>
     *
     * <code>string graph = 5;</code>
     */
    public com.google.protobuf.ByteString
        getGraphBytes() {
      java.lang.Object ref = "";
      if (targetCase_ == 5) {
        ref = target_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (targetCase_ == 5) {
          target_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < notes_.size(); i++) {
        output.writeMessage(1, notes_.get(i));
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (targetCase_ == 3) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, target_);
      }
      if (targetCase_ == 4) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, target_);
      }
      if (targetCase_ == 5) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, target_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < notes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, notes_.get(i));
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (targetCase_ == 3) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, target_);
      }
      if (targetCase_ == 4) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, target_);
      }
      if (targetCase_ == 5) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, target_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartNoteCommand)) {
        return super.equals(obj);
      }
      TideChart.TideChartNoteCommand other = (TideChart.TideChartNoteCommand) obj;

      if (!getNotesList()
          .equals(other.getNotesList())) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!getTargetCase().equals(other.getTargetCase())) return false;
      switch (targetCase_) {
        case 3:
          if (!getNode()
              .equals(other.getNode())) return false;
          break;
        case 4:
          if (!getRegion()
              .equals(other.getRegion())) return false;
          break;
        case 5:
          if (!getGraph()
              .equals(other.getGraph())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNotesCount() > 0) {
        hash = (37 * hash) + NOTES_FIELD_NUMBER;
        hash = (53 * hash) + getNotesList().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      switch (targetCase_) {
        case 3:
          hash = (37 * hash) + NODE_FIELD_NUMBER;
          hash = (53 * hash) + getNode().hashCode();
          break;
        case 4:
          hash = (37 * hash) + REGION_FIELD_NUMBER;
          hash = (53 * hash) + getRegion().hashCode();
          break;
        case 5:
          hash = (37 * hash) + GRAPH_FIELD_NUMBER;
          hash = (53 * hash) + getGraph().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartNoteCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNoteCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNoteCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNoteCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNoteCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartNoteCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartNoteCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNoteCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartNoteCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNoteCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartNoteCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartNoteCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartNoteCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartNoteCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartNoteCommand)
        TideChart.TideChartNoteCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartNoteCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartNoteCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartNoteCommand.class, TideChart.TideChartNoteCommand.Builder.class);
      }

      // Construct using TideChart.TideChartNoteCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNotesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          notesBuilder_.clear();
        }
        type_ = "";

        targetCase_ = 0;
        target_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartNoteCommand_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartNoteCommand getDefaultInstanceForType() {
        return TideChart.TideChartNoteCommand.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartNoteCommand build() {
        TideChart.TideChartNoteCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartNoteCommand buildPartial() {
        TideChart.TideChartNoteCommand result = new TideChart.TideChartNoteCommand(this);
        int from_bitField0_ = bitField0_;
        if (notesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            notes_ = java.util.Collections.unmodifiableList(notes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.notes_ = notes_;
        } else {
          result.notes_ = notesBuilder_.build();
        }
        result.type_ = type_;
        if (targetCase_ == 3) {
          result.target_ = target_;
        }
        if (targetCase_ == 4) {
          result.target_ = target_;
        }
        if (targetCase_ == 5) {
          result.target_ = target_;
        }
        result.targetCase_ = targetCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartNoteCommand) {
          return mergeFrom((TideChart.TideChartNoteCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartNoteCommand other) {
        if (other == TideChart.TideChartNoteCommand.getDefaultInstance()) return this;
        if (notesBuilder_ == null) {
          if (!other.notes_.isEmpty()) {
            if (notes_.isEmpty()) {
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNotesIsMutable();
              notes_.addAll(other.notes_);
            }
            onChanged();
          }
        } else {
          if (!other.notes_.isEmpty()) {
            if (notesBuilder_.isEmpty()) {
              notesBuilder_.dispose();
              notesBuilder_ = null;
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              notesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNotesFieldBuilder() : null;
            } else {
              notesBuilder_.addAllMessages(other.notes_);
            }
          }
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        switch (other.getTargetCase()) {
          case NODE: {
            targetCase_ = 3;
            target_ = other.target_;
            onChanged();
            break;
          }
          case REGION: {
            targetCase_ = 4;
            target_ = other.target_;
            onChanged();
            break;
          }
          case GRAPH: {
            targetCase_ = 5;
            target_ = other.target_;
            onChanged();
            break;
          }
          case TARGET_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartNoteCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartNoteCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int targetCase_ = 0;
      private java.lang.Object target_;
      public TargetCase
          getTargetCase() {
        return TargetCase.forNumber(
            targetCase_);
      }

      public Builder clearTarget() {
        targetCase_ = 0;
        target_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.util.List<TideChart.TideChartNote> notes_ =
        java.util.Collections.emptyList();
      private void ensureNotesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          notes_ = new java.util.ArrayList<TideChart.TideChartNote>(notes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> notesBuilder_;

      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public java.util.List<TideChart.TideChartNote> getNotesList() {
        if (notesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(notes_);
        } else {
          return notesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public int getNotesCount() {
        if (notesBuilder_ == null) {
          return notes_.size();
        } else {
          return notesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public TideChart.TideChartNote getNotes(int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);
        } else {
          return notesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.set(index, value);
          onChanged();
        } else {
          notesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.set(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder addNotes(TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(value);
          onChanged();
        } else {
          notesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(index, value);
          onChanged();
        } else {
          notesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder addNotes(
          TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder addAllNotes(
          java.lang.Iterable<? extends TideChart.TideChartNote> values) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, notes_);
          onChanged();
        } else {
          notesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder clearNotes() {
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          notesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public Builder removeNotes(int index) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.remove(index);
          onChanged();
        } else {
          notesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public TideChart.TideChartNote.Builder getNotesBuilder(
          int index) {
        return getNotesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
          int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);  } else {
          return notesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
           getNotesOrBuilderList() {
        if (notesBuilder_ != null) {
          return notesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(notes_);
        }
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder() {
        return getNotesFieldBuilder().addBuilder(
            TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder(
          int index) {
        return getNotesFieldBuilder().addBuilder(
            index, TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * a set of notes being added or removed
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 1;</code>
       */
      public java.util.List<TideChart.TideChartNote.Builder> 
           getNotesBuilderList() {
        return getNotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> 
          getNotesFieldBuilder() {
        if (notesBuilder_ == null) {
          notesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder>(
                  notes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          notes_ = null;
        }
        return notesBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of update: add, remove
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, remove
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of update: add, remove
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, remove
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of update: add, remove
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * node reference (node-name)
       * </pre>
       *
       * <code>string node = 3;</code>
       */
      public java.lang.String getNode() {
        java.lang.Object ref = "";
        if (targetCase_ == 3) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 3) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * node reference (node-name)
       * </pre>
       *
       * <code>string node = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNodeBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 3) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 3) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * node reference (node-name)
       * </pre>
       *
       * <code>string node = 3;</code>
       */
      public Builder setNode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 3;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * node reference (node-name)
       * </pre>
       *
       * <code>string node = 3;</code>
       */
      public Builder clearNode() {
        if (targetCase_ == 3) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * node reference (node-name)
       * </pre>
       *
       * <code>string node = 3;</code>
       */
      public Builder setNodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 3;
        target_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * region reference (region-name)
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public java.lang.String getRegion() {
        java.lang.Object ref = "";
        if (targetCase_ == 4) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 4) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * region reference (region-name)
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 4) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 4) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * region reference (region-name)
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 4;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * region reference (region-name)
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public Builder clearRegion() {
        if (targetCase_ == 4) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * region reference (region-name)
       * </pre>
       *
       * <code>string region = 4;</code>
       */
      public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 4;
        target_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * graph reference (graph-name)
       * </pre>
       *
       * <code>string graph = 5;</code>
       */
      public java.lang.String getGraph() {
        java.lang.Object ref = "";
        if (targetCase_ == 5) {
          ref = target_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 5) {
            target_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * graph reference (graph-name)
       * </pre>
       *
       * <code>string graph = 5;</code>
       */
      public com.google.protobuf.ByteString
          getGraphBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 5) {
          ref = target_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 5) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * graph reference (graph-name)
       * </pre>
       *
       * <code>string graph = 5;</code>
       */
      public Builder setGraph(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 5;
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * graph reference (graph-name)
       * </pre>
       *
       * <code>string graph = 5;</code>
       */
      public Builder clearGraph() {
        if (targetCase_ == 5) {
          targetCase_ = 0;
          target_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * graph reference (graph-name)
       * </pre>
       *
       * <code>string graph = 5;</code>
       */
      public Builder setGraphBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        targetCase_ = 5;
        target_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartNoteCommand)
    }

    // @@protoc_insertion_point(class_scope:TideChartNoteCommand)
    private static final TideChart.TideChartNoteCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartNoteCommand();
    }

    public static TideChart.TideChartNoteCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartNoteCommand>
        PARSER = new com.google.protobuf.AbstractParser<TideChartNoteCommand>() {
      @java.lang.Override
      public TideChartNoteCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartNoteCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartNoteCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartNoteCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartNoteCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartMethodOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartMethod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for the method definition
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for the method definition
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * name of the method (unique to the library)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * name of the method (unique to the library)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * method extends (customizes) the implementation of another method
     * </pre>
     *
     * <code>string extends = 3;</code>
     */
    java.lang.String getExtends();
    /**
     * <pre>
     * method extends (customizes) the implementation of another method
     * </pre>
     *
     * <code>string extends = 3;</code>
     */
    com.google.protobuf.ByteString
        getExtendsBytes();

    /**
     * <pre>
     * custom script that implements the node action for this method
     * </pre>
     *
     * <code>string script = 4;</code>
     */
    java.lang.String getScript();
    /**
     * <pre>
     * custom script that implements the node action for this method
     * </pre>
     *
     * <code>string script = 4;</code>
     */
    com.google.protobuf.ByteString
        getScriptBytes();

    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    java.util.List<TideChart.TideChartPort> 
        getInportsList();
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    TideChart.TideChartPort getInports(int index);
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    int getInportsCount();
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getInportsOrBuilderList();
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    TideChart.TideChartPortOrBuilder getInportsOrBuilder(
        int index);

    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    java.util.List<TideChart.TideChartPort> 
        getOutportsList();
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    TideChart.TideChartPort getOutports(int index);
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    int getOutportsCount();
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getOutportsOrBuilderList();
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    TideChart.TideChartPortOrBuilder getOutportsOrBuilder(
        int index);

    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    java.util.List<TideChart.TideChartPort> 
        getPropsList();
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    TideChart.TideChartPort getProps(int index);
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getPropsOrBuilderList();
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    TideChart.TideChartPortOrBuilder getPropsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TideChartMethod}
   */
  public  static final class TideChartMethod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartMethod)
      TideChartMethodOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartMethod.newBuilder() to construct.
    private TideChartMethod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartMethod() {
      id_ = "";
      name_ = "";
      extends_ = "";
      script_ = "";
      inports_ = java.util.Collections.emptyList();
      outports_ = java.util.Collections.emptyList();
      props_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartMethod();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartMethod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              extends_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              script_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                inports_ = new java.util.ArrayList<TideChart.TideChartPort>();
                mutable_bitField0_ |= 0x00000001;
              }
              inports_.add(
                  input.readMessage(TideChart.TideChartPort.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                outports_ = new java.util.ArrayList<TideChart.TideChartPort>();
                mutable_bitField0_ |= 0x00000002;
              }
              outports_.add(
                  input.readMessage(TideChart.TideChartPort.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                props_ = new java.util.ArrayList<TideChart.TideChartPort>();
                mutable_bitField0_ |= 0x00000004;
              }
              props_.add(
                  input.readMessage(TideChart.TideChartPort.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          inports_ = java.util.Collections.unmodifiableList(inports_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          outports_ = java.util.Collections.unmodifiableList(outports_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartMethod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartMethod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartMethod.class, TideChart.TideChartMethod.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for the method definition
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for the method definition
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name of the method (unique to the library)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name of the method (unique to the library)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTENDS_FIELD_NUMBER = 3;
    private volatile java.lang.Object extends_;
    /**
     * <pre>
     * method extends (customizes) the implementation of another method
     * </pre>
     *
     * <code>string extends = 3;</code>
     */
    public java.lang.String getExtends() {
      java.lang.Object ref = extends_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        extends_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * method extends (customizes) the implementation of another method
     * </pre>
     *
     * <code>string extends = 3;</code>
     */
    public com.google.protobuf.ByteString
        getExtendsBytes() {
      java.lang.Object ref = extends_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        extends_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCRIPT_FIELD_NUMBER = 4;
    private volatile java.lang.Object script_;
    /**
     * <pre>
     * custom script that implements the node action for this method
     * </pre>
     *
     * <code>string script = 4;</code>
     */
    public java.lang.String getScript() {
      java.lang.Object ref = script_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        script_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * custom script that implements the node action for this method
     * </pre>
     *
     * <code>string script = 4;</code>
     */
    public com.google.protobuf.ByteString
        getScriptBytes() {
      java.lang.Object ref = script_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        script_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INPORTS_FIELD_NUMBER = 5;
    private java.util.List<TideChart.TideChartPort> inports_;
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    public java.util.List<TideChart.TideChartPort> getInportsList() {
      return inports_;
    }
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getInportsOrBuilderList() {
      return inports_;
    }
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    public int getInportsCount() {
      return inports_.size();
    }
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    public TideChart.TideChartPort getInports(int index) {
      return inports_.get(index);
    }
    /**
     * <pre>
     * definition of inports for this method
     * </pre>
     *
     * <code>repeated .TideChartPort inports = 5;</code>
     */
    public TideChart.TideChartPortOrBuilder getInportsOrBuilder(
        int index) {
      return inports_.get(index);
    }

    public static final int OUTPORTS_FIELD_NUMBER = 6;
    private java.util.List<TideChart.TideChartPort> outports_;
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    public java.util.List<TideChart.TideChartPort> getOutportsList() {
      return outports_;
    }
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getOutportsOrBuilderList() {
      return outports_;
    }
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    public int getOutportsCount() {
      return outports_.size();
    }
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    public TideChart.TideChartPort getOutports(int index) {
      return outports_.get(index);
    }
    /**
     * <pre>
     * definition of outports for this methid
     * </pre>
     *
     * <code>repeated .TideChartPort outports = 6;</code>
     */
    public TideChart.TideChartPortOrBuilder getOutportsOrBuilder(
        int index) {
      return outports_.get(index);
    }

    public static final int PROPS_FIELD_NUMBER = 7;
    private java.util.List<TideChart.TideChartPort> props_;
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    public java.util.List<TideChart.TideChartPort> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    public TideChart.TideChartPort getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     * definition of property values used by the method (uses port definition format)
     * </pre>
     *
     * <code>repeated .TideChartPort props = 7;</code>
     */
    public TideChart.TideChartPortOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getExtendsBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, extends_);
      }
      if (!getScriptBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, script_);
      }
      for (int i = 0; i < inports_.size(); i++) {
        output.writeMessage(5, inports_.get(i));
      }
      for (int i = 0; i < outports_.size(); i++) {
        output.writeMessage(6, outports_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(7, props_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getExtendsBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, extends_);
      }
      if (!getScriptBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, script_);
      }
      for (int i = 0; i < inports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, inports_.get(i));
      }
      for (int i = 0; i < outports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, outports_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, props_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartMethod)) {
        return super.equals(obj);
      }
      TideChart.TideChartMethod other = (TideChart.TideChartMethod) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getExtends()
          .equals(other.getExtends())) return false;
      if (!getScript()
          .equals(other.getScript())) return false;
      if (!getInportsList()
          .equals(other.getInportsList())) return false;
      if (!getOutportsList()
          .equals(other.getOutportsList())) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + EXTENDS_FIELD_NUMBER;
      hash = (53 * hash) + getExtends().hashCode();
      hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getScript().hashCode();
      if (getInportsCount() > 0) {
        hash = (37 * hash) + INPORTS_FIELD_NUMBER;
        hash = (53 * hash) + getInportsList().hashCode();
      }
      if (getOutportsCount() > 0) {
        hash = (37 * hash) + OUTPORTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutportsList().hashCode();
      }
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartMethod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMethod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMethod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMethod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMethod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMethod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMethod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMethod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartMethod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMethod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartMethod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMethod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartMethod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartMethod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartMethod)
        TideChart.TideChartMethodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartMethod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartMethod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartMethod.class, TideChart.TideChartMethod.Builder.class);
      }

      // Construct using TideChart.TideChartMethod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInportsFieldBuilder();
          getOutportsFieldBuilder();
          getPropsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        extends_ = "";

        script_ = "";

        if (inportsBuilder_ == null) {
          inports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          inportsBuilder_.clear();
        }
        if (outportsBuilder_ == null) {
          outports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          outportsBuilder_.clear();
        }
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          propsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartMethod_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartMethod getDefaultInstanceForType() {
        return TideChart.TideChartMethod.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartMethod build() {
        TideChart.TideChartMethod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartMethod buildPartial() {
        TideChart.TideChartMethod result = new TideChart.TideChartMethod(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.name_ = name_;
        result.extends_ = extends_;
        result.script_ = script_;
        if (inportsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            inports_ = java.util.Collections.unmodifiableList(inports_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.inports_ = inports_;
        } else {
          result.inports_ = inportsBuilder_.build();
        }
        if (outportsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            outports_ = java.util.Collections.unmodifiableList(outports_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.outports_ = outports_;
        } else {
          result.outports_ = outportsBuilder_.build();
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartMethod) {
          return mergeFrom((TideChart.TideChartMethod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartMethod other) {
        if (other == TideChart.TideChartMethod.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getExtends().isEmpty()) {
          extends_ = other.extends_;
          onChanged();
        }
        if (!other.getScript().isEmpty()) {
          script_ = other.script_;
          onChanged();
        }
        if (inportsBuilder_ == null) {
          if (!other.inports_.isEmpty()) {
            if (inports_.isEmpty()) {
              inports_ = other.inports_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInportsIsMutable();
              inports_.addAll(other.inports_);
            }
            onChanged();
          }
        } else {
          if (!other.inports_.isEmpty()) {
            if (inportsBuilder_.isEmpty()) {
              inportsBuilder_.dispose();
              inportsBuilder_ = null;
              inports_ = other.inports_;
              bitField0_ = (bitField0_ & ~0x00000001);
              inportsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInportsFieldBuilder() : null;
            } else {
              inportsBuilder_.addAllMessages(other.inports_);
            }
          }
        }
        if (outportsBuilder_ == null) {
          if (!other.outports_.isEmpty()) {
            if (outports_.isEmpty()) {
              outports_ = other.outports_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOutportsIsMutable();
              outports_.addAll(other.outports_);
            }
            onChanged();
          }
        } else {
          if (!other.outports_.isEmpty()) {
            if (outportsBuilder_.isEmpty()) {
              outportsBuilder_.dispose();
              outportsBuilder_ = null;
              outports_ = other.outports_;
              bitField0_ = (bitField0_ & ~0x00000002);
              outportsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutportsFieldBuilder() : null;
            } else {
              outportsBuilder_.addAllMessages(other.outports_);
            }
          }
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000004);
              propsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartMethod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartMethod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for the method definition
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for the method definition
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for the method definition
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the method definition
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the method definition
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name of the method (unique to the library)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of the method (unique to the library)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of the method (unique to the library)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the method (unique to the library)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the method (unique to the library)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object extends_ = "";
      /**
       * <pre>
       * method extends (customizes) the implementation of another method
       * </pre>
       *
       * <code>string extends = 3;</code>
       */
      public java.lang.String getExtends() {
        java.lang.Object ref = extends_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          extends_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * method extends (customizes) the implementation of another method
       * </pre>
       *
       * <code>string extends = 3;</code>
       */
      public com.google.protobuf.ByteString
          getExtendsBytes() {
        java.lang.Object ref = extends_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          extends_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * method extends (customizes) the implementation of another method
       * </pre>
       *
       * <code>string extends = 3;</code>
       */
      public Builder setExtends(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extends_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * method extends (customizes) the implementation of another method
       * </pre>
       *
       * <code>string extends = 3;</code>
       */
      public Builder clearExtends() {
        
        extends_ = getDefaultInstance().getExtends();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * method extends (customizes) the implementation of another method
       * </pre>
       *
       * <code>string extends = 3;</code>
       */
      public Builder setExtendsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extends_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object script_ = "";
      /**
       * <pre>
       * custom script that implements the node action for this method
       * </pre>
       *
       * <code>string script = 4;</code>
       */
      public java.lang.String getScript() {
        java.lang.Object ref = script_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          script_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * custom script that implements the node action for this method
       * </pre>
       *
       * <code>string script = 4;</code>
       */
      public com.google.protobuf.ByteString
          getScriptBytes() {
        java.lang.Object ref = script_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          script_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * custom script that implements the node action for this method
       * </pre>
       *
       * <code>string script = 4;</code>
       */
      public Builder setScript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        script_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * custom script that implements the node action for this method
       * </pre>
       *
       * <code>string script = 4;</code>
       */
      public Builder clearScript() {
        
        script_ = getDefaultInstance().getScript();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * custom script that implements the node action for this method
       * </pre>
       *
       * <code>string script = 4;</code>
       */
      public Builder setScriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        script_ = value;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartPort> inports_ =
        java.util.Collections.emptyList();
      private void ensureInportsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          inports_ = new java.util.ArrayList<TideChart.TideChartPort>(inports_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> inportsBuilder_;

      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public java.util.List<TideChart.TideChartPort> getInportsList() {
        if (inportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inports_);
        } else {
          return inportsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public int getInportsCount() {
        if (inportsBuilder_ == null) {
          return inports_.size();
        } else {
          return inportsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public TideChart.TideChartPort getInports(int index) {
        if (inportsBuilder_ == null) {
          return inports_.get(index);
        } else {
          return inportsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder setInports(
          int index, TideChart.TideChartPort value) {
        if (inportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInportsIsMutable();
          inports_.set(index, value);
          onChanged();
        } else {
          inportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder setInports(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          inports_.set(index, builderForValue.build());
          onChanged();
        } else {
          inportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder addInports(TideChart.TideChartPort value) {
        if (inportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInportsIsMutable();
          inports_.add(value);
          onChanged();
        } else {
          inportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder addInports(
          int index, TideChart.TideChartPort value) {
        if (inportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInportsIsMutable();
          inports_.add(index, value);
          onChanged();
        } else {
          inportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder addInports(
          TideChart.TideChartPort.Builder builderForValue) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          inports_.add(builderForValue.build());
          onChanged();
        } else {
          inportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder addInports(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          inports_.add(index, builderForValue.build());
          onChanged();
        } else {
          inportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder addAllInports(
          java.lang.Iterable<? extends TideChart.TideChartPort> values) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inports_);
          onChanged();
        } else {
          inportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder clearInports() {
        if (inportsBuilder_ == null) {
          inports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          inportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public Builder removeInports(int index) {
        if (inportsBuilder_ == null) {
          ensureInportsIsMutable();
          inports_.remove(index);
          onChanged();
        } else {
          inportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public TideChart.TideChartPort.Builder getInportsBuilder(
          int index) {
        return getInportsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public TideChart.TideChartPortOrBuilder getInportsOrBuilder(
          int index) {
        if (inportsBuilder_ == null) {
          return inports_.get(index);  } else {
          return inportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
           getInportsOrBuilderList() {
        if (inportsBuilder_ != null) {
          return inportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inports_);
        }
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public TideChart.TideChartPort.Builder addInportsBuilder() {
        return getInportsFieldBuilder().addBuilder(
            TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public TideChart.TideChartPort.Builder addInportsBuilder(
          int index) {
        return getInportsFieldBuilder().addBuilder(
            index, TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * definition of inports for this method
       * </pre>
       *
       * <code>repeated .TideChartPort inports = 5;</code>
       */
      public java.util.List<TideChart.TideChartPort.Builder> 
           getInportsBuilderList() {
        return getInportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> 
          getInportsFieldBuilder() {
        if (inportsBuilder_ == null) {
          inportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder>(
                  inports_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          inports_ = null;
        }
        return inportsBuilder_;
      }

      private java.util.List<TideChart.TideChartPort> outports_ =
        java.util.Collections.emptyList();
      private void ensureOutportsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          outports_ = new java.util.ArrayList<TideChart.TideChartPort>(outports_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> outportsBuilder_;

      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public java.util.List<TideChart.TideChartPort> getOutportsList() {
        if (outportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outports_);
        } else {
          return outportsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public int getOutportsCount() {
        if (outportsBuilder_ == null) {
          return outports_.size();
        } else {
          return outportsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public TideChart.TideChartPort getOutports(int index) {
        if (outportsBuilder_ == null) {
          return outports_.get(index);
        } else {
          return outportsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder setOutports(
          int index, TideChart.TideChartPort value) {
        if (outportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutportsIsMutable();
          outports_.set(index, value);
          onChanged();
        } else {
          outportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder setOutports(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          outports_.set(index, builderForValue.build());
          onChanged();
        } else {
          outportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder addOutports(TideChart.TideChartPort value) {
        if (outportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutportsIsMutable();
          outports_.add(value);
          onChanged();
        } else {
          outportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder addOutports(
          int index, TideChart.TideChartPort value) {
        if (outportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutportsIsMutable();
          outports_.add(index, value);
          onChanged();
        } else {
          outportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder addOutports(
          TideChart.TideChartPort.Builder builderForValue) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          outports_.add(builderForValue.build());
          onChanged();
        } else {
          outportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder addOutports(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          outports_.add(index, builderForValue.build());
          onChanged();
        } else {
          outportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder addAllOutports(
          java.lang.Iterable<? extends TideChart.TideChartPort> values) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outports_);
          onChanged();
        } else {
          outportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder clearOutports() {
        if (outportsBuilder_ == null) {
          outports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          outportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public Builder removeOutports(int index) {
        if (outportsBuilder_ == null) {
          ensureOutportsIsMutable();
          outports_.remove(index);
          onChanged();
        } else {
          outportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public TideChart.TideChartPort.Builder getOutportsBuilder(
          int index) {
        return getOutportsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public TideChart.TideChartPortOrBuilder getOutportsOrBuilder(
          int index) {
        if (outportsBuilder_ == null) {
          return outports_.get(index);  } else {
          return outportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
           getOutportsOrBuilderList() {
        if (outportsBuilder_ != null) {
          return outportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outports_);
        }
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public TideChart.TideChartPort.Builder addOutportsBuilder() {
        return getOutportsFieldBuilder().addBuilder(
            TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public TideChart.TideChartPort.Builder addOutportsBuilder(
          int index) {
        return getOutportsFieldBuilder().addBuilder(
            index, TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * definition of outports for this methid
       * </pre>
       *
       * <code>repeated .TideChartPort outports = 6;</code>
       */
      public java.util.List<TideChart.TideChartPort.Builder> 
           getOutportsBuilderList() {
        return getOutportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> 
          getOutportsFieldBuilder() {
        if (outportsBuilder_ == null) {
          outportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder>(
                  outports_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          outports_ = null;
        }
        return outportsBuilder_;
      }

      private java.util.List<TideChart.TideChartPort> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          props_ = new java.util.ArrayList<TideChart.TideChartPort>(props_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> propsBuilder_;

      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public java.util.List<TideChart.TideChartPort> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public TideChart.TideChartPort getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartPort value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder addProps(TideChart.TideChartPort value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartPort value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder addProps(
          TideChart.TideChartPort.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartPort.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder addAllProps(
          java.lang.Iterable<? extends TideChart.TideChartPort> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public TideChart.TideChartPort.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public TideChart.TideChartPortOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public java.util.List<? extends TideChart.TideChartPortOrBuilder> 
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public TideChart.TideChartPort.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public TideChart.TideChartPort.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartPort.getDefaultInstance());
      }
      /**
       * <pre>
       * definition of property values used by the method (uses port definition format)
       * </pre>
       *
       * <code>repeated .TideChartPort props = 7;</code>
       */
      public java.util.List<TideChart.TideChartPort.Builder> 
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder> 
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartPort, TideChart.TideChartPort.Builder, TideChart.TideChartPortOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartMethod)
    }

    // @@protoc_insertion_point(class_scope:TideChartMethod)
    private static final TideChart.TideChartMethod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartMethod();
    }

    public static TideChart.TideChartMethod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartMethod>
        PARSER = new com.google.protobuf.AbstractParser<TideChartMethod>() {
      @java.lang.Override
      public TideChartMethod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartMethod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartMethod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartMethod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartMethod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartSourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartSource)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for this source file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for this source file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * name of the source file 
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * name of the source file 
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * relative path of the source file 
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * relative path of the source file 
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * date file version was created
     * </pre>
     *
     * <code>string createdDate = 5;</code>
     */
    java.lang.String getCreatedDate();
    /**
     * <pre>
     * date file version was created
     * </pre>
     *
     * <code>string createdDate = 5;</code>
     */
    com.google.protobuf.ByteString
        getCreatedDateBytes();

    /**
     * <pre>
     * user that created this file version 
     * </pre>
     *
     * <code>string createdBy = 6;</code>
     */
    java.lang.String getCreatedBy();
    /**
     * <pre>
     * user that created this file version 
     * </pre>
     *
     * <code>string createdBy = 6;</code>
     */
    com.google.protobuf.ByteString
        getCreatedByBytes();

    /**
     * <pre>
     * reference to the exact version of the file    
     * </pre>
     *
     * <code>string version = 7;</code>
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * reference to the exact version of the file    
     * </pre>
     *
     * <code>string version = 7;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * contents of the file
     * </pre>
     *
     * <code>string script = 8;</code>
     */
    java.lang.String getScript();
    /**
     * <pre>
     * contents of the file
     * </pre>
     *
     * <code>string script = 8;</code>
     */
    com.google.protobuf.ByteString
        getScriptBytes();

    public TideChart.TideChartSource.ContentCase getContentCase();
  }
  /**
   * Protobuf type {@code TideChartSource}
   */
  public  static final class TideChartSource extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartSource)
      TideChartSourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartSource.newBuilder() to construct.
    private TideChartSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartSource() {
      id_ = "";
      name_ = "";
      path_ = "";
      createdDate_ = "";
      createdBy_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartSource();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartSource(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              createdDate_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              createdBy_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              contentCase_ = 7;
              content_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              contentCase_ = 8;
              content_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartSource.class, TideChart.TideChartSource.Builder.class);
    }

    private int contentCase_ = 0;
    private java.lang.Object content_;
    public enum ContentCase
        implements com.google.protobuf.Internal.EnumLite {
      VERSION(7),
      SCRIPT(8),
      CONTENT_NOT_SET(0);
      private final int value;
      private ContentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContentCase forNumber(int value) {
        switch (value) {
          case 7: return VERSION;
          case 8: return SCRIPT;
          case 0: return CONTENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ContentCase
    getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for this source file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for this source file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name of the source file 
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name of the source file 
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * relative path of the source file 
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * relative path of the source file 
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATEDDATE_FIELD_NUMBER = 5;
    private volatile java.lang.Object createdDate_;
    /**
     * <pre>
     * date file version was created
     * </pre>
     *
     * <code>string createdDate = 5;</code>
     */
    public java.lang.String getCreatedDate() {
      java.lang.Object ref = createdDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createdDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * date file version was created
     * </pre>
     *
     * <code>string createdDate = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCreatedDateBytes() {
      java.lang.Object ref = createdDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createdDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATEDBY_FIELD_NUMBER = 6;
    private volatile java.lang.Object createdBy_;
    /**
     * <pre>
     * user that created this file version 
     * </pre>
     *
     * <code>string createdBy = 6;</code>
     */
    public java.lang.String getCreatedBy() {
      java.lang.Object ref = createdBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createdBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * user that created this file version 
     * </pre>
     *
     * <code>string createdBy = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCreatedByBytes() {
      java.lang.Object ref = createdBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createdBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 7;
    /**
     * <pre>
     * reference to the exact version of the file    
     * </pre>
     *
     * <code>string version = 7;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = "";
      if (contentCase_ == 7) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (contentCase_ == 7) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * reference to the exact version of the file    
     * </pre>
     *
     * <code>string version = 7;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = "";
      if (contentCase_ == 7) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (contentCase_ == 7) {
          content_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCRIPT_FIELD_NUMBER = 8;
    /**
     * <pre>
     * contents of the file
     * </pre>
     *
     * <code>string script = 8;</code>
     */
    public java.lang.String getScript() {
      java.lang.Object ref = "";
      if (contentCase_ == 8) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (contentCase_ == 8) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * contents of the file
     * </pre>
     *
     * <code>string script = 8;</code>
     */
    public com.google.protobuf.ByteString
        getScriptBytes() {
      java.lang.Object ref = "";
      if (contentCase_ == 8) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (contentCase_ == 8) {
          content_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, path_);
      }
      if (!getCreatedDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, createdDate_);
      }
      if (!getCreatedByBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, createdBy_);
      }
      if (contentCase_ == 7) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, content_);
      }
      if (contentCase_ == 8) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, content_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, path_);
      }
      if (!getCreatedDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, createdDate_);
      }
      if (!getCreatedByBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, createdBy_);
      }
      if (contentCase_ == 7) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, content_);
      }
      if (contentCase_ == 8) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, content_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartSource)) {
        return super.equals(obj);
      }
      TideChart.TideChartSource other = (TideChart.TideChartSource) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getPath()
          .equals(other.getPath())) return false;
      if (!getCreatedDate()
          .equals(other.getCreatedDate())) return false;
      if (!getCreatedBy()
          .equals(other.getCreatedBy())) return false;
      if (!getContentCase().equals(other.getContentCase())) return false;
      switch (contentCase_) {
        case 7:
          if (!getVersion()
              .equals(other.getVersion())) return false;
          break;
        case 8:
          if (!getScript()
              .equals(other.getScript())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + CREATEDDATE_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedDate().hashCode();
      hash = (37 * hash) + CREATEDBY_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedBy().hashCode();
      switch (contentCase_) {
        case 7:
          hash = (37 * hash) + VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getVersion().hashCode();
          break;
        case 8:
          hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
          hash = (53 * hash) + getScript().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartSource parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartSource parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartSource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartSource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartSource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartSource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartSource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartSource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartSource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartSource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartSource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartSource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartSource prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartSource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartSource)
        TideChart.TideChartSourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartSource_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartSource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartSource.class, TideChart.TideChartSource.Builder.class);
      }

      // Construct using TideChart.TideChartSource.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        path_ = "";

        createdDate_ = "";

        createdBy_ = "";

        contentCase_ = 0;
        content_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartSource_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartSource getDefaultInstanceForType() {
        return TideChart.TideChartSource.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartSource build() {
        TideChart.TideChartSource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartSource buildPartial() {
        TideChart.TideChartSource result = new TideChart.TideChartSource(this);
        result.id_ = id_;
        result.name_ = name_;
        result.path_ = path_;
        result.createdDate_ = createdDate_;
        result.createdBy_ = createdBy_;
        if (contentCase_ == 7) {
          result.content_ = content_;
        }
        if (contentCase_ == 8) {
          result.content_ = content_;
        }
        result.contentCase_ = contentCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartSource) {
          return mergeFrom((TideChart.TideChartSource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartSource other) {
        if (other == TideChart.TideChartSource.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (!other.getCreatedDate().isEmpty()) {
          createdDate_ = other.createdDate_;
          onChanged();
        }
        if (!other.getCreatedBy().isEmpty()) {
          createdBy_ = other.createdBy_;
          onChanged();
        }
        switch (other.getContentCase()) {
          case VERSION: {
            contentCase_ = 7;
            content_ = other.content_;
            onChanged();
            break;
          }
          case SCRIPT: {
            contentCase_ = 8;
            content_ = other.content_;
            onChanged();
            break;
          }
          case CONTENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartSource parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartSource) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int contentCase_ = 0;
      private java.lang.Object content_;
      public ContentCase
          getContentCase() {
        return ContentCase.forNumber(
            contentCase_);
      }

      public Builder clearContent() {
        contentCase_ = 0;
        content_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for this source file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for this source file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for this source file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this source file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this source file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name of the source file 
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name of the source file 
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name of the source file 
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the source file 
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name of the source file 
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * relative path of the source file 
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * relative path of the source file 
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * relative path of the source file 
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * relative path of the source file 
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * relative path of the source file 
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object createdDate_ = "";
      /**
       * <pre>
       * date file version was created
       * </pre>
       *
       * <code>string createdDate = 5;</code>
       */
      public java.lang.String getCreatedDate() {
        java.lang.Object ref = createdDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createdDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * date file version was created
       * </pre>
       *
       * <code>string createdDate = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCreatedDateBytes() {
        java.lang.Object ref = createdDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createdDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * date file version was created
       * </pre>
       *
       * <code>string createdDate = 5;</code>
       */
      public Builder setCreatedDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createdDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date file version was created
       * </pre>
       *
       * <code>string createdDate = 5;</code>
       */
      public Builder clearCreatedDate() {
        
        createdDate_ = getDefaultInstance().getCreatedDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date file version was created
       * </pre>
       *
       * <code>string createdDate = 5;</code>
       */
      public Builder setCreatedDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createdDate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object createdBy_ = "";
      /**
       * <pre>
       * user that created this file version 
       * </pre>
       *
       * <code>string createdBy = 6;</code>
       */
      public java.lang.String getCreatedBy() {
        java.lang.Object ref = createdBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createdBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user that created this file version 
       * </pre>
       *
       * <code>string createdBy = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCreatedByBytes() {
        java.lang.Object ref = createdBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createdBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user that created this file version 
       * </pre>
       *
       * <code>string createdBy = 6;</code>
       */
      public Builder setCreatedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createdBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that created this file version 
       * </pre>
       *
       * <code>string createdBy = 6;</code>
       */
      public Builder clearCreatedBy() {
        
        createdBy_ = getDefaultInstance().getCreatedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that created this file version 
       * </pre>
       *
       * <code>string createdBy = 6;</code>
       */
      public Builder setCreatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createdBy_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * reference to the exact version of the file    
       * </pre>
       *
       * <code>string version = 7;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = "";
        if (contentCase_ == 7) {
          ref = content_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (contentCase_ == 7) {
            content_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * reference to the exact version of the file    
       * </pre>
       *
       * <code>string version = 7;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = "";
        if (contentCase_ == 7) {
          ref = content_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (contentCase_ == 7) {
            content_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * reference to the exact version of the file    
       * </pre>
       *
       * <code>string version = 7;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 7;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * reference to the exact version of the file    
       * </pre>
       *
       * <code>string version = 7;</code>
       */
      public Builder clearVersion() {
        if (contentCase_ == 7) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * reference to the exact version of the file    
       * </pre>
       *
       * <code>string version = 7;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        contentCase_ = 7;
        content_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * contents of the file
       * </pre>
       *
       * <code>string script = 8;</code>
       */
      public java.lang.String getScript() {
        java.lang.Object ref = "";
        if (contentCase_ == 8) {
          ref = content_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (contentCase_ == 8) {
            content_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * contents of the file
       * </pre>
       *
       * <code>string script = 8;</code>
       */
      public com.google.protobuf.ByteString
          getScriptBytes() {
        java.lang.Object ref = "";
        if (contentCase_ == 8) {
          ref = content_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (contentCase_ == 8) {
            content_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * contents of the file
       * </pre>
       *
       * <code>string script = 8;</code>
       */
      public Builder setScript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 8;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * contents of the file
       * </pre>
       *
       * <code>string script = 8;</code>
       */
      public Builder clearScript() {
        if (contentCase_ == 8) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * contents of the file
       * </pre>
       *
       * <code>string script = 8;</code>
       */
      public Builder setScriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        contentCase_ = 8;
        content_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartSource)
    }

    // @@protoc_insertion_point(class_scope:TideChartSource)
    private static final TideChart.TideChartSource DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartSource();
    }

    public static TideChart.TideChartSource getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartSource>
        PARSER = new com.google.protobuf.AbstractParser<TideChartSource>() {
      @java.lang.Override
      public TideChartSource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartSource(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartSource> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartSource> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartSource getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartLibraryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartLibrary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for the library
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for the library
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * fully qualified name for the library
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * fully qualified name for the library
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * descriptive title for the library
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    java.lang.String getTitle();
    /**
     * <pre>
     * descriptive title for the library
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     * repository containing referenced files
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    java.lang.String getOrigin();
    /**
     * <pre>
     * repository containing referenced files
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    com.google.protobuf.ByteString
        getOriginBytes();

    /**
     * <pre>
     * branch containing referenced files
     * </pre>
     *
     * <code>string branch = 5;</code>
     */
    java.lang.String getBranch();
    /**
     * <pre>
     * branch containing referenced files
     * </pre>
     *
     * <code>string branch = 5;</code>
     */
    com.google.protobuf.ByteString
        getBranchBytes();

    /**
     * <pre>
     * root path for files in the library
     * </pre>
     *
     * <code>string path = 6;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * root path for files in the library
     * </pre>
     *
     * <code>string path = 6;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    java.util.List<TideChart.TideChartSource> 
        getFilesList();
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    TideChart.TideChartSource getFiles(int index);
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    int getFilesCount();
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    java.util.List<? extends TideChart.TideChartSourceOrBuilder> 
        getFilesOrBuilderList();
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    TideChart.TideChartSourceOrBuilder getFilesOrBuilder(
        int index);

    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    java.util.List<TideChart.TideChartMethod> 
        getMethodsList();
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    TideChart.TideChartMethod getMethods(int index);
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    int getMethodsCount();
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    java.util.List<? extends TideChart.TideChartMethodOrBuilder> 
        getMethodsOrBuilderList();
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    TideChart.TideChartMethodOrBuilder getMethodsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TideChartLibrary}
   */
  public  static final class TideChartLibrary extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartLibrary)
      TideChartLibraryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartLibrary.newBuilder() to construct.
    private TideChartLibrary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartLibrary() {
      id_ = "";
      name_ = "";
      title_ = "";
      origin_ = "";
      branch_ = "";
      path_ = "";
      files_ = java.util.Collections.emptyList();
      methods_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartLibrary();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartLibrary(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              origin_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              branch_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                files_ = new java.util.ArrayList<TideChart.TideChartSource>();
                mutable_bitField0_ |= 0x00000001;
              }
              files_.add(
                  input.readMessage(TideChart.TideChartSource.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                methods_ = new java.util.ArrayList<TideChart.TideChartMethod>();
                mutable_bitField0_ |= 0x00000002;
              }
              methods_.add(
                  input.readMessage(TideChart.TideChartMethod.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          files_ = java.util.Collections.unmodifiableList(files_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          methods_ = java.util.Collections.unmodifiableList(methods_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartLibrary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartLibrary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartLibrary.class, TideChart.TideChartLibrary.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for the library
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for the library
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * fully qualified name for the library
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * fully qualified name for the library
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TITLE_FIELD_NUMBER = 3;
    private volatile java.lang.Object title_;
    /**
     * <pre>
     * descriptive title for the library
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * descriptive title for the library
     * </pre>
     *
     * <code>string title = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORIGIN_FIELD_NUMBER = 4;
    private volatile java.lang.Object origin_;
    /**
     * <pre>
     * repository containing referenced files
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    public java.lang.String getOrigin() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        origin_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * repository containing referenced files
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOriginBytes() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        origin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BRANCH_FIELD_NUMBER = 5;
    private volatile java.lang.Object branch_;
    /**
     * <pre>
     * branch containing referenced files
     * </pre>
     *
     * <code>string branch = 5;</code>
     */
    public java.lang.String getBranch() {
      java.lang.Object ref = branch_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        branch_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * branch containing referenced files
     * </pre>
     *
     * <code>string branch = 5;</code>
     */
    public com.google.protobuf.ByteString
        getBranchBytes() {
      java.lang.Object ref = branch_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        branch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATH_FIELD_NUMBER = 6;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * root path for files in the library
     * </pre>
     *
     * <code>string path = 6;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * root path for files in the library
     * </pre>
     *
     * <code>string path = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILES_FIELD_NUMBER = 7;
    private java.util.List<TideChart.TideChartSource> files_;
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    public java.util.List<TideChart.TideChartSource> getFilesList() {
      return files_;
    }
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    public java.util.List<? extends TideChart.TideChartSourceOrBuilder> 
        getFilesOrBuilderList() {
      return files_;
    }
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    public TideChart.TideChartSource getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <pre>
     * files included in the library
     * </pre>
     *
     * <code>repeated .TideChartSource files = 7;</code>
     */
    public TideChart.TideChartSourceOrBuilder getFilesOrBuilder(
        int index) {
      return files_.get(index);
    }

    public static final int METHODS_FIELD_NUMBER = 8;
    private java.util.List<TideChart.TideChartMethod> methods_;
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    public java.util.List<TideChart.TideChartMethod> getMethodsList() {
      return methods_;
    }
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    public java.util.List<? extends TideChart.TideChartMethodOrBuilder> 
        getMethodsOrBuilderList() {
      return methods_;
    }
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    public int getMethodsCount() {
      return methods_.size();
    }
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    public TideChart.TideChartMethod getMethods(int index) {
      return methods_.get(index);
    }
    /**
     * <pre>
     * definitions for methods implemented by the library
     * </pre>
     *
     * <code>repeated .TideChartMethod methods = 8;</code>
     */
    public TideChart.TideChartMethodOrBuilder getMethodsOrBuilder(
        int index) {
      return methods_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, title_);
      }
      if (!getOriginBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, origin_);
      }
      if (!getBranchBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, branch_);
      }
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, path_);
      }
      for (int i = 0; i < files_.size(); i++) {
        output.writeMessage(7, files_.get(i));
      }
      for (int i = 0; i < methods_.size(); i++) {
        output.writeMessage(8, methods_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, title_);
      }
      if (!getOriginBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, origin_);
      }
      if (!getBranchBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, branch_);
      }
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, path_);
      }
      for (int i = 0; i < files_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, files_.get(i));
      }
      for (int i = 0; i < methods_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, methods_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartLibrary)) {
        return super.equals(obj);
      }
      TideChart.TideChartLibrary other = (TideChart.TideChartLibrary) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (!getOrigin()
          .equals(other.getOrigin())) return false;
      if (!getBranch()
          .equals(other.getBranch())) return false;
      if (!getPath()
          .equals(other.getPath())) return false;
      if (!getFilesList()
          .equals(other.getFilesList())) return false;
      if (!getMethodsList()
          .equals(other.getMethodsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
      hash = (37 * hash) + BRANCH_FIELD_NUMBER;
      hash = (53 * hash) + getBranch().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      if (getFilesCount() > 0) {
        hash = (37 * hash) + FILES_FIELD_NUMBER;
        hash = (53 * hash) + getFilesList().hashCode();
      }
      if (getMethodsCount() > 0) {
        hash = (37 * hash) + METHODS_FIELD_NUMBER;
        hash = (53 * hash) + getMethodsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartLibrary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLibrary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLibrary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLibrary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLibrary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartLibrary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartLibrary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLibrary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartLibrary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLibrary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartLibrary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartLibrary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartLibrary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartLibrary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartLibrary)
        TideChart.TideChartLibraryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartLibrary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartLibrary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartLibrary.class, TideChart.TideChartLibrary.Builder.class);
      }

      // Construct using TideChart.TideChartLibrary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFilesFieldBuilder();
          getMethodsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        title_ = "";

        origin_ = "";

        branch_ = "";

        path_ = "";

        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          filesBuilder_.clear();
        }
        if (methodsBuilder_ == null) {
          methods_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          methodsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartLibrary_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartLibrary getDefaultInstanceForType() {
        return TideChart.TideChartLibrary.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartLibrary build() {
        TideChart.TideChartLibrary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartLibrary buildPartial() {
        TideChart.TideChartLibrary result = new TideChart.TideChartLibrary(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.name_ = name_;
        result.title_ = title_;
        result.origin_ = origin_;
        result.branch_ = branch_;
        result.path_ = path_;
        if (filesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            files_ = java.util.Collections.unmodifiableList(files_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.files_ = files_;
        } else {
          result.files_ = filesBuilder_.build();
        }
        if (methodsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            methods_ = java.util.Collections.unmodifiableList(methods_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.methods_ = methods_;
        } else {
          result.methods_ = methodsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartLibrary) {
          return mergeFrom((TideChart.TideChartLibrary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartLibrary other) {
        if (other == TideChart.TideChartLibrary.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (!other.getOrigin().isEmpty()) {
          origin_ = other.origin_;
          onChanged();
        }
        if (!other.getBranch().isEmpty()) {
          branch_ = other.branch_;
          onChanged();
        }
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (filesBuilder_ == null) {
          if (!other.files_.isEmpty()) {
            if (files_.isEmpty()) {
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFilesIsMutable();
              files_.addAll(other.files_);
            }
            onChanged();
          }
        } else {
          if (!other.files_.isEmpty()) {
            if (filesBuilder_.isEmpty()) {
              filesBuilder_.dispose();
              filesBuilder_ = null;
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000001);
              filesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFilesFieldBuilder() : null;
            } else {
              filesBuilder_.addAllMessages(other.files_);
            }
          }
        }
        if (methodsBuilder_ == null) {
          if (!other.methods_.isEmpty()) {
            if (methods_.isEmpty()) {
              methods_ = other.methods_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMethodsIsMutable();
              methods_.addAll(other.methods_);
            }
            onChanged();
          }
        } else {
          if (!other.methods_.isEmpty()) {
            if (methodsBuilder_.isEmpty()) {
              methodsBuilder_.dispose();
              methodsBuilder_ = null;
              methods_ = other.methods_;
              bitField0_ = (bitField0_ & ~0x00000002);
              methodsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMethodsFieldBuilder() : null;
            } else {
              methodsBuilder_.addAllMessages(other.methods_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartLibrary parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartLibrary) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for the library
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for the library
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for the library
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the library
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for the library
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * fully qualified name for the library
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * fully qualified name for the library
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * fully qualified name for the library
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fully qualified name for the library
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fully qualified name for the library
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <pre>
       * descriptive title for the library
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * descriptive title for the library
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * descriptive title for the library
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * descriptive title for the library
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * descriptive title for the library
       * </pre>
       *
       * <code>string title = 3;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object origin_ = "";
      /**
       * <pre>
       * repository containing referenced files
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public java.lang.String getOrigin() {
        java.lang.Object ref = origin_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          origin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * repository containing referenced files
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOriginBytes() {
        java.lang.Object ref = origin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          origin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * repository containing referenced files
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder setOrigin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repository containing referenced files
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder clearOrigin() {
        
        origin_ = getDefaultInstance().getOrigin();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * repository containing referenced files
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder setOriginBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        origin_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object branch_ = "";
      /**
       * <pre>
       * branch containing referenced files
       * </pre>
       *
       * <code>string branch = 5;</code>
       */
      public java.lang.String getBranch() {
        java.lang.Object ref = branch_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          branch_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * branch containing referenced files
       * </pre>
       *
       * <code>string branch = 5;</code>
       */
      public com.google.protobuf.ByteString
          getBranchBytes() {
        java.lang.Object ref = branch_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          branch_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * branch containing referenced files
       * </pre>
       *
       * <code>string branch = 5;</code>
       */
      public Builder setBranch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        branch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * branch containing referenced files
       * </pre>
       *
       * <code>string branch = 5;</code>
       */
      public Builder clearBranch() {
        
        branch_ = getDefaultInstance().getBranch();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * branch containing referenced files
       * </pre>
       *
       * <code>string branch = 5;</code>
       */
      public Builder setBranchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        branch_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * root path for files in the library
       * </pre>
       *
       * <code>string path = 6;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * root path for files in the library
       * </pre>
       *
       * <code>string path = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * root path for files in the library
       * </pre>
       *
       * <code>string path = 6;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * root path for files in the library
       * </pre>
       *
       * <code>string path = 6;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * root path for files in the library
       * </pre>
       *
       * <code>string path = 6;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartSource> files_ =
        java.util.Collections.emptyList();
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          files_ = new java.util.ArrayList<TideChart.TideChartSource>(files_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartSource, TideChart.TideChartSource.Builder, TideChart.TideChartSourceOrBuilder> filesBuilder_;

      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public java.util.List<TideChart.TideChartSource> getFilesList() {
        if (filesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(files_);
        } else {
          return filesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public int getFilesCount() {
        if (filesBuilder_ == null) {
          return files_.size();
        } else {
          return filesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public TideChart.TideChartSource getFiles(int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);
        } else {
          return filesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder setFiles(
          int index, TideChart.TideChartSource value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.set(index, value);
          onChanged();
        } else {
          filesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder setFiles(
          int index, TideChart.TideChartSource.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.set(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder addFiles(TideChart.TideChartSource value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(value);
          onChanged();
        } else {
          filesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder addFiles(
          int index, TideChart.TideChartSource value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(index, value);
          onChanged();
        } else {
          filesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder addFiles(
          TideChart.TideChartSource.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder addFiles(
          int index, TideChart.TideChartSource.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder addAllFiles(
          java.lang.Iterable<? extends TideChart.TideChartSource> values) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, files_);
          onChanged();
        } else {
          filesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder clearFiles() {
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          filesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public Builder removeFiles(int index) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.remove(index);
          onChanged();
        } else {
          filesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public TideChart.TideChartSource.Builder getFilesBuilder(
          int index) {
        return getFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public TideChart.TideChartSourceOrBuilder getFilesOrBuilder(
          int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);  } else {
          return filesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public java.util.List<? extends TideChart.TideChartSourceOrBuilder> 
           getFilesOrBuilderList() {
        if (filesBuilder_ != null) {
          return filesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(files_);
        }
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public TideChart.TideChartSource.Builder addFilesBuilder() {
        return getFilesFieldBuilder().addBuilder(
            TideChart.TideChartSource.getDefaultInstance());
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public TideChart.TideChartSource.Builder addFilesBuilder(
          int index) {
        return getFilesFieldBuilder().addBuilder(
            index, TideChart.TideChartSource.getDefaultInstance());
      }
      /**
       * <pre>
       * files included in the library
       * </pre>
       *
       * <code>repeated .TideChartSource files = 7;</code>
       */
      public java.util.List<TideChart.TideChartSource.Builder> 
           getFilesBuilderList() {
        return getFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartSource, TideChart.TideChartSource.Builder, TideChart.TideChartSourceOrBuilder> 
          getFilesFieldBuilder() {
        if (filesBuilder_ == null) {
          filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartSource, TideChart.TideChartSource.Builder, TideChart.TideChartSourceOrBuilder>(
                  files_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          files_ = null;
        }
        return filesBuilder_;
      }

      private java.util.List<TideChart.TideChartMethod> methods_ =
        java.util.Collections.emptyList();
      private void ensureMethodsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          methods_ = new java.util.ArrayList<TideChart.TideChartMethod>(methods_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartMethod, TideChart.TideChartMethod.Builder, TideChart.TideChartMethodOrBuilder> methodsBuilder_;

      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public java.util.List<TideChart.TideChartMethod> getMethodsList() {
        if (methodsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(methods_);
        } else {
          return methodsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public int getMethodsCount() {
        if (methodsBuilder_ == null) {
          return methods_.size();
        } else {
          return methodsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public TideChart.TideChartMethod getMethods(int index) {
        if (methodsBuilder_ == null) {
          return methods_.get(index);
        } else {
          return methodsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder setMethods(
          int index, TideChart.TideChartMethod value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.set(index, value);
          onChanged();
        } else {
          methodsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder setMethods(
          int index, TideChart.TideChartMethod.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.set(index, builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder addMethods(TideChart.TideChartMethod value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.add(value);
          onChanged();
        } else {
          methodsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder addMethods(
          int index, TideChart.TideChartMethod value) {
        if (methodsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodsIsMutable();
          methods_.add(index, value);
          onChanged();
        } else {
          methodsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder addMethods(
          TideChart.TideChartMethod.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.add(builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder addMethods(
          int index, TideChart.TideChartMethod.Builder builderForValue) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.add(index, builderForValue.build());
          onChanged();
        } else {
          methodsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder addAllMethods(
          java.lang.Iterable<? extends TideChart.TideChartMethod> values) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, methods_);
          onChanged();
        } else {
          methodsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder clearMethods() {
        if (methodsBuilder_ == null) {
          methods_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          methodsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public Builder removeMethods(int index) {
        if (methodsBuilder_ == null) {
          ensureMethodsIsMutable();
          methods_.remove(index);
          onChanged();
        } else {
          methodsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public TideChart.TideChartMethod.Builder getMethodsBuilder(
          int index) {
        return getMethodsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public TideChart.TideChartMethodOrBuilder getMethodsOrBuilder(
          int index) {
        if (methodsBuilder_ == null) {
          return methods_.get(index);  } else {
          return methodsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public java.util.List<? extends TideChart.TideChartMethodOrBuilder> 
           getMethodsOrBuilderList() {
        if (methodsBuilder_ != null) {
          return methodsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(methods_);
        }
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public TideChart.TideChartMethod.Builder addMethodsBuilder() {
        return getMethodsFieldBuilder().addBuilder(
            TideChart.TideChartMethod.getDefaultInstance());
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public TideChart.TideChartMethod.Builder addMethodsBuilder(
          int index) {
        return getMethodsFieldBuilder().addBuilder(
            index, TideChart.TideChartMethod.getDefaultInstance());
      }
      /**
       * <pre>
       * definitions for methods implemented by the library
       * </pre>
       *
       * <code>repeated .TideChartMethod methods = 8;</code>
       */
      public java.util.List<TideChart.TideChartMethod.Builder> 
           getMethodsBuilderList() {
        return getMethodsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartMethod, TideChart.TideChartMethod.Builder, TideChart.TideChartMethodOrBuilder> 
          getMethodsFieldBuilder() {
        if (methodsBuilder_ == null) {
          methodsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartMethod, TideChart.TideChartMethod.Builder, TideChart.TideChartMethodOrBuilder>(
                  methods_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          methods_ = null;
        }
        return methodsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartLibrary)
    }

    // @@protoc_insertion_point(class_scope:TideChartLibrary)
    private static final TideChart.TideChartLibrary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartLibrary();
    }

    public static TideChart.TideChartLibrary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartLibrary>
        PARSER = new com.google.protobuf.AbstractParser<TideChartLibrary>() {
      @java.lang.Override
      public TideChartLibrary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartLibrary(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartLibrary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartLibrary> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartLibrary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartSiteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartSite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An index that uniquely identifies all message producers and consumers sites and sequences with messages
     * </pre>
     *
     * <code>int64 index = 1;</code>
     */
    long getIndex();

    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    java.util.List<TideChart.TideChartSite> 
        getStackList();
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    TideChart.TideChartSite getStack(int index);
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    int getStackCount();
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    java.util.List<? extends TideChart.TideChartSiteOrBuilder> 
        getStackOrBuilderList();
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    TideChart.TideChartSiteOrBuilder getStackOrBuilder(
        int index);

    /**
     * <pre>
     * Path in global state storage for events from state changes
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * Path in global state storage for events from state changes
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * Source that produced an event (when the source isn't a node)
     * </pre>
     *
     * <code>string trigger = 4;</code>
     */
    java.lang.String getTrigger();
    /**
     * <pre>
     * Source that produced an event (when the source isn't a node)
     * </pre>
     *
     * <code>string trigger = 4;</code>
     */
    com.google.protobuf.ByteString
        getTriggerBytes();

    /**
     * <pre>
     * Name of event (used for event sources and targets)
     * </pre>
     *
     * <code>string event = 5;</code>
     */
    java.lang.String getEvent();
    /**
     * <pre>
     * Name of event (used for event sources and targets)
     * </pre>
     *
     * <code>string event = 5;</code>
     */
    com.google.protobuf.ByteString
        getEventBytes();

    /**
     * <pre>
     * Used for scoped event sites
     * </pre>
     *
     * <code>repeated string scope = 6;</code>
     */
    java.util.List<java.lang.String>
        getScopeList();
    /**
     * <pre>
     * Used for scoped event sites
     * </pre>
     *
     * <code>repeated string scope = 6;</code>
     */
    int getScopeCount();
    /**
     * <pre>
     * Used for scoped event sites
     * </pre>
     *
     * <code>repeated string scope = 6;</code>
     */
    java.lang.String getScope(int index);
    /**
     * <pre>
     * Used for scoped event sites
     * </pre>
     *
     * <code>repeated string scope = 6;</code>
     */
    com.google.protobuf.ByteString
        getScopeBytes(int index);

    /**
     * <pre>
     * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
     * </pre>
     *
     * <code>string filter = 7;</code>
     */
    java.lang.String getFilter();
    /**
     * <pre>
     * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
     * </pre>
     *
     * <code>string filter = 7;</code>
     */
    com.google.protobuf.ByteString
        getFilterBytes();

    /**
     * <pre>
     * graph-name    - graph scripts and graph nodes can generate messages
     * </pre>
     *
     * <code>string graph = 8;</code>
     */
    java.lang.String getGraph();
    /**
     * <pre>
     * graph-name    - graph scripts and graph nodes can generate messages
     * </pre>
     *
     * <code>string graph = 8;</code>
     */
    com.google.protobuf.ByteString
        getGraphBytes();

    /**
     * <pre>
     * region-name   - region scripts can generate messages
     * </pre>
     *
     * <code>string region = 9;</code>
     */
    java.lang.String getRegion();
    /**
     * <pre>
     * region-name   - region scripts can generate messages
     * </pre>
     *
     * <code>string region = 9;</code>
     */
    com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * node-name     - node actions and node ports an generate messages
     * </pre>
     *
     * <code>string node = 10;</code>
     */
    java.lang.String getNode();
    /**
     * <pre>
     * node-name     - node actions and node ports an generate messages
     * </pre>
     *
     * <code>string node = 10;</code>
     */
    com.google.protobuf.ByteString
        getNodeBytes();

    /**
     * <pre>
     * port-name     - ports can generate and receive messages
     * </pre>
     *
     * <code>string port = 11;</code>
     */
    java.lang.String getPort();
    /**
     * <pre>
     * port-name     - ports can generate and receive messages
     * </pre>
     *
     * <code>string port = 11;</code>
     */
    com.google.protobuf.ByteString
        getPortBytes();
  }
  /**
   * Protobuf type {@code TideChartSite}
   */
  public  static final class TideChartSite extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartSite)
      TideChartSiteOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartSite.newBuilder() to construct.
    private TideChartSite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartSite() {
      stack_ = java.util.Collections.emptyList();
      path_ = "";
      trigger_ = "";
      event_ = "";
      scope_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      filter_ = "";
      graph_ = "";
      region_ = "";
      node_ = "";
      port_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartSite();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartSite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              index_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                stack_ = new java.util.ArrayList<TideChart.TideChartSite>();
                mutable_bitField0_ |= 0x00000001;
              }
              stack_.add(
                  input.readMessage(TideChart.TideChartSite.parser(), extensionRegistry));
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              trigger_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              event_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                scope_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              scope_.add(s);
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              filter_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              graph_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              region_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              node_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              port_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          stack_ = java.util.Collections.unmodifiableList(stack_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          scope_ = scope_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartSite_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartSite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartSite.class, TideChart.TideChartSite.Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private long index_;
    /**
     * <pre>
     * An index that uniquely identifies all message producers and consumers sites and sequences with messages
     * </pre>
     *
     * <code>int64 index = 1;</code>
     */
    public long getIndex() {
      return index_;
    }

    public static final int STACK_FIELD_NUMBER = 2;
    private java.util.List<TideChart.TideChartSite> stack_;
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    public java.util.List<TideChart.TideChartSite> getStackList() {
      return stack_;
    }
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    public java.util.List<? extends TideChart.TideChartSiteOrBuilder> 
        getStackOrBuilderList() {
      return stack_;
    }
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    public int getStackCount() {
      return stack_.size();
    }
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    public TideChart.TideChartSite getStack(int index) {
      return stack_.get(index);
    }
    /**
     * <pre>
     * used to trace origin when calling into behavior nodes
     * </pre>
     *
     * <code>repeated .TideChartSite stack = 2;</code>
     */
    public TideChart.TideChartSiteOrBuilder getStackOrBuilder(
        int index) {
      return stack_.get(index);
    }

    public static final int PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * Path in global state storage for events from state changes
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Path in global state storage for events from state changes
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRIGGER_FIELD_NUMBER = 4;
    private volatile java.lang.Object trigger_;
    /**
     * <pre>
     * Source that produced an event (when the source isn't a node)
     * </pre>
     *
     * <code>string trigger = 4;</code>
     */
    public java.lang.String getTrigger() {
      java.lang.Object ref = trigger_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        trigger_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Source that produced an event (when the source isn't a node)
     * </pre>
     *
     * <code>string trigger = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTriggerBytes() {
      java.lang.Object ref = trigger_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trigger_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_FIELD_NUMBER = 5;
    private volatile java.lang.Object event_;
    /**
     * <pre>
     * Name of event (used for event sources and targets)
     * </pre>
     *
     * <code>string event = 5;</code>
     */
    public java.lang.String getEvent() {
      java.lang.Object ref = event_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        event_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of event (used for event sources and targets)
     * </pre>
     *
     * <code>string event = 5;</code>
     */
    public com.google.protobuf.ByteString
        getEventBytes() {
      java.lang.Object ref = event_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        event_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCOPE_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList scope_;
    /**
     * <pre>
     * Used for scoped event sites
     * </pre>
     *
     * <code>repeated string scope = 6;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getScopeList() {
      return scope_;
    }
    /**
     * <pre>
     * Used for scoped event sites
     * </pre>
     *
     * <code>repeated string scope = 6;</code>
     */
    public int getScopeCount() {
      return scope_.size();
    }
    /**
     * <pre>
     * Used for scoped event sites
     * </pre>
     *
     * <code>repeated string scope = 6;</code>
     */
    public java.lang.String getScope(int index) {
      return scope_.get(index);
    }
    /**
     * <pre>
     * Used for scoped event sites
     * </pre>
     *
     * <code>repeated string scope = 6;</code>
     */
    public com.google.protobuf.ByteString
        getScopeBytes(int index) {
      return scope_.getByteString(index);
    }

    public static final int FILTER_FIELD_NUMBER = 7;
    private volatile java.lang.Object filter_;
    /**
     * <pre>
     * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
     * </pre>
     *
     * <code>string filter = 7;</code>
     */
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
     * </pre>
     *
     * <code>string filter = 7;</code>
     */
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GRAPH_FIELD_NUMBER = 8;
    private volatile java.lang.Object graph_;
    /**
     * <pre>
     * graph-name    - graph scripts and graph nodes can generate messages
     * </pre>
     *
     * <code>string graph = 8;</code>
     */
    public java.lang.String getGraph() {
      java.lang.Object ref = graph_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        graph_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * graph-name    - graph scripts and graph nodes can generate messages
     * </pre>
     *
     * <code>string graph = 8;</code>
     */
    public com.google.protobuf.ByteString
        getGraphBytes() {
      java.lang.Object ref = graph_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        graph_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REGION_FIELD_NUMBER = 9;
    private volatile java.lang.Object region_;
    /**
     * <pre>
     * region-name   - region scripts can generate messages
     * </pre>
     *
     * <code>string region = 9;</code>
     */
    public java.lang.String getRegion() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        region_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * region-name   - region scripts can generate messages
     * </pre>
     *
     * <code>string region = 9;</code>
     */
    public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        region_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_FIELD_NUMBER = 10;
    private volatile java.lang.Object node_;
    /**
     * <pre>
     * node-name     - node actions and node ports an generate messages
     * </pre>
     *
     * <code>string node = 10;</code>
     */
    public java.lang.String getNode() {
      java.lang.Object ref = node_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        node_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * node-name     - node actions and node ports an generate messages
     * </pre>
     *
     * <code>string node = 10;</code>
     */
    public com.google.protobuf.ByteString
        getNodeBytes() {
      java.lang.Object ref = node_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        node_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 11;
    private volatile java.lang.Object port_;
    /**
     * <pre>
     * port-name     - ports can generate and receive messages
     * </pre>
     *
     * <code>string port = 11;</code>
     */
    public java.lang.String getPort() {
      java.lang.Object ref = port_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        port_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * port-name     - ports can generate and receive messages
     * </pre>
     *
     * <code>string port = 11;</code>
     */
    public com.google.protobuf.ByteString
        getPortBytes() {
      java.lang.Object ref = port_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        port_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0L) {
        output.writeInt64(1, index_);
      }
      for (int i = 0; i < stack_.size(); i++) {
        output.writeMessage(2, stack_.get(i));
      }
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, path_);
      }
      if (!getTriggerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, trigger_);
      }
      if (!getEventBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, event_);
      }
      for (int i = 0; i < scope_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, scope_.getRaw(i));
      }
      if (!getFilterBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, filter_);
      }
      if (!getGraphBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, graph_);
      }
      if (!getRegionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, region_);
      }
      if (!getNodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, node_);
      }
      if (!getPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, port_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, index_);
      }
      for (int i = 0; i < stack_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, stack_.get(i));
      }
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, path_);
      }
      if (!getTriggerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, trigger_);
      }
      if (!getEventBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, event_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scope_.size(); i++) {
          dataSize += computeStringSizeNoTag(scope_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getScopeList().size();
      }
      if (!getFilterBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, filter_);
      }
      if (!getGraphBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, graph_);
      }
      if (!getRegionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, region_);
      }
      if (!getNodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, node_);
      }
      if (!getPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, port_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartSite)) {
        return super.equals(obj);
      }
      TideChart.TideChartSite other = (TideChart.TideChartSite) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (!getStackList()
          .equals(other.getStackList())) return false;
      if (!getPath()
          .equals(other.getPath())) return false;
      if (!getTrigger()
          .equals(other.getTrigger())) return false;
      if (!getEvent()
          .equals(other.getEvent())) return false;
      if (!getScopeList()
          .equals(other.getScopeList())) return false;
      if (!getFilter()
          .equals(other.getFilter())) return false;
      if (!getGraph()
          .equals(other.getGraph())) return false;
      if (!getRegion()
          .equals(other.getRegion())) return false;
      if (!getNode()
          .equals(other.getNode())) return false;
      if (!getPort()
          .equals(other.getPort())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIndex());
      if (getStackCount() > 0) {
        hash = (37 * hash) + STACK_FIELD_NUMBER;
        hash = (53 * hash) + getStackList().hashCode();
      }
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + TRIGGER_FIELD_NUMBER;
      hash = (53 * hash) + getTrigger().hashCode();
      hash = (37 * hash) + EVENT_FIELD_NUMBER;
      hash = (53 * hash) + getEvent().hashCode();
      if (getScopeCount() > 0) {
        hash = (37 * hash) + SCOPE_FIELD_NUMBER;
        hash = (53 * hash) + getScopeList().hashCode();
      }
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
      hash = (37 * hash) + GRAPH_FIELD_NUMBER;
      hash = (53 * hash) + getGraph().hashCode();
      hash = (37 * hash) + REGION_FIELD_NUMBER;
      hash = (53 * hash) + getRegion().hashCode();
      hash = (37 * hash) + NODE_FIELD_NUMBER;
      hash = (53 * hash) + getNode().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartSite parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartSite parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartSite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartSite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartSite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartSite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartSite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartSite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartSite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartSite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartSite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartSite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartSite prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartSite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartSite)
        TideChart.TideChartSiteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartSite_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartSite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartSite.class, TideChart.TideChartSite.Builder.class);
      }

      // Construct using TideChart.TideChartSite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStackFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        index_ = 0L;

        if (stackBuilder_ == null) {
          stack_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          stackBuilder_.clear();
        }
        path_ = "";

        trigger_ = "";

        event_ = "";

        scope_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        filter_ = "";

        graph_ = "";

        region_ = "";

        node_ = "";

        port_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartSite_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartSite getDefaultInstanceForType() {
        return TideChart.TideChartSite.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartSite build() {
        TideChart.TideChartSite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartSite buildPartial() {
        TideChart.TideChartSite result = new TideChart.TideChartSite(this);
        int from_bitField0_ = bitField0_;
        result.index_ = index_;
        if (stackBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            stack_ = java.util.Collections.unmodifiableList(stack_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.stack_ = stack_;
        } else {
          result.stack_ = stackBuilder_.build();
        }
        result.path_ = path_;
        result.trigger_ = trigger_;
        result.event_ = event_;
        if (((bitField0_ & 0x00000002) != 0)) {
          scope_ = scope_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.scope_ = scope_;
        result.filter_ = filter_;
        result.graph_ = graph_;
        result.region_ = region_;
        result.node_ = node_;
        result.port_ = port_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartSite) {
          return mergeFrom((TideChart.TideChartSite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartSite other) {
        if (other == TideChart.TideChartSite.getDefaultInstance()) return this;
        if (other.getIndex() != 0L) {
          setIndex(other.getIndex());
        }
        if (stackBuilder_ == null) {
          if (!other.stack_.isEmpty()) {
            if (stack_.isEmpty()) {
              stack_ = other.stack_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureStackIsMutable();
              stack_.addAll(other.stack_);
            }
            onChanged();
          }
        } else {
          if (!other.stack_.isEmpty()) {
            if (stackBuilder_.isEmpty()) {
              stackBuilder_.dispose();
              stackBuilder_ = null;
              stack_ = other.stack_;
              bitField0_ = (bitField0_ & ~0x00000001);
              stackBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStackFieldBuilder() : null;
            } else {
              stackBuilder_.addAllMessages(other.stack_);
            }
          }
        }
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (!other.getTrigger().isEmpty()) {
          trigger_ = other.trigger_;
          onChanged();
        }
        if (!other.getEvent().isEmpty()) {
          event_ = other.event_;
          onChanged();
        }
        if (!other.scope_.isEmpty()) {
          if (scope_.isEmpty()) {
            scope_ = other.scope_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureScopeIsMutable();
            scope_.addAll(other.scope_);
          }
          onChanged();
        }
        if (!other.getFilter().isEmpty()) {
          filter_ = other.filter_;
          onChanged();
        }
        if (!other.getGraph().isEmpty()) {
          graph_ = other.graph_;
          onChanged();
        }
        if (!other.getRegion().isEmpty()) {
          region_ = other.region_;
          onChanged();
        }
        if (!other.getNode().isEmpty()) {
          node_ = other.node_;
          onChanged();
        }
        if (!other.getPort().isEmpty()) {
          port_ = other.port_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartSite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartSite) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long index_ ;
      /**
       * <pre>
       * An index that uniquely identifies all message producers and consumers sites and sequences with messages
       * </pre>
       *
       * <code>int64 index = 1;</code>
       */
      public long getIndex() {
        return index_;
      }
      /**
       * <pre>
       * An index that uniquely identifies all message producers and consumers sites and sequences with messages
       * </pre>
       *
       * <code>int64 index = 1;</code>
       */
      public Builder setIndex(long value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An index that uniquely identifies all message producers and consumers sites and sequences with messages
       * </pre>
       *
       * <code>int64 index = 1;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartSite> stack_ =
        java.util.Collections.emptyList();
      private void ensureStackIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          stack_ = new java.util.ArrayList<TideChart.TideChartSite>(stack_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartSite, TideChart.TideChartSite.Builder, TideChart.TideChartSiteOrBuilder> stackBuilder_;

      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public java.util.List<TideChart.TideChartSite> getStackList() {
        if (stackBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stack_);
        } else {
          return stackBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public int getStackCount() {
        if (stackBuilder_ == null) {
          return stack_.size();
        } else {
          return stackBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public TideChart.TideChartSite getStack(int index) {
        if (stackBuilder_ == null) {
          return stack_.get(index);
        } else {
          return stackBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder setStack(
          int index, TideChart.TideChartSite value) {
        if (stackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStackIsMutable();
          stack_.set(index, value);
          onChanged();
        } else {
          stackBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder setStack(
          int index, TideChart.TideChartSite.Builder builderForValue) {
        if (stackBuilder_ == null) {
          ensureStackIsMutable();
          stack_.set(index, builderForValue.build());
          onChanged();
        } else {
          stackBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder addStack(TideChart.TideChartSite value) {
        if (stackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStackIsMutable();
          stack_.add(value);
          onChanged();
        } else {
          stackBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder addStack(
          int index, TideChart.TideChartSite value) {
        if (stackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStackIsMutable();
          stack_.add(index, value);
          onChanged();
        } else {
          stackBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder addStack(
          TideChart.TideChartSite.Builder builderForValue) {
        if (stackBuilder_ == null) {
          ensureStackIsMutable();
          stack_.add(builderForValue.build());
          onChanged();
        } else {
          stackBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder addStack(
          int index, TideChart.TideChartSite.Builder builderForValue) {
        if (stackBuilder_ == null) {
          ensureStackIsMutable();
          stack_.add(index, builderForValue.build());
          onChanged();
        } else {
          stackBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder addAllStack(
          java.lang.Iterable<? extends TideChart.TideChartSite> values) {
        if (stackBuilder_ == null) {
          ensureStackIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stack_);
          onChanged();
        } else {
          stackBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder clearStack() {
        if (stackBuilder_ == null) {
          stack_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          stackBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public Builder removeStack(int index) {
        if (stackBuilder_ == null) {
          ensureStackIsMutable();
          stack_.remove(index);
          onChanged();
        } else {
          stackBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public TideChart.TideChartSite.Builder getStackBuilder(
          int index) {
        return getStackFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public TideChart.TideChartSiteOrBuilder getStackOrBuilder(
          int index) {
        if (stackBuilder_ == null) {
          return stack_.get(index);  } else {
          return stackBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public java.util.List<? extends TideChart.TideChartSiteOrBuilder> 
           getStackOrBuilderList() {
        if (stackBuilder_ != null) {
          return stackBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stack_);
        }
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public TideChart.TideChartSite.Builder addStackBuilder() {
        return getStackFieldBuilder().addBuilder(
            TideChart.TideChartSite.getDefaultInstance());
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public TideChart.TideChartSite.Builder addStackBuilder(
          int index) {
        return getStackFieldBuilder().addBuilder(
            index, TideChart.TideChartSite.getDefaultInstance());
      }
      /**
       * <pre>
       * used to trace origin when calling into behavior nodes
       * </pre>
       *
       * <code>repeated .TideChartSite stack = 2;</code>
       */
      public java.util.List<TideChart.TideChartSite.Builder> 
           getStackBuilderList() {
        return getStackFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartSite, TideChart.TideChartSite.Builder, TideChart.TideChartSiteOrBuilder> 
          getStackFieldBuilder() {
        if (stackBuilder_ == null) {
          stackBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartSite, TideChart.TideChartSite.Builder, TideChart.TideChartSiteOrBuilder>(
                  stack_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          stack_ = null;
        }
        return stackBuilder_;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * Path in global state storage for events from state changes
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Path in global state storage for events from state changes
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Path in global state storage for events from state changes
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path in global state storage for events from state changes
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path in global state storage for events from state changes
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object trigger_ = "";
      /**
       * <pre>
       * Source that produced an event (when the source isn't a node)
       * </pre>
       *
       * <code>string trigger = 4;</code>
       */
      public java.lang.String getTrigger() {
        java.lang.Object ref = trigger_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          trigger_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Source that produced an event (when the source isn't a node)
       * </pre>
       *
       * <code>string trigger = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTriggerBytes() {
        java.lang.Object ref = trigger_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trigger_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Source that produced an event (when the source isn't a node)
       * </pre>
       *
       * <code>string trigger = 4;</code>
       */
      public Builder setTrigger(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        trigger_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Source that produced an event (when the source isn't a node)
       * </pre>
       *
       * <code>string trigger = 4;</code>
       */
      public Builder clearTrigger() {
        
        trigger_ = getDefaultInstance().getTrigger();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Source that produced an event (when the source isn't a node)
       * </pre>
       *
       * <code>string trigger = 4;</code>
       */
      public Builder setTriggerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        trigger_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object event_ = "";
      /**
       * <pre>
       * Name of event (used for event sources and targets)
       * </pre>
       *
       * <code>string event = 5;</code>
       */
      public java.lang.String getEvent() {
        java.lang.Object ref = event_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          event_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of event (used for event sources and targets)
       * </pre>
       *
       * <code>string event = 5;</code>
       */
      public com.google.protobuf.ByteString
          getEventBytes() {
        java.lang.Object ref = event_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          event_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of event (used for event sources and targets)
       * </pre>
       *
       * <code>string event = 5;</code>
       */
      public Builder setEvent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        event_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of event (used for event sources and targets)
       * </pre>
       *
       * <code>string event = 5;</code>
       */
      public Builder clearEvent() {
        
        event_ = getDefaultInstance().getEvent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of event (used for event sources and targets)
       * </pre>
       *
       * <code>string event = 5;</code>
       */
      public Builder setEventBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        event_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList scope_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureScopeIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          scope_ = new com.google.protobuf.LazyStringArrayList(scope_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getScopeList() {
        return scope_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public int getScopeCount() {
        return scope_.size();
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public java.lang.String getScope(int index) {
        return scope_.get(index);
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public com.google.protobuf.ByteString
          getScopeBytes(int index) {
        return scope_.getByteString(index);
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public Builder setScope(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureScopeIsMutable();
        scope_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public Builder addScope(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureScopeIsMutable();
        scope_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public Builder addAllScope(
          java.lang.Iterable<java.lang.String> values) {
        ensureScopeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scope_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public Builder clearScope() {
        scope_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for scoped event sites
       * </pre>
       *
       * <code>repeated string scope = 6;</code>
       */
      public Builder addScopeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureScopeIsMutable();
        scope_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object filter_ = "";
      /**
       * <pre>
       * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public java.lang.String getFilter() {
        java.lang.Object ref = filter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public com.google.protobuf.ByteString
          getFilterBytes() {
        java.lang.Object ref = filter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public Builder setFilter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public Builder clearFilter() {
        
        filter_ = getDefaultInstance().getFilter();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A filter that can conditionally pass messages thru the site (filtered messages are dropped)
       * </pre>
       *
       * <code>string filter = 7;</code>
       */
      public Builder setFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filter_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object graph_ = "";
      /**
       * <pre>
       * graph-name    - graph scripts and graph nodes can generate messages
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public java.lang.String getGraph() {
        java.lang.Object ref = graph_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          graph_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * graph-name    - graph scripts and graph nodes can generate messages
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public com.google.protobuf.ByteString
          getGraphBytes() {
        java.lang.Object ref = graph_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          graph_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * graph-name    - graph scripts and graph nodes can generate messages
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public Builder setGraph(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        graph_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * graph-name    - graph scripts and graph nodes can generate messages
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public Builder clearGraph() {
        
        graph_ = getDefaultInstance().getGraph();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * graph-name    - graph scripts and graph nodes can generate messages
       * </pre>
       *
       * <code>string graph = 8;</code>
       */
      public Builder setGraphBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        graph_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object region_ = "";
      /**
       * <pre>
       * region-name   - region scripts can generate messages
       * </pre>
       *
       * <code>string region = 9;</code>
       */
      public java.lang.String getRegion() {
        java.lang.Object ref = region_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          region_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * region-name   - region scripts can generate messages
       * </pre>
       *
       * <code>string region = 9;</code>
       */
      public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = region_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          region_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * region-name   - region scripts can generate messages
       * </pre>
       *
       * <code>string region = 9;</code>
       */
      public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        region_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * region-name   - region scripts can generate messages
       * </pre>
       *
       * <code>string region = 9;</code>
       */
      public Builder clearRegion() {
        
        region_ = getDefaultInstance().getRegion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * region-name   - region scripts can generate messages
       * </pre>
       *
       * <code>string region = 9;</code>
       */
      public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        region_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object node_ = "";
      /**
       * <pre>
       * node-name     - node actions and node ports an generate messages
       * </pre>
       *
       * <code>string node = 10;</code>
       */
      public java.lang.String getNode() {
        java.lang.Object ref = node_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          node_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * node-name     - node actions and node ports an generate messages
       * </pre>
       *
       * <code>string node = 10;</code>
       */
      public com.google.protobuf.ByteString
          getNodeBytes() {
        java.lang.Object ref = node_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          node_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * node-name     - node actions and node ports an generate messages
       * </pre>
       *
       * <code>string node = 10;</code>
       */
      public Builder setNode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        node_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * node-name     - node actions and node ports an generate messages
       * </pre>
       *
       * <code>string node = 10;</code>
       */
      public Builder clearNode() {
        
        node_ = getDefaultInstance().getNode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * node-name     - node actions and node ports an generate messages
       * </pre>
       *
       * <code>string node = 10;</code>
       */
      public Builder setNodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        node_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object port_ = "";
      /**
       * <pre>
       * port-name     - ports can generate and receive messages
       * </pre>
       *
       * <code>string port = 11;</code>
       */
      public java.lang.String getPort() {
        java.lang.Object ref = port_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          port_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * port-name     - ports can generate and receive messages
       * </pre>
       *
       * <code>string port = 11;</code>
       */
      public com.google.protobuf.ByteString
          getPortBytes() {
        java.lang.Object ref = port_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          port_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * port-name     - ports can generate and receive messages
       * </pre>
       *
       * <code>string port = 11;</code>
       */
      public Builder setPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port-name     - ports can generate and receive messages
       * </pre>
       *
       * <code>string port = 11;</code>
       */
      public Builder clearPort() {
        
        port_ = getDefaultInstance().getPort();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port-name     - ports can generate and receive messages
       * </pre>
       *
       * <code>string port = 11;</code>
       */
      public Builder setPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        port_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartSite)
    }

    // @@protoc_insertion_point(class_scope:TideChartSite)
    private static final TideChart.TideChartSite DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartSite();
    }

    public static TideChart.TideChartSite getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartSite>
        PARSER = new com.google.protobuf.AbstractParser<TideChartSite>() {
      @java.lang.Override
      public TideChartSite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartSite(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartSite> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartSite> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartSite getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique sequence number for all messages and sites (execution scope)
     * </pre>
     *
     * <code>int64 index = 1;</code>
     */
    long getIndex();

    /**
     * <pre>
     * timestamp when the message was routed from the source
     * </pre>
     *
     * <code>int64 timestamp = 2;</code>
     */
    long getTimestamp();

    /**
     * <pre>
     * first index of this message (messages are immutable)
     * </pre>
     *
     * <code>int64 origin = 4;</code>
     */
    long getOrigin();

    /**
     * <pre>
     * previous index of this message based on message routing thru graph
     * </pre>
     *
     * <code>int64 previous = 5;</code>
     */
    long getPrevious();

    /**
     * <pre>
     * source producer the message came from (index for a producer site)
     * </pre>
     *
     * <code>int64 source = 7;</code>
     */
    long getSource();

    /**
     * <pre>
     * target consumer the message is going to (index for a consumer site)
     * </pre>
     *
     * <code>int64 target = 8;</code>
     */
    long getTarget();

    /**
     * <pre>
     * timestamp when the message arrives at the target site
     * </pre>
     *
     * <code>int64 delayUntil = 9;</code>
     */
    long getDelayUntil();

    /**
     * <pre>
     * index to a producer site that will release the message to the target site (use with site filter to create conditional blocking)
     * </pre>
     *
     * <code>int64 holdToken = 10;</code>
     */
    long getHoldToken();

    /**
     * <pre>
     * index to a producer site that will cancel the message (stop routing and remove from inports)
     * </pre>
     *
     * <code>int64 cancelToken = 11;</code>
     */
    long getCancelToken();

    /**
     * <pre>
     * type of message content 
     * </pre>
     *
     * <code>string type = 12;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of message content 
     * </pre>
     *
     * <code>string type = 12;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * version incremented every time the message content changes for the same origin
     * </pre>
     *
     * <code>int32 version = 13;</code>
     */
    int getVersion();

    /**
     * <pre>
     * string encoded message content
     * </pre>
     *
     * <code>string jsonContent = 14;</code>
     */
    java.lang.String getJsonContent();
    /**
     * <pre>
     * string encoded message content
     * </pre>
     *
     * <code>string jsonContent = 14;</code>
     */
    com.google.protobuf.ByteString
        getJsonContentBytes();

    /**
     * <pre>
     * binary encoded message content
     * </pre>
     *
     * <code>bytes msgContent = 15;</code>
     */
    com.google.protobuf.ByteString getMsgContent();

    public TideChart.TideChartMessage.ContentCase getContentCase();
  }
  /**
   * Protobuf type {@code TideChartMessage}
   */
  public  static final class TideChartMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartMessage)
      TideChartMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartMessage.newBuilder() to construct.
    private TideChartMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartMessage() {
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              index_ = input.readInt64();
              break;
            }
            case 16: {

              timestamp_ = input.readInt64();
              break;
            }
            case 32: {

              origin_ = input.readInt64();
              break;
            }
            case 40: {

              previous_ = input.readInt64();
              break;
            }
            case 56: {

              source_ = input.readInt64();
              break;
            }
            case 64: {

              target_ = input.readInt64();
              break;
            }
            case 72: {

              delayUntil_ = input.readInt64();
              break;
            }
            case 80: {

              holdToken_ = input.readInt64();
              break;
            }
            case 88: {

              cancelToken_ = input.readInt64();
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 104: {

              version_ = input.readInt32();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();
              contentCase_ = 14;
              content_ = s;
              break;
            }
            case 122: {
              contentCase_ = 15;
              content_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartMessage.class, TideChart.TideChartMessage.Builder.class);
    }

    private int contentCase_ = 0;
    private java.lang.Object content_;
    public enum ContentCase
        implements com.google.protobuf.Internal.EnumLite {
      JSONCONTENT(14),
      MSGCONTENT(15),
      CONTENT_NOT_SET(0);
      private final int value;
      private ContentCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContentCase forNumber(int value) {
        switch (value) {
          case 14: return JSONCONTENT;
          case 15: return MSGCONTENT;
          case 0: return CONTENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ContentCase
    getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private long index_;
    /**
     * <pre>
     * unique sequence number for all messages and sites (execution scope)
     * </pre>
     *
     * <code>int64 index = 1;</code>
     */
    public long getIndex() {
      return index_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <pre>
     * timestamp when the message was routed from the source
     * </pre>
     *
     * <code>int64 timestamp = 2;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 4;
    private long origin_;
    /**
     * <pre>
     * first index of this message (messages are immutable)
     * </pre>
     *
     * <code>int64 origin = 4;</code>
     */
    public long getOrigin() {
      return origin_;
    }

    public static final int PREVIOUS_FIELD_NUMBER = 5;
    private long previous_;
    /**
     * <pre>
     * previous index of this message based on message routing thru graph
     * </pre>
     *
     * <code>int64 previous = 5;</code>
     */
    public long getPrevious() {
      return previous_;
    }

    public static final int SOURCE_FIELD_NUMBER = 7;
    private long source_;
    /**
     * <pre>
     * source producer the message came from (index for a producer site)
     * </pre>
     *
     * <code>int64 source = 7;</code>
     */
    public long getSource() {
      return source_;
    }

    public static final int TARGET_FIELD_NUMBER = 8;
    private long target_;
    /**
     * <pre>
     * target consumer the message is going to (index for a consumer site)
     * </pre>
     *
     * <code>int64 target = 8;</code>
     */
    public long getTarget() {
      return target_;
    }

    public static final int DELAYUNTIL_FIELD_NUMBER = 9;
    private long delayUntil_;
    /**
     * <pre>
     * timestamp when the message arrives at the target site
     * </pre>
     *
     * <code>int64 delayUntil = 9;</code>
     */
    public long getDelayUntil() {
      return delayUntil_;
    }

    public static final int HOLDTOKEN_FIELD_NUMBER = 10;
    private long holdToken_;
    /**
     * <pre>
     * index to a producer site that will release the message to the target site (use with site filter to create conditional blocking)
     * </pre>
     *
     * <code>int64 holdToken = 10;</code>
     */
    public long getHoldToken() {
      return holdToken_;
    }

    public static final int CANCELTOKEN_FIELD_NUMBER = 11;
    private long cancelToken_;
    /**
     * <pre>
     * index to a producer site that will cancel the message (stop routing and remove from inports)
     * </pre>
     *
     * <code>int64 cancelToken = 11;</code>
     */
    public long getCancelToken() {
      return cancelToken_;
    }

    public static final int TYPE_FIELD_NUMBER = 12;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * type of message content 
     * </pre>
     *
     * <code>string type = 12;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * type of message content 
     * </pre>
     *
     * <code>string type = 12;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 13;
    private int version_;
    /**
     * <pre>
     * version incremented every time the message content changes for the same origin
     * </pre>
     *
     * <code>int32 version = 13;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int JSONCONTENT_FIELD_NUMBER = 14;
    /**
     * <pre>
     * string encoded message content
     * </pre>
     *
     * <code>string jsonContent = 14;</code>
     */
    public java.lang.String getJsonContent() {
      java.lang.Object ref = "";
      if (contentCase_ == 14) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (contentCase_ == 14) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * string encoded message content
     * </pre>
     *
     * <code>string jsonContent = 14;</code>
     */
    public com.google.protobuf.ByteString
        getJsonContentBytes() {
      java.lang.Object ref = "";
      if (contentCase_ == 14) {
        ref = content_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (contentCase_ == 14) {
          content_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MSGCONTENT_FIELD_NUMBER = 15;
    /**
     * <pre>
     * binary encoded message content
     * </pre>
     *
     * <code>bytes msgContent = 15;</code>
     */
    public com.google.protobuf.ByteString getMsgContent() {
      if (contentCase_ == 15) {
        return (com.google.protobuf.ByteString) content_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (index_ != 0L) {
        output.writeInt64(1, index_);
      }
      if (timestamp_ != 0L) {
        output.writeInt64(2, timestamp_);
      }
      if (origin_ != 0L) {
        output.writeInt64(4, origin_);
      }
      if (previous_ != 0L) {
        output.writeInt64(5, previous_);
      }
      if (source_ != 0L) {
        output.writeInt64(7, source_);
      }
      if (target_ != 0L) {
        output.writeInt64(8, target_);
      }
      if (delayUntil_ != 0L) {
        output.writeInt64(9, delayUntil_);
      }
      if (holdToken_ != 0L) {
        output.writeInt64(10, holdToken_);
      }
      if (cancelToken_ != 0L) {
        output.writeInt64(11, cancelToken_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, type_);
      }
      if (version_ != 0) {
        output.writeInt32(13, version_);
      }
      if (contentCase_ == 14) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, content_);
      }
      if (contentCase_ == 15) {
        output.writeBytes(
            15, (com.google.protobuf.ByteString) content_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (index_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, index_);
      }
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (origin_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, origin_);
      }
      if (previous_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, previous_);
      }
      if (source_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, source_);
      }
      if (target_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, target_);
      }
      if (delayUntil_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, delayUntil_);
      }
      if (holdToken_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, holdToken_);
      }
      if (cancelToken_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, cancelToken_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, type_);
      }
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, version_);
      }
      if (contentCase_ == 14) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, content_);
      }
      if (contentCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              15, (com.google.protobuf.ByteString) content_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartMessage)) {
        return super.equals(obj);
      }
      TideChart.TideChartMessage other = (TideChart.TideChartMessage) obj;

      if (getIndex()
          != other.getIndex()) return false;
      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (getOrigin()
          != other.getOrigin()) return false;
      if (getPrevious()
          != other.getPrevious()) return false;
      if (getSource()
          != other.getSource()) return false;
      if (getTarget()
          != other.getTarget()) return false;
      if (getDelayUntil()
          != other.getDelayUntil()) return false;
      if (getHoldToken()
          != other.getHoldToken()) return false;
      if (getCancelToken()
          != other.getCancelToken()) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (getVersion()
          != other.getVersion()) return false;
      if (!getContentCase().equals(other.getContentCase())) return false;
      switch (contentCase_) {
        case 14:
          if (!getJsonContent()
              .equals(other.getJsonContent())) return false;
          break;
        case 15:
          if (!getMsgContent()
              .equals(other.getMsgContent())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIndex());
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOrigin());
      hash = (37 * hash) + PREVIOUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPrevious());
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSource());
      hash = (37 * hash) + TARGET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTarget());
      hash = (37 * hash) + DELAYUNTIL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDelayUntil());
      hash = (37 * hash) + HOLDTOKEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHoldToken());
      hash = (37 * hash) + CANCELTOKEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCancelToken());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      switch (contentCase_) {
        case 14:
          hash = (37 * hash) + JSONCONTENT_FIELD_NUMBER;
          hash = (53 * hash) + getJsonContent().hashCode();
          break;
        case 15:
          hash = (37 * hash) + MSGCONTENT_FIELD_NUMBER;
          hash = (53 * hash) + getMsgContent().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartMessage)
        TideChart.TideChartMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartMessage.class, TideChart.TideChartMessage.Builder.class);
      }

      // Construct using TideChart.TideChartMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        index_ = 0L;

        timestamp_ = 0L;

        origin_ = 0L;

        previous_ = 0L;

        source_ = 0L;

        target_ = 0L;

        delayUntil_ = 0L;

        holdToken_ = 0L;

        cancelToken_ = 0L;

        type_ = "";

        version_ = 0;

        contentCase_ = 0;
        content_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartMessage_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartMessage getDefaultInstanceForType() {
        return TideChart.TideChartMessage.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartMessage build() {
        TideChart.TideChartMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartMessage buildPartial() {
        TideChart.TideChartMessage result = new TideChart.TideChartMessage(this);
        result.index_ = index_;
        result.timestamp_ = timestamp_;
        result.origin_ = origin_;
        result.previous_ = previous_;
        result.source_ = source_;
        result.target_ = target_;
        result.delayUntil_ = delayUntil_;
        result.holdToken_ = holdToken_;
        result.cancelToken_ = cancelToken_;
        result.type_ = type_;
        result.version_ = version_;
        if (contentCase_ == 14) {
          result.content_ = content_;
        }
        if (contentCase_ == 15) {
          result.content_ = content_;
        }
        result.contentCase_ = contentCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartMessage) {
          return mergeFrom((TideChart.TideChartMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartMessage other) {
        if (other == TideChart.TideChartMessage.getDefaultInstance()) return this;
        if (other.getIndex() != 0L) {
          setIndex(other.getIndex());
        }
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getOrigin() != 0L) {
          setOrigin(other.getOrigin());
        }
        if (other.getPrevious() != 0L) {
          setPrevious(other.getPrevious());
        }
        if (other.getSource() != 0L) {
          setSource(other.getSource());
        }
        if (other.getTarget() != 0L) {
          setTarget(other.getTarget());
        }
        if (other.getDelayUntil() != 0L) {
          setDelayUntil(other.getDelayUntil());
        }
        if (other.getHoldToken() != 0L) {
          setHoldToken(other.getHoldToken());
        }
        if (other.getCancelToken() != 0L) {
          setCancelToken(other.getCancelToken());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        switch (other.getContentCase()) {
          case JSONCONTENT: {
            contentCase_ = 14;
            content_ = other.content_;
            onChanged();
            break;
          }
          case MSGCONTENT: {
            setMsgContent(other.getMsgContent());
            break;
          }
          case CONTENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int contentCase_ = 0;
      private java.lang.Object content_;
      public ContentCase
          getContentCase() {
        return ContentCase.forNumber(
            contentCase_);
      }

      public Builder clearContent() {
        contentCase_ = 0;
        content_ = null;
        onChanged();
        return this;
      }


      private long index_ ;
      /**
       * <pre>
       * unique sequence number for all messages and sites (execution scope)
       * </pre>
       *
       * <code>int64 index = 1;</code>
       */
      public long getIndex() {
        return index_;
      }
      /**
       * <pre>
       * unique sequence number for all messages and sites (execution scope)
       * </pre>
       *
       * <code>int64 index = 1;</code>
       */
      public Builder setIndex(long value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique sequence number for all messages and sites (execution scope)
       * </pre>
       *
       * <code>int64 index = 1;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0L;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <pre>
       * timestamp when the message was routed from the source
       * </pre>
       *
       * <code>int64 timestamp = 2;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * timestamp when the message was routed from the source
       * </pre>
       *
       * <code>int64 timestamp = 2;</code>
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * timestamp when the message was routed from the source
       * </pre>
       *
       * <code>int64 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private long origin_ ;
      /**
       * <pre>
       * first index of this message (messages are immutable)
       * </pre>
       *
       * <code>int64 origin = 4;</code>
       */
      public long getOrigin() {
        return origin_;
      }
      /**
       * <pre>
       * first index of this message (messages are immutable)
       * </pre>
       *
       * <code>int64 origin = 4;</code>
       */
      public Builder setOrigin(long value) {
        
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * first index of this message (messages are immutable)
       * </pre>
       *
       * <code>int64 origin = 4;</code>
       */
      public Builder clearOrigin() {
        
        origin_ = 0L;
        onChanged();
        return this;
      }

      private long previous_ ;
      /**
       * <pre>
       * previous index of this message based on message routing thru graph
       * </pre>
       *
       * <code>int64 previous = 5;</code>
       */
      public long getPrevious() {
        return previous_;
      }
      /**
       * <pre>
       * previous index of this message based on message routing thru graph
       * </pre>
       *
       * <code>int64 previous = 5;</code>
       */
      public Builder setPrevious(long value) {
        
        previous_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous index of this message based on message routing thru graph
       * </pre>
       *
       * <code>int64 previous = 5;</code>
       */
      public Builder clearPrevious() {
        
        previous_ = 0L;
        onChanged();
        return this;
      }

      private long source_ ;
      /**
       * <pre>
       * source producer the message came from (index for a producer site)
       * </pre>
       *
       * <code>int64 source = 7;</code>
       */
      public long getSource() {
        return source_;
      }
      /**
       * <pre>
       * source producer the message came from (index for a producer site)
       * </pre>
       *
       * <code>int64 source = 7;</code>
       */
      public Builder setSource(long value) {
        
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * source producer the message came from (index for a producer site)
       * </pre>
       *
       * <code>int64 source = 7;</code>
       */
      public Builder clearSource() {
        
        source_ = 0L;
        onChanged();
        return this;
      }

      private long target_ ;
      /**
       * <pre>
       * target consumer the message is going to (index for a consumer site)
       * </pre>
       *
       * <code>int64 target = 8;</code>
       */
      public long getTarget() {
        return target_;
      }
      /**
       * <pre>
       * target consumer the message is going to (index for a consumer site)
       * </pre>
       *
       * <code>int64 target = 8;</code>
       */
      public Builder setTarget(long value) {
        
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * target consumer the message is going to (index for a consumer site)
       * </pre>
       *
       * <code>int64 target = 8;</code>
       */
      public Builder clearTarget() {
        
        target_ = 0L;
        onChanged();
        return this;
      }

      private long delayUntil_ ;
      /**
       * <pre>
       * timestamp when the message arrives at the target site
       * </pre>
       *
       * <code>int64 delayUntil = 9;</code>
       */
      public long getDelayUntil() {
        return delayUntil_;
      }
      /**
       * <pre>
       * timestamp when the message arrives at the target site
       * </pre>
       *
       * <code>int64 delayUntil = 9;</code>
       */
      public Builder setDelayUntil(long value) {
        
        delayUntil_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * timestamp when the message arrives at the target site
       * </pre>
       *
       * <code>int64 delayUntil = 9;</code>
       */
      public Builder clearDelayUntil() {
        
        delayUntil_ = 0L;
        onChanged();
        return this;
      }

      private long holdToken_ ;
      /**
       * <pre>
       * index to a producer site that will release the message to the target site (use with site filter to create conditional blocking)
       * </pre>
       *
       * <code>int64 holdToken = 10;</code>
       */
      public long getHoldToken() {
        return holdToken_;
      }
      /**
       * <pre>
       * index to a producer site that will release the message to the target site (use with site filter to create conditional blocking)
       * </pre>
       *
       * <code>int64 holdToken = 10;</code>
       */
      public Builder setHoldToken(long value) {
        
        holdToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * index to a producer site that will release the message to the target site (use with site filter to create conditional blocking)
       * </pre>
       *
       * <code>int64 holdToken = 10;</code>
       */
      public Builder clearHoldToken() {
        
        holdToken_ = 0L;
        onChanged();
        return this;
      }

      private long cancelToken_ ;
      /**
       * <pre>
       * index to a producer site that will cancel the message (stop routing and remove from inports)
       * </pre>
       *
       * <code>int64 cancelToken = 11;</code>
       */
      public long getCancelToken() {
        return cancelToken_;
      }
      /**
       * <pre>
       * index to a producer site that will cancel the message (stop routing and remove from inports)
       * </pre>
       *
       * <code>int64 cancelToken = 11;</code>
       */
      public Builder setCancelToken(long value) {
        
        cancelToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * index to a producer site that will cancel the message (stop routing and remove from inports)
       * </pre>
       *
       * <code>int64 cancelToken = 11;</code>
       */
      public Builder clearCancelToken() {
        
        cancelToken_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of message content 
       * </pre>
       *
       * <code>string type = 12;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of message content 
       * </pre>
       *
       * <code>string type = 12;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of message content 
       * </pre>
       *
       * <code>string type = 12;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of message content 
       * </pre>
       *
       * <code>string type = 12;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of message content 
       * </pre>
       *
       * <code>string type = 12;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <pre>
       * version incremented every time the message content changes for the same origin
       * </pre>
       *
       * <code>int32 version = 13;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * version incremented every time the message content changes for the same origin
       * </pre>
       *
       * <code>int32 version = 13;</code>
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * version incremented every time the message content changes for the same origin
       * </pre>
       *
       * <code>int32 version = 13;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * string encoded message content
       * </pre>
       *
       * <code>string jsonContent = 14;</code>
       */
      public java.lang.String getJsonContent() {
        java.lang.Object ref = "";
        if (contentCase_ == 14) {
          ref = content_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (contentCase_ == 14) {
            content_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * string encoded message content
       * </pre>
       *
       * <code>string jsonContent = 14;</code>
       */
      public com.google.protobuf.ByteString
          getJsonContentBytes() {
        java.lang.Object ref = "";
        if (contentCase_ == 14) {
          ref = content_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (contentCase_ == 14) {
            content_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * string encoded message content
       * </pre>
       *
       * <code>string jsonContent = 14;</code>
       */
      public Builder setJsonContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 14;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * string encoded message content
       * </pre>
       *
       * <code>string jsonContent = 14;</code>
       */
      public Builder clearJsonContent() {
        if (contentCase_ == 14) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * string encoded message content
       * </pre>
       *
       * <code>string jsonContent = 14;</code>
       */
      public Builder setJsonContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        contentCase_ = 14;
        content_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * binary encoded message content
       * </pre>
       *
       * <code>bytes msgContent = 15;</code>
       */
      public com.google.protobuf.ByteString getMsgContent() {
        if (contentCase_ == 15) {
          return (com.google.protobuf.ByteString) content_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * binary encoded message content
       * </pre>
       *
       * <code>bytes msgContent = 15;</code>
       */
      public Builder setMsgContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 15;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * binary encoded message content
       * </pre>
       *
       * <code>bytes msgContent = 15;</code>
       */
      public Builder clearMsgContent() {
        if (contentCase_ == 15) {
          contentCase_ = 0;
          content_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartMessage)
    }

    // @@protoc_insertion_point(class_scope:TideChartMessage)
    private static final TideChart.TideChartMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartMessage();
    }

    public static TideChart.TideChartMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartMessage>
        PARSER = new com.google.protobuf.AbstractParser<TideChartMessage>() {
      @java.lang.Override
      public TideChartMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for this chart version
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * unique id for this chart version
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * branch this version is associated with
     * </pre>
     *
     * <code>string branch = 2;</code>
     */
    java.lang.String getBranch();
    /**
     * <pre>
     * branch this version is associated with
     * </pre>
     *
     * <code>string branch = 2;</code>
     */
    com.google.protobuf.ByteString
        getBranchBytes();

    /**
     * <pre>
     * previous version
     * </pre>
     *
     * <code>string source = 3;</code>
     */
    java.lang.String getSource();
    /**
     * <pre>
     * previous version
     * </pre>
     *
     * <code>string source = 3;</code>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <pre>
     * last version id on branch merging into
     * </pre>
     *
     * <code>string merge = 4;</code>
     */
    java.lang.String getMerge();
    /**
     * <pre>
     * last version id on branch merging into
     * </pre>
     *
     * <code>string merge = 4;</code>
     */
    com.google.protobuf.ByteString
        getMergeBytes();

    /**
     * <pre>
     * date version of the chart was committed
     * </pre>
     *
     * <code>string commitDate = 5;</code>
     */
    java.lang.String getCommitDate();
    /**
     * <pre>
     * date version of the chart was committed
     * </pre>
     *
     * <code>string commitDate = 5;</code>
     */
    com.google.protobuf.ByteString
        getCommitDateBytes();

    /**
     * <pre>
     * user that committed latest version
     * </pre>
     *
     * <code>string commitBy = 6;</code>
     */
    java.lang.String getCommitBy();
    /**
     * <pre>
     * user that committed latest version
     * </pre>
     *
     * <code>string commitBy = 6;</code>
     */
    com.google.protobuf.ByteString
        getCommitByBytes();

    /**
     * <pre>
     * short commit comment
     * </pre>
     *
     * <code>string commitDesc = 7;</code>
     */
    java.lang.String getCommitDesc();
    /**
     * <pre>
     * short commit comment
     * </pre>
     *
     * <code>string commitDesc = 7;</code>
     */
    com.google.protobuf.ByteString
        getCommitDescBytes();

    /**
     * <pre>
     * longer commit notes
     * </pre>
     *
     * <code>string commitNotes = 8;</code>
     */
    java.lang.String getCommitNotes();
    /**
     * <pre>
     * longer commit notes
     * </pre>
     *
     * <code>string commitNotes = 8;</code>
     */
    com.google.protobuf.ByteString
        getCommitNotesBytes();

    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    java.util.List<TideChart.TideChartGraph> 
        getSheetsList();
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    TideChart.TideChartGraph getSheets(int index);
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    int getSheetsCount();
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    java.util.List<? extends TideChart.TideChartGraphOrBuilder> 
        getSheetsOrBuilderList();
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    TideChart.TideChartGraphOrBuilder getSheetsOrBuilder(
        int index);

    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getPropsList();
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    TideChart.TideChartProperty getProps(int index);
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    int getPropsCount();
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList();
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index);

    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    java.util.List<TideChart.TideChartNote> 
        getNotesList();
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    TideChart.TideChartNote getNotes(int index);
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    int getNotesCount();
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList();
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index);

    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    java.util.List<TideChart.TideChartLibrary> 
        getLibraryList();
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    TideChart.TideChartLibrary getLibrary(int index);
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    int getLibraryCount();
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    java.util.List<? extends TideChart.TideChartLibraryOrBuilder> 
        getLibraryOrBuilderList();
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    TideChart.TideChartLibraryOrBuilder getLibraryOrBuilder(
        int index);

    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    java.util.List<TideChart.TideChartProperty> 
        getGlobalList();
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    TideChart.TideChartProperty getGlobal(int index);
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    int getGlobalCount();
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getGlobalOrBuilderList();
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    TideChart.TideChartPropertyOrBuilder getGlobalOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TideChartData}
   */
  public  static final class TideChartData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartData)
      TideChartDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartData.newBuilder() to construct.
    private TideChartData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartData() {
      version_ = "";
      branch_ = "";
      source_ = "";
      merge_ = "";
      commitDate_ = "";
      commitBy_ = "";
      commitDesc_ = "";
      commitNotes_ = "";
      sheets_ = java.util.Collections.emptyList();
      props_ = java.util.Collections.emptyList();
      notes_ = java.util.Collections.emptyList();
      library_ = java.util.Collections.emptyList();
      global_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              branch_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              merge_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              commitDate_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              commitBy_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              commitDesc_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              commitNotes_ = s;
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                sheets_ = new java.util.ArrayList<TideChart.TideChartGraph>();
                mutable_bitField0_ |= 0x00000001;
              }
              sheets_.add(
                  input.readMessage(TideChart.TideChartGraph.parser(), extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                props_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000002;
              }
              props_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                notes_ = new java.util.ArrayList<TideChart.TideChartNote>();
                mutable_bitField0_ |= 0x00000004;
              }
              notes_.add(
                  input.readMessage(TideChart.TideChartNote.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                library_ = new java.util.ArrayList<TideChart.TideChartLibrary>();
                mutable_bitField0_ |= 0x00000008;
              }
              library_.add(
                  input.readMessage(TideChart.TideChartLibrary.parser(), extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                global_ = new java.util.ArrayList<TideChart.TideChartProperty>();
                mutable_bitField0_ |= 0x00000010;
              }
              global_.add(
                  input.readMessage(TideChart.TideChartProperty.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          sheets_ = java.util.Collections.unmodifiableList(sheets_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          props_ = java.util.Collections.unmodifiableList(props_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          notes_ = java.util.Collections.unmodifiableList(notes_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          library_ = java.util.Collections.unmodifiableList(library_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          global_ = java.util.Collections.unmodifiableList(global_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartData.class, TideChart.TideChartData.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * unique id for this chart version
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for this chart version
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BRANCH_FIELD_NUMBER = 2;
    private volatile java.lang.Object branch_;
    /**
     * <pre>
     * branch this version is associated with
     * </pre>
     *
     * <code>string branch = 2;</code>
     */
    public java.lang.String getBranch() {
      java.lang.Object ref = branch_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        branch_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * branch this version is associated with
     * </pre>
     *
     * <code>string branch = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBranchBytes() {
      java.lang.Object ref = branch_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        branch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private volatile java.lang.Object source_;
    /**
     * <pre>
     * previous version
     * </pre>
     *
     * <code>string source = 3;</code>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * previous version
     * </pre>
     *
     * <code>string source = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MERGE_FIELD_NUMBER = 4;
    private volatile java.lang.Object merge_;
    /**
     * <pre>
     * last version id on branch merging into
     * </pre>
     *
     * <code>string merge = 4;</code>
     */
    public java.lang.String getMerge() {
      java.lang.Object ref = merge_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        merge_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * last version id on branch merging into
     * </pre>
     *
     * <code>string merge = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMergeBytes() {
      java.lang.Object ref = merge_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        merge_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMITDATE_FIELD_NUMBER = 5;
    private volatile java.lang.Object commitDate_;
    /**
     * <pre>
     * date version of the chart was committed
     * </pre>
     *
     * <code>string commitDate = 5;</code>
     */
    public java.lang.String getCommitDate() {
      java.lang.Object ref = commitDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * date version of the chart was committed
     * </pre>
     *
     * <code>string commitDate = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCommitDateBytes() {
      java.lang.Object ref = commitDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMITBY_FIELD_NUMBER = 6;
    private volatile java.lang.Object commitBy_;
    /**
     * <pre>
     * user that committed latest version
     * </pre>
     *
     * <code>string commitBy = 6;</code>
     */
    public java.lang.String getCommitBy() {
      java.lang.Object ref = commitBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * user that committed latest version
     * </pre>
     *
     * <code>string commitBy = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCommitByBytes() {
      java.lang.Object ref = commitBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMITDESC_FIELD_NUMBER = 7;
    private volatile java.lang.Object commitDesc_;
    /**
     * <pre>
     * short commit comment
     * </pre>
     *
     * <code>string commitDesc = 7;</code>
     */
    public java.lang.String getCommitDesc() {
      java.lang.Object ref = commitDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * short commit comment
     * </pre>
     *
     * <code>string commitDesc = 7;</code>
     */
    public com.google.protobuf.ByteString
        getCommitDescBytes() {
      java.lang.Object ref = commitDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMITNOTES_FIELD_NUMBER = 8;
    private volatile java.lang.Object commitNotes_;
    /**
     * <pre>
     * longer commit notes
     * </pre>
     *
     * <code>string commitNotes = 8;</code>
     */
    public java.lang.String getCommitNotes() {
      java.lang.Object ref = commitNotes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitNotes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * longer commit notes
     * </pre>
     *
     * <code>string commitNotes = 8;</code>
     */
    public com.google.protobuf.ByteString
        getCommitNotesBytes() {
      java.lang.Object ref = commitNotes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitNotes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHEETS_FIELD_NUMBER = 9;
    private java.util.List<TideChart.TideChartGraph> sheets_;
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    public java.util.List<TideChart.TideChartGraph> getSheetsList() {
      return sheets_;
    }
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    public java.util.List<? extends TideChart.TideChartGraphOrBuilder> 
        getSheetsOrBuilderList() {
      return sheets_;
    }
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    public int getSheetsCount() {
      return sheets_.size();
    }
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    public TideChart.TideChartGraph getSheets(int index) {
      return sheets_.get(index);
    }
    /**
     * <pre>
     * graphs contained in the chart
     * </pre>
     *
     * <code>repeated .TideChartGraph sheets = 9;</code>
     */
    public TideChart.TideChartGraphOrBuilder getSheetsOrBuilder(
        int index) {
      return sheets_.get(index);
    }

    public static final int PROPS_FIELD_NUMBER = 10;
    private java.util.List<TideChart.TideChartProperty> props_;
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getPropsList() {
      return props_;
    }
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getPropsOrBuilderList() {
      return props_;
    }
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    public int getPropsCount() {
      return props_.size();
    }
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    public TideChart.TideChartProperty getProps(int index) {
      return props_.get(index);
    }
    /**
     * <pre>
     * configuration properties for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartProperty props = 10;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
        int index) {
      return props_.get(index);
    }

    public static final int NOTES_FIELD_NUMBER = 11;
    private java.util.List<TideChart.TideChartNote> notes_;
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    public java.util.List<TideChart.TideChartNote> getNotesList() {
      return notes_;
    }
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
        getNotesOrBuilderList() {
      return notes_;
    }
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    public int getNotesCount() {
      return notes_.size();
    }
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    public TideChart.TideChartNote getNotes(int index) {
      return notes_.get(index);
    }
    /**
     * <pre>
     * note discussion for the entire chart
     * </pre>
     *
     * <code>repeated .TideChartNote notes = 11;</code>
     */
    public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
        int index) {
      return notes_.get(index);
    }

    public static final int LIBRARY_FIELD_NUMBER = 12;
    private java.util.List<TideChart.TideChartLibrary> library_;
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    public java.util.List<TideChart.TideChartLibrary> getLibraryList() {
      return library_;
    }
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    public java.util.List<? extends TideChart.TideChartLibraryOrBuilder> 
        getLibraryOrBuilderList() {
      return library_;
    }
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    public int getLibraryCount() {
      return library_.size();
    }
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    public TideChart.TideChartLibrary getLibrary(int index) {
      return library_.get(index);
    }
    /**
     * <pre>
     * source of node templates that can be added to graphs
     * </pre>
     *
     * <code>repeated .TideChartLibrary library = 12;</code>
     */
    public TideChart.TideChartLibraryOrBuilder getLibraryOrBuilder(
        int index) {
      return library_.get(index);
    }

    public static final int GLOBAL_FIELD_NUMBER = 13;
    private java.util.List<TideChart.TideChartProperty> global_;
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    public java.util.List<TideChart.TideChartProperty> getGlobalList() {
      return global_;
    }
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
        getGlobalOrBuilderList() {
      return global_;
    }
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    public int getGlobalCount() {
      return global_.size();
    }
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    public TideChart.TideChartProperty getGlobal(int index) {
      return global_.get(index);
    }
    /**
     * <pre>
     * global state variables shared by all graphs
     * </pre>
     *
     * <code>repeated .TideChartProperty global = 13;</code>
     */
    public TideChart.TideChartPropertyOrBuilder getGlobalOrBuilder(
        int index) {
      return global_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
      }
      if (!getBranchBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, branch_);
      }
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, source_);
      }
      if (!getMergeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, merge_);
      }
      if (!getCommitDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, commitDate_);
      }
      if (!getCommitByBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, commitBy_);
      }
      if (!getCommitDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, commitDesc_);
      }
      if (!getCommitNotesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, commitNotes_);
      }
      for (int i = 0; i < sheets_.size(); i++) {
        output.writeMessage(9, sheets_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        output.writeMessage(10, props_.get(i));
      }
      for (int i = 0; i < notes_.size(); i++) {
        output.writeMessage(11, notes_.get(i));
      }
      for (int i = 0; i < library_.size(); i++) {
        output.writeMessage(12, library_.get(i));
      }
      for (int i = 0; i < global_.size(); i++) {
        output.writeMessage(13, global_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
      }
      if (!getBranchBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, branch_);
      }
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, source_);
      }
      if (!getMergeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, merge_);
      }
      if (!getCommitDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, commitDate_);
      }
      if (!getCommitByBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, commitBy_);
      }
      if (!getCommitDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, commitDesc_);
      }
      if (!getCommitNotesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, commitNotes_);
      }
      for (int i = 0; i < sheets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, sheets_.get(i));
      }
      for (int i = 0; i < props_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, props_.get(i));
      }
      for (int i = 0; i < notes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, notes_.get(i));
      }
      for (int i = 0; i < library_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, library_.get(i));
      }
      for (int i = 0; i < global_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, global_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartData)) {
        return super.equals(obj);
      }
      TideChart.TideChartData other = (TideChart.TideChartData) obj;

      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getBranch()
          .equals(other.getBranch())) return false;
      if (!getSource()
          .equals(other.getSource())) return false;
      if (!getMerge()
          .equals(other.getMerge())) return false;
      if (!getCommitDate()
          .equals(other.getCommitDate())) return false;
      if (!getCommitBy()
          .equals(other.getCommitBy())) return false;
      if (!getCommitDesc()
          .equals(other.getCommitDesc())) return false;
      if (!getCommitNotes()
          .equals(other.getCommitNotes())) return false;
      if (!getSheetsList()
          .equals(other.getSheetsList())) return false;
      if (!getPropsList()
          .equals(other.getPropsList())) return false;
      if (!getNotesList()
          .equals(other.getNotesList())) return false;
      if (!getLibraryList()
          .equals(other.getLibraryList())) return false;
      if (!getGlobalList()
          .equals(other.getGlobalList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + BRANCH_FIELD_NUMBER;
      hash = (53 * hash) + getBranch().hashCode();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
      hash = (37 * hash) + MERGE_FIELD_NUMBER;
      hash = (53 * hash) + getMerge().hashCode();
      hash = (37 * hash) + COMMITDATE_FIELD_NUMBER;
      hash = (53 * hash) + getCommitDate().hashCode();
      hash = (37 * hash) + COMMITBY_FIELD_NUMBER;
      hash = (53 * hash) + getCommitBy().hashCode();
      hash = (37 * hash) + COMMITDESC_FIELD_NUMBER;
      hash = (53 * hash) + getCommitDesc().hashCode();
      hash = (37 * hash) + COMMITNOTES_FIELD_NUMBER;
      hash = (53 * hash) + getCommitNotes().hashCode();
      if (getSheetsCount() > 0) {
        hash = (37 * hash) + SHEETS_FIELD_NUMBER;
        hash = (53 * hash) + getSheetsList().hashCode();
      }
      if (getPropsCount() > 0) {
        hash = (37 * hash) + PROPS_FIELD_NUMBER;
        hash = (53 * hash) + getPropsList().hashCode();
      }
      if (getNotesCount() > 0) {
        hash = (37 * hash) + NOTES_FIELD_NUMBER;
        hash = (53 * hash) + getNotesList().hashCode();
      }
      if (getLibraryCount() > 0) {
        hash = (37 * hash) + LIBRARY_FIELD_NUMBER;
        hash = (53 * hash) + getLibraryList().hashCode();
      }
      if (getGlobalCount() > 0) {
        hash = (37 * hash) + GLOBAL_FIELD_NUMBER;
        hash = (53 * hash) + getGlobalList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartData)
        TideChart.TideChartDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartData.class, TideChart.TideChartData.Builder.class);
      }

      // Construct using TideChart.TideChartData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSheetsFieldBuilder();
          getPropsFieldBuilder();
          getNotesFieldBuilder();
          getLibraryFieldBuilder();
          getGlobalFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = "";

        branch_ = "";

        source_ = "";

        merge_ = "";

        commitDate_ = "";

        commitBy_ = "";

        commitDesc_ = "";

        commitNotes_ = "";

        if (sheetsBuilder_ == null) {
          sheets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          sheetsBuilder_.clear();
        }
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          propsBuilder_.clear();
        }
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          notesBuilder_.clear();
        }
        if (libraryBuilder_ == null) {
          library_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          libraryBuilder_.clear();
        }
        if (globalBuilder_ == null) {
          global_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          globalBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartData_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartData getDefaultInstanceForType() {
        return TideChart.TideChartData.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartData build() {
        TideChart.TideChartData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartData buildPartial() {
        TideChart.TideChartData result = new TideChart.TideChartData(this);
        int from_bitField0_ = bitField0_;
        result.version_ = version_;
        result.branch_ = branch_;
        result.source_ = source_;
        result.merge_ = merge_;
        result.commitDate_ = commitDate_;
        result.commitBy_ = commitBy_;
        result.commitDesc_ = commitDesc_;
        result.commitNotes_ = commitNotes_;
        if (sheetsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            sheets_ = java.util.Collections.unmodifiableList(sheets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.sheets_ = sheets_;
        } else {
          result.sheets_ = sheetsBuilder_.build();
        }
        if (propsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            props_ = java.util.Collections.unmodifiableList(props_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.props_ = props_;
        } else {
          result.props_ = propsBuilder_.build();
        }
        if (notesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            notes_ = java.util.Collections.unmodifiableList(notes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.notes_ = notes_;
        } else {
          result.notes_ = notesBuilder_.build();
        }
        if (libraryBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            library_ = java.util.Collections.unmodifiableList(library_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.library_ = library_;
        } else {
          result.library_ = libraryBuilder_.build();
        }
        if (globalBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            global_ = java.util.Collections.unmodifiableList(global_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.global_ = global_;
        } else {
          result.global_ = globalBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartData) {
          return mergeFrom((TideChart.TideChartData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartData other) {
        if (other == TideChart.TideChartData.getDefaultInstance()) return this;
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getBranch().isEmpty()) {
          branch_ = other.branch_;
          onChanged();
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (!other.getMerge().isEmpty()) {
          merge_ = other.merge_;
          onChanged();
        }
        if (!other.getCommitDate().isEmpty()) {
          commitDate_ = other.commitDate_;
          onChanged();
        }
        if (!other.getCommitBy().isEmpty()) {
          commitBy_ = other.commitBy_;
          onChanged();
        }
        if (!other.getCommitDesc().isEmpty()) {
          commitDesc_ = other.commitDesc_;
          onChanged();
        }
        if (!other.getCommitNotes().isEmpty()) {
          commitNotes_ = other.commitNotes_;
          onChanged();
        }
        if (sheetsBuilder_ == null) {
          if (!other.sheets_.isEmpty()) {
            if (sheets_.isEmpty()) {
              sheets_ = other.sheets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSheetsIsMutable();
              sheets_.addAll(other.sheets_);
            }
            onChanged();
          }
        } else {
          if (!other.sheets_.isEmpty()) {
            if (sheetsBuilder_.isEmpty()) {
              sheetsBuilder_.dispose();
              sheetsBuilder_ = null;
              sheets_ = other.sheets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              sheetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSheetsFieldBuilder() : null;
            } else {
              sheetsBuilder_.addAllMessages(other.sheets_);
            }
          }
        }
        if (propsBuilder_ == null) {
          if (!other.props_.isEmpty()) {
            if (props_.isEmpty()) {
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePropsIsMutable();
              props_.addAll(other.props_);
            }
            onChanged();
          }
        } else {
          if (!other.props_.isEmpty()) {
            if (propsBuilder_.isEmpty()) {
              propsBuilder_.dispose();
              propsBuilder_ = null;
              props_ = other.props_;
              bitField0_ = (bitField0_ & ~0x00000002);
              propsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPropsFieldBuilder() : null;
            } else {
              propsBuilder_.addAllMessages(other.props_);
            }
          }
        }
        if (notesBuilder_ == null) {
          if (!other.notes_.isEmpty()) {
            if (notes_.isEmpty()) {
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNotesIsMutable();
              notes_.addAll(other.notes_);
            }
            onChanged();
          }
        } else {
          if (!other.notes_.isEmpty()) {
            if (notesBuilder_.isEmpty()) {
              notesBuilder_.dispose();
              notesBuilder_ = null;
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              notesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNotesFieldBuilder() : null;
            } else {
              notesBuilder_.addAllMessages(other.notes_);
            }
          }
        }
        if (libraryBuilder_ == null) {
          if (!other.library_.isEmpty()) {
            if (library_.isEmpty()) {
              library_ = other.library_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureLibraryIsMutable();
              library_.addAll(other.library_);
            }
            onChanged();
          }
        } else {
          if (!other.library_.isEmpty()) {
            if (libraryBuilder_.isEmpty()) {
              libraryBuilder_.dispose();
              libraryBuilder_ = null;
              library_ = other.library_;
              bitField0_ = (bitField0_ & ~0x00000008);
              libraryBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLibraryFieldBuilder() : null;
            } else {
              libraryBuilder_.addAllMessages(other.library_);
            }
          }
        }
        if (globalBuilder_ == null) {
          if (!other.global_.isEmpty()) {
            if (global_.isEmpty()) {
              global_ = other.global_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureGlobalIsMutable();
              global_.addAll(other.global_);
            }
            onChanged();
          }
        } else {
          if (!other.global_.isEmpty()) {
            if (globalBuilder_.isEmpty()) {
              globalBuilder_.dispose();
              globalBuilder_ = null;
              global_ = other.global_;
              bitField0_ = (bitField0_ & ~0x00000010);
              globalBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGlobalFieldBuilder() : null;
            } else {
              globalBuilder_.addAllMessages(other.global_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object branch_ = "";
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public java.lang.String getBranch() {
        java.lang.Object ref = branch_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          branch_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBranchBytes() {
        java.lang.Object ref = branch_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          branch_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public Builder setBranch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        branch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public Builder clearBranch() {
        
        branch_ = getDefaultInstance().getBranch();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public Builder setBranchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        branch_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object merge_ = "";
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public java.lang.String getMerge() {
        java.lang.Object ref = merge_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          merge_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMergeBytes() {
        java.lang.Object ref = merge_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          merge_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public Builder setMerge(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        merge_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public Builder clearMerge() {
        
        merge_ = getDefaultInstance().getMerge();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public Builder setMergeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        merge_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commitDate_ = "";
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public java.lang.String getCommitDate() {
        java.lang.Object ref = commitDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCommitDateBytes() {
        java.lang.Object ref = commitDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public Builder setCommitDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public Builder clearCommitDate() {
        
        commitDate_ = getDefaultInstance().getCommitDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public Builder setCommitDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitDate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commitBy_ = "";
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public java.lang.String getCommitBy() {
        java.lang.Object ref = commitBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCommitByBytes() {
        java.lang.Object ref = commitBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public Builder setCommitBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public Builder clearCommitBy() {
        
        commitBy_ = getDefaultInstance().getCommitBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public Builder setCommitByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitBy_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commitDesc_ = "";
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public java.lang.String getCommitDesc() {
        java.lang.Object ref = commitDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public com.google.protobuf.ByteString
          getCommitDescBytes() {
        java.lang.Object ref = commitDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public Builder setCommitDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public Builder clearCommitDesc() {
        
        commitDesc_ = getDefaultInstance().getCommitDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public Builder setCommitDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitDesc_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commitNotes_ = "";
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public java.lang.String getCommitNotes() {
        java.lang.Object ref = commitNotes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitNotes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public com.google.protobuf.ByteString
          getCommitNotesBytes() {
        java.lang.Object ref = commitNotes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitNotes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public Builder setCommitNotes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitNotes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public Builder clearCommitNotes() {
        
        commitNotes_ = getDefaultInstance().getCommitNotes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public Builder setCommitNotesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitNotes_ = value;
        onChanged();
        return this;
      }

      private java.util.List<TideChart.TideChartGraph> sheets_ =
        java.util.Collections.emptyList();
      private void ensureSheetsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          sheets_ = new java.util.ArrayList<TideChart.TideChartGraph>(sheets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder> sheetsBuilder_;

      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public java.util.List<TideChart.TideChartGraph> getSheetsList() {
        if (sheetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sheets_);
        } else {
          return sheetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public int getSheetsCount() {
        if (sheetsBuilder_ == null) {
          return sheets_.size();
        } else {
          return sheetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public TideChart.TideChartGraph getSheets(int index) {
        if (sheetsBuilder_ == null) {
          return sheets_.get(index);
        } else {
          return sheetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder setSheets(
          int index, TideChart.TideChartGraph value) {
        if (sheetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSheetsIsMutable();
          sheets_.set(index, value);
          onChanged();
        } else {
          sheetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder setSheets(
          int index, TideChart.TideChartGraph.Builder builderForValue) {
        if (sheetsBuilder_ == null) {
          ensureSheetsIsMutable();
          sheets_.set(index, builderForValue.build());
          onChanged();
        } else {
          sheetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder addSheets(TideChart.TideChartGraph value) {
        if (sheetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSheetsIsMutable();
          sheets_.add(value);
          onChanged();
        } else {
          sheetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder addSheets(
          int index, TideChart.TideChartGraph value) {
        if (sheetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSheetsIsMutable();
          sheets_.add(index, value);
          onChanged();
        } else {
          sheetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder addSheets(
          TideChart.TideChartGraph.Builder builderForValue) {
        if (sheetsBuilder_ == null) {
          ensureSheetsIsMutable();
          sheets_.add(builderForValue.build());
          onChanged();
        } else {
          sheetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder addSheets(
          int index, TideChart.TideChartGraph.Builder builderForValue) {
        if (sheetsBuilder_ == null) {
          ensureSheetsIsMutable();
          sheets_.add(index, builderForValue.build());
          onChanged();
        } else {
          sheetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder addAllSheets(
          java.lang.Iterable<? extends TideChart.TideChartGraph> values) {
        if (sheetsBuilder_ == null) {
          ensureSheetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sheets_);
          onChanged();
        } else {
          sheetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder clearSheets() {
        if (sheetsBuilder_ == null) {
          sheets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          sheetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public Builder removeSheets(int index) {
        if (sheetsBuilder_ == null) {
          ensureSheetsIsMutable();
          sheets_.remove(index);
          onChanged();
        } else {
          sheetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public TideChart.TideChartGraph.Builder getSheetsBuilder(
          int index) {
        return getSheetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public TideChart.TideChartGraphOrBuilder getSheetsOrBuilder(
          int index) {
        if (sheetsBuilder_ == null) {
          return sheets_.get(index);  } else {
          return sheetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public java.util.List<? extends TideChart.TideChartGraphOrBuilder> 
           getSheetsOrBuilderList() {
        if (sheetsBuilder_ != null) {
          return sheetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sheets_);
        }
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public TideChart.TideChartGraph.Builder addSheetsBuilder() {
        return getSheetsFieldBuilder().addBuilder(
            TideChart.TideChartGraph.getDefaultInstance());
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public TideChart.TideChartGraph.Builder addSheetsBuilder(
          int index) {
        return getSheetsFieldBuilder().addBuilder(
            index, TideChart.TideChartGraph.getDefaultInstance());
      }
      /**
       * <pre>
       * graphs contained in the chart
       * </pre>
       *
       * <code>repeated .TideChartGraph sheets = 9;</code>
       */
      public java.util.List<TideChart.TideChartGraph.Builder> 
           getSheetsBuilderList() {
        return getSheetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder> 
          getSheetsFieldBuilder() {
        if (sheetsBuilder_ == null) {
          sheetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartGraph, TideChart.TideChartGraph.Builder, TideChart.TideChartGraphOrBuilder>(
                  sheets_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          sheets_ = null;
        }
        return sheetsBuilder_;
      }

      private java.util.List<TideChart.TideChartProperty> props_ =
        java.util.Collections.emptyList();
      private void ensurePropsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          props_ = new java.util.ArrayList<TideChart.TideChartProperty>(props_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> propsBuilder_;

      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getPropsList() {
        if (propsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(props_);
        } else {
          return propsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public int getPropsCount() {
        if (propsBuilder_ == null) {
          return props_.size();
        } else {
          return propsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public TideChart.TideChartProperty getProps(int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);
        } else {
          return propsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.set(index, value);
          onChanged();
        } else {
          propsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder setProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.set(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder addProps(TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(value);
          onChanged();
        } else {
          propsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty value) {
        if (propsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePropsIsMutable();
          props_.add(index, value);
          onChanged();
        } else {
          propsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder addProps(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder addProps(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.add(index, builderForValue.build());
          onChanged();
        } else {
          propsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder addAllProps(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, props_);
          onChanged();
        } else {
          propsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder clearProps() {
        if (propsBuilder_ == null) {
          props_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          propsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public Builder removeProps(int index) {
        if (propsBuilder_ == null) {
          ensurePropsIsMutable();
          props_.remove(index);
          onChanged();
        } else {
          propsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public TideChart.TideChartProperty.Builder getPropsBuilder(
          int index) {
        return getPropsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getPropsOrBuilder(
          int index) {
        if (propsBuilder_ == null) {
          return props_.get(index);  } else {
          return propsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getPropsOrBuilderList() {
        if (propsBuilder_ != null) {
          return propsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(props_);
        }
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder() {
        return getPropsFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public TideChart.TideChartProperty.Builder addPropsBuilder(
          int index) {
        return getPropsFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * configuration properties for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartProperty props = 10;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getPropsBuilderList() {
        return getPropsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getPropsFieldBuilder() {
        if (propsBuilder_ == null) {
          propsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  props_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          props_ = null;
        }
        return propsBuilder_;
      }

      private java.util.List<TideChart.TideChartNote> notes_ =
        java.util.Collections.emptyList();
      private void ensureNotesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          notes_ = new java.util.ArrayList<TideChart.TideChartNote>(notes_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> notesBuilder_;

      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public java.util.List<TideChart.TideChartNote> getNotesList() {
        if (notesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(notes_);
        } else {
          return notesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public int getNotesCount() {
        if (notesBuilder_ == null) {
          return notes_.size();
        } else {
          return notesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public TideChart.TideChartNote getNotes(int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);
        } else {
          return notesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.set(index, value);
          onChanged();
        } else {
          notesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder setNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.set(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder addNotes(TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(value);
          onChanged();
        } else {
          notesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(index, value);
          onChanged();
        } else {
          notesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder addNotes(
          TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder addNotes(
          int index, TideChart.TideChartNote.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder addAllNotes(
          java.lang.Iterable<? extends TideChart.TideChartNote> values) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, notes_);
          onChanged();
        } else {
          notesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder clearNotes() {
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          notesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public Builder removeNotes(int index) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.remove(index);
          onChanged();
        } else {
          notesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public TideChart.TideChartNote.Builder getNotesBuilder(
          int index) {
        return getNotesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public TideChart.TideChartNoteOrBuilder getNotesOrBuilder(
          int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);  } else {
          return notesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public java.util.List<? extends TideChart.TideChartNoteOrBuilder> 
           getNotesOrBuilderList() {
        if (notesBuilder_ != null) {
          return notesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(notes_);
        }
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder() {
        return getNotesFieldBuilder().addBuilder(
            TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public TideChart.TideChartNote.Builder addNotesBuilder(
          int index) {
        return getNotesFieldBuilder().addBuilder(
            index, TideChart.TideChartNote.getDefaultInstance());
      }
      /**
       * <pre>
       * note discussion for the entire chart
       * </pre>
       *
       * <code>repeated .TideChartNote notes = 11;</code>
       */
      public java.util.List<TideChart.TideChartNote.Builder> 
           getNotesBuilderList() {
        return getNotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder> 
          getNotesFieldBuilder() {
        if (notesBuilder_ == null) {
          notesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartNote, TideChart.TideChartNote.Builder, TideChart.TideChartNoteOrBuilder>(
                  notes_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          notes_ = null;
        }
        return notesBuilder_;
      }

      private java.util.List<TideChart.TideChartLibrary> library_ =
        java.util.Collections.emptyList();
      private void ensureLibraryIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          library_ = new java.util.ArrayList<TideChart.TideChartLibrary>(library_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartLibrary, TideChart.TideChartLibrary.Builder, TideChart.TideChartLibraryOrBuilder> libraryBuilder_;

      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public java.util.List<TideChart.TideChartLibrary> getLibraryList() {
        if (libraryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(library_);
        } else {
          return libraryBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public int getLibraryCount() {
        if (libraryBuilder_ == null) {
          return library_.size();
        } else {
          return libraryBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public TideChart.TideChartLibrary getLibrary(int index) {
        if (libraryBuilder_ == null) {
          return library_.get(index);
        } else {
          return libraryBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder setLibrary(
          int index, TideChart.TideChartLibrary value) {
        if (libraryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLibraryIsMutable();
          library_.set(index, value);
          onChanged();
        } else {
          libraryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder setLibrary(
          int index, TideChart.TideChartLibrary.Builder builderForValue) {
        if (libraryBuilder_ == null) {
          ensureLibraryIsMutable();
          library_.set(index, builderForValue.build());
          onChanged();
        } else {
          libraryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder addLibrary(TideChart.TideChartLibrary value) {
        if (libraryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLibraryIsMutable();
          library_.add(value);
          onChanged();
        } else {
          libraryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder addLibrary(
          int index, TideChart.TideChartLibrary value) {
        if (libraryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLibraryIsMutable();
          library_.add(index, value);
          onChanged();
        } else {
          libraryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder addLibrary(
          TideChart.TideChartLibrary.Builder builderForValue) {
        if (libraryBuilder_ == null) {
          ensureLibraryIsMutable();
          library_.add(builderForValue.build());
          onChanged();
        } else {
          libraryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder addLibrary(
          int index, TideChart.TideChartLibrary.Builder builderForValue) {
        if (libraryBuilder_ == null) {
          ensureLibraryIsMutable();
          library_.add(index, builderForValue.build());
          onChanged();
        } else {
          libraryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder addAllLibrary(
          java.lang.Iterable<? extends TideChart.TideChartLibrary> values) {
        if (libraryBuilder_ == null) {
          ensureLibraryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, library_);
          onChanged();
        } else {
          libraryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder clearLibrary() {
        if (libraryBuilder_ == null) {
          library_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          libraryBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public Builder removeLibrary(int index) {
        if (libraryBuilder_ == null) {
          ensureLibraryIsMutable();
          library_.remove(index);
          onChanged();
        } else {
          libraryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public TideChart.TideChartLibrary.Builder getLibraryBuilder(
          int index) {
        return getLibraryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public TideChart.TideChartLibraryOrBuilder getLibraryOrBuilder(
          int index) {
        if (libraryBuilder_ == null) {
          return library_.get(index);  } else {
          return libraryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public java.util.List<? extends TideChart.TideChartLibraryOrBuilder> 
           getLibraryOrBuilderList() {
        if (libraryBuilder_ != null) {
          return libraryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(library_);
        }
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public TideChart.TideChartLibrary.Builder addLibraryBuilder() {
        return getLibraryFieldBuilder().addBuilder(
            TideChart.TideChartLibrary.getDefaultInstance());
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public TideChart.TideChartLibrary.Builder addLibraryBuilder(
          int index) {
        return getLibraryFieldBuilder().addBuilder(
            index, TideChart.TideChartLibrary.getDefaultInstance());
      }
      /**
       * <pre>
       * source of node templates that can be added to graphs
       * </pre>
       *
       * <code>repeated .TideChartLibrary library = 12;</code>
       */
      public java.util.List<TideChart.TideChartLibrary.Builder> 
           getLibraryBuilderList() {
        return getLibraryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartLibrary, TideChart.TideChartLibrary.Builder, TideChart.TideChartLibraryOrBuilder> 
          getLibraryFieldBuilder() {
        if (libraryBuilder_ == null) {
          libraryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartLibrary, TideChart.TideChartLibrary.Builder, TideChart.TideChartLibraryOrBuilder>(
                  library_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          library_ = null;
        }
        return libraryBuilder_;
      }

      private java.util.List<TideChart.TideChartProperty> global_ =
        java.util.Collections.emptyList();
      private void ensureGlobalIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          global_ = new java.util.ArrayList<TideChart.TideChartProperty>(global_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> globalBuilder_;

      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public java.util.List<TideChart.TideChartProperty> getGlobalList() {
        if (globalBuilder_ == null) {
          return java.util.Collections.unmodifiableList(global_);
        } else {
          return globalBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public int getGlobalCount() {
        if (globalBuilder_ == null) {
          return global_.size();
        } else {
          return globalBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public TideChart.TideChartProperty getGlobal(int index) {
        if (globalBuilder_ == null) {
          return global_.get(index);
        } else {
          return globalBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder setGlobal(
          int index, TideChart.TideChartProperty value) {
        if (globalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGlobalIsMutable();
          global_.set(index, value);
          onChanged();
        } else {
          globalBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder setGlobal(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (globalBuilder_ == null) {
          ensureGlobalIsMutable();
          global_.set(index, builderForValue.build());
          onChanged();
        } else {
          globalBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder addGlobal(TideChart.TideChartProperty value) {
        if (globalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGlobalIsMutable();
          global_.add(value);
          onChanged();
        } else {
          globalBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder addGlobal(
          int index, TideChart.TideChartProperty value) {
        if (globalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGlobalIsMutable();
          global_.add(index, value);
          onChanged();
        } else {
          globalBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder addGlobal(
          TideChart.TideChartProperty.Builder builderForValue) {
        if (globalBuilder_ == null) {
          ensureGlobalIsMutable();
          global_.add(builderForValue.build());
          onChanged();
        } else {
          globalBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder addGlobal(
          int index, TideChart.TideChartProperty.Builder builderForValue) {
        if (globalBuilder_ == null) {
          ensureGlobalIsMutable();
          global_.add(index, builderForValue.build());
          onChanged();
        } else {
          globalBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder addAllGlobal(
          java.lang.Iterable<? extends TideChart.TideChartProperty> values) {
        if (globalBuilder_ == null) {
          ensureGlobalIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, global_);
          onChanged();
        } else {
          globalBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder clearGlobal() {
        if (globalBuilder_ == null) {
          global_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          globalBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public Builder removeGlobal(int index) {
        if (globalBuilder_ == null) {
          ensureGlobalIsMutable();
          global_.remove(index);
          onChanged();
        } else {
          globalBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public TideChart.TideChartProperty.Builder getGlobalBuilder(
          int index) {
        return getGlobalFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public TideChart.TideChartPropertyOrBuilder getGlobalOrBuilder(
          int index) {
        if (globalBuilder_ == null) {
          return global_.get(index);  } else {
          return globalBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public java.util.List<? extends TideChart.TideChartPropertyOrBuilder> 
           getGlobalOrBuilderList() {
        if (globalBuilder_ != null) {
          return globalBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(global_);
        }
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public TideChart.TideChartProperty.Builder addGlobalBuilder() {
        return getGlobalFieldBuilder().addBuilder(
            TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public TideChart.TideChartProperty.Builder addGlobalBuilder(
          int index) {
        return getGlobalFieldBuilder().addBuilder(
            index, TideChart.TideChartProperty.getDefaultInstance());
      }
      /**
       * <pre>
       * global state variables shared by all graphs
       * </pre>
       *
       * <code>repeated .TideChartProperty global = 13;</code>
       */
      public java.util.List<TideChart.TideChartProperty.Builder> 
           getGlobalBuilderList() {
        return getGlobalFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder> 
          getGlobalFieldBuilder() {
        if (globalBuilder_ == null) {
          globalBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartProperty, TideChart.TideChartProperty.Builder, TideChart.TideChartPropertyOrBuilder>(
                  global_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          global_ = null;
        }
        return globalBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartData)
    }

    // @@protoc_insertion_point(class_scope:TideChartData)
    private static final TideChart.TideChartData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartData();
    }

    public static TideChart.TideChartData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartData>
        PARSER = new com.google.protobuf.AbstractParser<TideChartData>() {
      @java.lang.Override
      public TideChartData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for this chart version
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * unique id for this chart version
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * branch this version is associated with
     * </pre>
     *
     * <code>string branch = 2;</code>
     */
    java.lang.String getBranch();
    /**
     * <pre>
     * branch this version is associated with
     * </pre>
     *
     * <code>string branch = 2;</code>
     */
    com.google.protobuf.ByteString
        getBranchBytes();

    /**
     * <pre>
     * previous version
     * </pre>
     *
     * <code>string source = 3;</code>
     */
    java.lang.String getSource();
    /**
     * <pre>
     * previous version
     * </pre>
     *
     * <code>string source = 3;</code>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <pre>
     * last version id on branch merging into
     * </pre>
     *
     * <code>string merge = 4;</code>
     */
    java.lang.String getMerge();
    /**
     * <pre>
     * last version id on branch merging into
     * </pre>
     *
     * <code>string merge = 4;</code>
     */
    com.google.protobuf.ByteString
        getMergeBytes();

    /**
     * <pre>
     * date version of the chart was committed
     * </pre>
     *
     * <code>string commitDate = 5;</code>
     */
    java.lang.String getCommitDate();
    /**
     * <pre>
     * date version of the chart was committed
     * </pre>
     *
     * <code>string commitDate = 5;</code>
     */
    com.google.protobuf.ByteString
        getCommitDateBytes();

    /**
     * <pre>
     * user that committed latest version
     * </pre>
     *
     * <code>string commitBy = 6;</code>
     */
    java.lang.String getCommitBy();
    /**
     * <pre>
     * user that committed latest version
     * </pre>
     *
     * <code>string commitBy = 6;</code>
     */
    com.google.protobuf.ByteString
        getCommitByBytes();

    /**
     * <pre>
     * short commit comment
     * </pre>
     *
     * <code>string commitDesc = 7;</code>
     */
    java.lang.String getCommitDesc();
    /**
     * <pre>
     * short commit comment
     * </pre>
     *
     * <code>string commitDesc = 7;</code>
     */
    com.google.protobuf.ByteString
        getCommitDescBytes();

    /**
     * <pre>
     * longer commit notes
     * </pre>
     *
     * <code>string commitNotes = 8;</code>
     */
    java.lang.String getCommitNotes();
    /**
     * <pre>
     * longer commit notes
     * </pre>
     *
     * <code>string commitNotes = 8;</code>
     */
    com.google.protobuf.ByteString
        getCommitNotesBytes();
  }
  /**
   * <pre>
   * Read only the commit headers 
   * </pre>
   *
   * Protobuf type {@code TideChartHeader}
   */
  public  static final class TideChartHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartHeader)
      TideChartHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartHeader.newBuilder() to construct.
    private TideChartHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartHeader() {
      version_ = "";
      branch_ = "";
      source_ = "";
      merge_ = "";
      commitDate_ = "";
      commitBy_ = "";
      commitDesc_ = "";
      commitNotes_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartHeader();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              branch_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              merge_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              commitDate_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              commitBy_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              commitDesc_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              commitNotes_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartHeader_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartHeader.class, TideChart.TideChartHeader.Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * unique id for this chart version
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for this chart version
     * </pre>
     *
     * <code>string version = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BRANCH_FIELD_NUMBER = 2;
    private volatile java.lang.Object branch_;
    /**
     * <pre>
     * branch this version is associated with
     * </pre>
     *
     * <code>string branch = 2;</code>
     */
    public java.lang.String getBranch() {
      java.lang.Object ref = branch_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        branch_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * branch this version is associated with
     * </pre>
     *
     * <code>string branch = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBranchBytes() {
      java.lang.Object ref = branch_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        branch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private volatile java.lang.Object source_;
    /**
     * <pre>
     * previous version
     * </pre>
     *
     * <code>string source = 3;</code>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * previous version
     * </pre>
     *
     * <code>string source = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MERGE_FIELD_NUMBER = 4;
    private volatile java.lang.Object merge_;
    /**
     * <pre>
     * last version id on branch merging into
     * </pre>
     *
     * <code>string merge = 4;</code>
     */
    public java.lang.String getMerge() {
      java.lang.Object ref = merge_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        merge_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * last version id on branch merging into
     * </pre>
     *
     * <code>string merge = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMergeBytes() {
      java.lang.Object ref = merge_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        merge_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMITDATE_FIELD_NUMBER = 5;
    private volatile java.lang.Object commitDate_;
    /**
     * <pre>
     * date version of the chart was committed
     * </pre>
     *
     * <code>string commitDate = 5;</code>
     */
    public java.lang.String getCommitDate() {
      java.lang.Object ref = commitDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * date version of the chart was committed
     * </pre>
     *
     * <code>string commitDate = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCommitDateBytes() {
      java.lang.Object ref = commitDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMITBY_FIELD_NUMBER = 6;
    private volatile java.lang.Object commitBy_;
    /**
     * <pre>
     * user that committed latest version
     * </pre>
     *
     * <code>string commitBy = 6;</code>
     */
    public java.lang.String getCommitBy() {
      java.lang.Object ref = commitBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * user that committed latest version
     * </pre>
     *
     * <code>string commitBy = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCommitByBytes() {
      java.lang.Object ref = commitBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMITDESC_FIELD_NUMBER = 7;
    private volatile java.lang.Object commitDesc_;
    /**
     * <pre>
     * short commit comment
     * </pre>
     *
     * <code>string commitDesc = 7;</code>
     */
    public java.lang.String getCommitDesc() {
      java.lang.Object ref = commitDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * short commit comment
     * </pre>
     *
     * <code>string commitDesc = 7;</code>
     */
    public com.google.protobuf.ByteString
        getCommitDescBytes() {
      java.lang.Object ref = commitDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMITNOTES_FIELD_NUMBER = 8;
    private volatile java.lang.Object commitNotes_;
    /**
     * <pre>
     * longer commit notes
     * </pre>
     *
     * <code>string commitNotes = 8;</code>
     */
    public java.lang.String getCommitNotes() {
      java.lang.Object ref = commitNotes_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitNotes_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * longer commit notes
     * </pre>
     *
     * <code>string commitNotes = 8;</code>
     */
    public com.google.protobuf.ByteString
        getCommitNotesBytes() {
      java.lang.Object ref = commitNotes_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitNotes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
      }
      if (!getBranchBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, branch_);
      }
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, source_);
      }
      if (!getMergeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, merge_);
      }
      if (!getCommitDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, commitDate_);
      }
      if (!getCommitByBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, commitBy_);
      }
      if (!getCommitDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, commitDesc_);
      }
      if (!getCommitNotesBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, commitNotes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
      }
      if (!getBranchBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, branch_);
      }
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, source_);
      }
      if (!getMergeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, merge_);
      }
      if (!getCommitDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, commitDate_);
      }
      if (!getCommitByBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, commitBy_);
      }
      if (!getCommitDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, commitDesc_);
      }
      if (!getCommitNotesBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, commitNotes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartHeader)) {
        return super.equals(obj);
      }
      TideChart.TideChartHeader other = (TideChart.TideChartHeader) obj;

      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getBranch()
          .equals(other.getBranch())) return false;
      if (!getSource()
          .equals(other.getSource())) return false;
      if (!getMerge()
          .equals(other.getMerge())) return false;
      if (!getCommitDate()
          .equals(other.getCommitDate())) return false;
      if (!getCommitBy()
          .equals(other.getCommitBy())) return false;
      if (!getCommitDesc()
          .equals(other.getCommitDesc())) return false;
      if (!getCommitNotes()
          .equals(other.getCommitNotes())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + BRANCH_FIELD_NUMBER;
      hash = (53 * hash) + getBranch().hashCode();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
      hash = (37 * hash) + MERGE_FIELD_NUMBER;
      hash = (53 * hash) + getMerge().hashCode();
      hash = (37 * hash) + COMMITDATE_FIELD_NUMBER;
      hash = (53 * hash) + getCommitDate().hashCode();
      hash = (37 * hash) + COMMITBY_FIELD_NUMBER;
      hash = (53 * hash) + getCommitBy().hashCode();
      hash = (37 * hash) + COMMITDESC_FIELD_NUMBER;
      hash = (53 * hash) + getCommitDesc().hashCode();
      hash = (37 * hash) + COMMITNOTES_FIELD_NUMBER;
      hash = (53 * hash) + getCommitNotes().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Read only the commit headers 
     * </pre>
     *
     * Protobuf type {@code TideChartHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartHeader)
        TideChart.TideChartHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartHeader.class, TideChart.TideChartHeader.Builder.class);
      }

      // Construct using TideChart.TideChartHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = "";

        branch_ = "";

        source_ = "";

        merge_ = "";

        commitDate_ = "";

        commitBy_ = "";

        commitDesc_ = "";

        commitNotes_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartHeader_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartHeader getDefaultInstanceForType() {
        return TideChart.TideChartHeader.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartHeader build() {
        TideChart.TideChartHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartHeader buildPartial() {
        TideChart.TideChartHeader result = new TideChart.TideChartHeader(this);
        result.version_ = version_;
        result.branch_ = branch_;
        result.source_ = source_;
        result.merge_ = merge_;
        result.commitDate_ = commitDate_;
        result.commitBy_ = commitBy_;
        result.commitDesc_ = commitDesc_;
        result.commitNotes_ = commitNotes_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartHeader) {
          return mergeFrom((TideChart.TideChartHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartHeader other) {
        if (other == TideChart.TideChartHeader.getDefaultInstance()) return this;
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getBranch().isEmpty()) {
          branch_ = other.branch_;
          onChanged();
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (!other.getMerge().isEmpty()) {
          merge_ = other.merge_;
          onChanged();
        }
        if (!other.getCommitDate().isEmpty()) {
          commitDate_ = other.commitDate_;
          onChanged();
        }
        if (!other.getCommitBy().isEmpty()) {
          commitBy_ = other.commitBy_;
          onChanged();
        }
        if (!other.getCommitDesc().isEmpty()) {
          commitDesc_ = other.commitDesc_;
          onChanged();
        }
        if (!other.getCommitNotes().isEmpty()) {
          commitNotes_ = other.commitNotes_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this chart version
       * </pre>
       *
       * <code>string version = 1;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object branch_ = "";
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public java.lang.String getBranch() {
        java.lang.Object ref = branch_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          branch_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBranchBytes() {
        java.lang.Object ref = branch_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          branch_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public Builder setBranch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        branch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public Builder clearBranch() {
        
        branch_ = getDefaultInstance().getBranch();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * branch this version is associated with
       * </pre>
       *
       * <code>string branch = 2;</code>
       */
      public Builder setBranchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        branch_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * previous version
       * </pre>
       *
       * <code>string source = 3;</code>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object merge_ = "";
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public java.lang.String getMerge() {
        java.lang.Object ref = merge_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          merge_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMergeBytes() {
        java.lang.Object ref = merge_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          merge_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public Builder setMerge(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        merge_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public Builder clearMerge() {
        
        merge_ = getDefaultInstance().getMerge();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * last version id on branch merging into
       * </pre>
       *
       * <code>string merge = 4;</code>
       */
      public Builder setMergeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        merge_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commitDate_ = "";
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public java.lang.String getCommitDate() {
        java.lang.Object ref = commitDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCommitDateBytes() {
        java.lang.Object ref = commitDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public Builder setCommitDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public Builder clearCommitDate() {
        
        commitDate_ = getDefaultInstance().getCommitDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date version of the chart was committed
       * </pre>
       *
       * <code>string commitDate = 5;</code>
       */
      public Builder setCommitDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitDate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commitBy_ = "";
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public java.lang.String getCommitBy() {
        java.lang.Object ref = commitBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCommitByBytes() {
        java.lang.Object ref = commitBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public Builder setCommitBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public Builder clearCommitBy() {
        
        commitBy_ = getDefaultInstance().getCommitBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that committed latest version
       * </pre>
       *
       * <code>string commitBy = 6;</code>
       */
      public Builder setCommitByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitBy_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commitDesc_ = "";
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public java.lang.String getCommitDesc() {
        java.lang.Object ref = commitDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public com.google.protobuf.ByteString
          getCommitDescBytes() {
        java.lang.Object ref = commitDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public Builder setCommitDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public Builder clearCommitDesc() {
        
        commitDesc_ = getDefaultInstance().getCommitDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * short commit comment
       * </pre>
       *
       * <code>string commitDesc = 7;</code>
       */
      public Builder setCommitDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitDesc_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object commitNotes_ = "";
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public java.lang.String getCommitNotes() {
        java.lang.Object ref = commitNotes_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitNotes_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public com.google.protobuf.ByteString
          getCommitNotesBytes() {
        java.lang.Object ref = commitNotes_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitNotes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public Builder setCommitNotes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitNotes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public Builder clearCommitNotes() {
        
        commitNotes_ = getDefaultInstance().getCommitNotes();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * longer commit notes
       * </pre>
       *
       * <code>string commitNotes = 8;</code>
       */
      public Builder setCommitNotesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitNotes_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartHeader)
    }

    // @@protoc_insertion_point(class_scope:TideChartHeader)
    private static final TideChart.TideChartHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartHeader();
    }

    public static TideChart.TideChartHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartHeader>
        PARSER = new com.google.protobuf.AbstractParser<TideChartHeader>() {
      @java.lang.Override
      public TideChartHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartHeader> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    java.lang.String getOrigin();
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    com.google.protobuf.ByteString
        getOriginBytes();

    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    java.lang.String getModifiedDate();
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    com.google.protobuf.ByteString
        getModifiedDateBytes();

    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    java.lang.String getModifiedBy();
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    com.google.protobuf.ByteString
        getModifiedByBytes();

    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    boolean hasChart();
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    TideChart.TideChartData getChart();
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    TideChart.TideChartDataOrBuilder getChartOrBuilder();

    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    java.util.List<TideChart.TideChartCommand> 
        getWorkingList();
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    TideChart.TideChartCommand getWorking(int index);
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    int getWorkingCount();
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
        getWorkingOrBuilderList();
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    TideChart.TideChartCommandOrBuilder getWorkingOrBuilder(
        int index);

    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    java.util.List<TideChart.TideChartCommand> 
        getRemoteList();
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    TideChart.TideChartCommand getRemote(int index);
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    int getRemoteCount();
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
        getRemoteOrBuilderList();
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    TideChart.TideChartCommandOrBuilder getRemoteOrBuilder(
        int index);

    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    java.util.List<TideChart.TideChartData> 
        getHistoryList();
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    TideChart.TideChartData getHistory(int index);
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    int getHistoryCount();
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    java.util.List<? extends TideChart.TideChartDataOrBuilder> 
        getHistoryOrBuilderList();
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    TideChart.TideChartDataOrBuilder getHistoryOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TideChartFile}
   */
  public  static final class TideChartFile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartFile)
      TideChartFileOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartFile.newBuilder() to construct.
    private TideChartFile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartFile() {
      id_ = "";
      name_ = "";
      path_ = "";
      origin_ = "";
      modifiedDate_ = "";
      modifiedBy_ = "";
      working_ = java.util.Collections.emptyList();
      remote_ = java.util.Collections.emptyList();
      history_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartFile();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              origin_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              modifiedDate_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              modifiedBy_ = s;
              break;
            }
            case 58: {
              TideChart.TideChartData.Builder subBuilder = null;
              if (chart_ != null) {
                subBuilder = chart_.toBuilder();
              }
              chart_ = input.readMessage(TideChart.TideChartData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chart_);
                chart_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                working_ = new java.util.ArrayList<TideChart.TideChartCommand>();
                mutable_bitField0_ |= 0x00000001;
              }
              working_.add(
                  input.readMessage(TideChart.TideChartCommand.parser(), extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                remote_ = new java.util.ArrayList<TideChart.TideChartCommand>();
                mutable_bitField0_ |= 0x00000002;
              }
              remote_.add(
                  input.readMessage(TideChart.TideChartCommand.parser(), extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                history_ = new java.util.ArrayList<TideChart.TideChartData>();
                mutable_bitField0_ |= 0x00000004;
              }
              history_.add(
                  input.readMessage(TideChart.TideChartData.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          working_ = java.util.Collections.unmodifiableList(working_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          remote_ = java.util.Collections.unmodifiableList(remote_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          history_ = java.util.Collections.unmodifiableList(history_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartFile_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartFile.class, TideChart.TideChartFile.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORIGIN_FIELD_NUMBER = 4;
    private volatile java.lang.Object origin_;
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    public java.lang.String getOrigin() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        origin_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOriginBytes() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        origin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODIFIEDDATE_FIELD_NUMBER = 5;
    private volatile java.lang.Object modifiedDate_;
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    public java.lang.String getModifiedDate() {
      java.lang.Object ref = modifiedDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modifiedDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    public com.google.protobuf.ByteString
        getModifiedDateBytes() {
      java.lang.Object ref = modifiedDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modifiedDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODIFIEDBY_FIELD_NUMBER = 6;
    private volatile java.lang.Object modifiedBy_;
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    public java.lang.String getModifiedBy() {
      java.lang.Object ref = modifiedBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modifiedBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    public com.google.protobuf.ByteString
        getModifiedByBytes() {
      java.lang.Object ref = modifiedBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modifiedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHART_FIELD_NUMBER = 7;
    private TideChart.TideChartData chart_;
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    public boolean hasChart() {
      return chart_ != null;
    }
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    public TideChart.TideChartData getChart() {
      return chart_ == null ? TideChart.TideChartData.getDefaultInstance() : chart_;
    }
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    public TideChart.TideChartDataOrBuilder getChartOrBuilder() {
      return getChart();
    }

    public static final int WORKING_FIELD_NUMBER = 8;
    private java.util.List<TideChart.TideChartCommand> working_;
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    public java.util.List<TideChart.TideChartCommand> getWorkingList() {
      return working_;
    }
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    public java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
        getWorkingOrBuilderList() {
      return working_;
    }
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    public int getWorkingCount() {
      return working_.size();
    }
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    public TideChart.TideChartCommand getWorking(int index) {
      return working_.get(index);
    }
    /**
     * <pre>
     * uncommitted local changes
     * </pre>
     *
     * <code>repeated .TideChartCommand working = 8;</code>
     */
    public TideChart.TideChartCommandOrBuilder getWorkingOrBuilder(
        int index) {
      return working_.get(index);
    }

    public static final int REMOTE_FIELD_NUMBER = 9;
    private java.util.List<TideChart.TideChartCommand> remote_;
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    public java.util.List<TideChart.TideChartCommand> getRemoteList() {
      return remote_;
    }
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    public java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
        getRemoteOrBuilderList() {
      return remote_;
    }
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    public int getRemoteCount() {
      return remote_.size();
    }
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    public TideChart.TideChartCommand getRemote(int index) {
      return remote_.get(index);
    }
    /**
     * <pre>
     * unmerged changes committed remotely
     * </pre>
     *
     * <code>repeated .TideChartCommand remote = 9;</code>
     */
    public TideChart.TideChartCommandOrBuilder getRemoteOrBuilder(
        int index) {
      return remote_.get(index);
    }

    public static final int HISTORY_FIELD_NUMBER = 10;
    private java.util.List<TideChart.TideChartData> history_;
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    public java.util.List<TideChart.TideChartData> getHistoryList() {
      return history_;
    }
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    public java.util.List<? extends TideChart.TideChartDataOrBuilder> 
        getHistoryOrBuilderList() {
      return history_;
    }
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    public int getHistoryCount() {
      return history_.size();
    }
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    public TideChart.TideChartData getHistory(int index) {
      return history_.get(index);
    }
    /**
     * <pre>
     * previous saved versions of the chart
     * </pre>
     *
     * <code>repeated .TideChartData history = 10;</code>
     */
    public TideChart.TideChartDataOrBuilder getHistoryOrBuilder(
        int index) {
      return history_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, path_);
      }
      if (!getOriginBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, origin_);
      }
      if (!getModifiedDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, modifiedDate_);
      }
      if (!getModifiedByBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, modifiedBy_);
      }
      if (chart_ != null) {
        output.writeMessage(7, getChart());
      }
      for (int i = 0; i < working_.size(); i++) {
        output.writeMessage(8, working_.get(i));
      }
      for (int i = 0; i < remote_.size(); i++) {
        output.writeMessage(9, remote_.get(i));
      }
      for (int i = 0; i < history_.size(); i++) {
        output.writeMessage(10, history_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, path_);
      }
      if (!getOriginBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, origin_);
      }
      if (!getModifiedDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, modifiedDate_);
      }
      if (!getModifiedByBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, modifiedBy_);
      }
      if (chart_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getChart());
      }
      for (int i = 0; i < working_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, working_.get(i));
      }
      for (int i = 0; i < remote_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, remote_.get(i));
      }
      for (int i = 0; i < history_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, history_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartFile)) {
        return super.equals(obj);
      }
      TideChart.TideChartFile other = (TideChart.TideChartFile) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getPath()
          .equals(other.getPath())) return false;
      if (!getOrigin()
          .equals(other.getOrigin())) return false;
      if (!getModifiedDate()
          .equals(other.getModifiedDate())) return false;
      if (!getModifiedBy()
          .equals(other.getModifiedBy())) return false;
      if (hasChart() != other.hasChart()) return false;
      if (hasChart()) {
        if (!getChart()
            .equals(other.getChart())) return false;
      }
      if (!getWorkingList()
          .equals(other.getWorkingList())) return false;
      if (!getRemoteList()
          .equals(other.getRemoteList())) return false;
      if (!getHistoryList()
          .equals(other.getHistoryList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
      hash = (37 * hash) + MODIFIEDDATE_FIELD_NUMBER;
      hash = (53 * hash) + getModifiedDate().hashCode();
      hash = (37 * hash) + MODIFIEDBY_FIELD_NUMBER;
      hash = (53 * hash) + getModifiedBy().hashCode();
      if (hasChart()) {
        hash = (37 * hash) + CHART_FIELD_NUMBER;
        hash = (53 * hash) + getChart().hashCode();
      }
      if (getWorkingCount() > 0) {
        hash = (37 * hash) + WORKING_FIELD_NUMBER;
        hash = (53 * hash) + getWorkingList().hashCode();
      }
      if (getRemoteCount() > 0) {
        hash = (37 * hash) + REMOTE_FIELD_NUMBER;
        hash = (53 * hash) + getRemoteList().hashCode();
      }
      if (getHistoryCount() > 0) {
        hash = (37 * hash) + HISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getHistoryList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartFile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartFile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TideChartFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartFile)
        TideChart.TideChartFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartFile_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartFile.class, TideChart.TideChartFile.Builder.class);
      }

      // Construct using TideChart.TideChartFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWorkingFieldBuilder();
          getRemoteFieldBuilder();
          getHistoryFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        path_ = "";

        origin_ = "";

        modifiedDate_ = "";

        modifiedBy_ = "";

        if (chartBuilder_ == null) {
          chart_ = null;
        } else {
          chart_ = null;
          chartBuilder_ = null;
        }
        if (workingBuilder_ == null) {
          working_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          workingBuilder_.clear();
        }
        if (remoteBuilder_ == null) {
          remote_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          remoteBuilder_.clear();
        }
        if (historyBuilder_ == null) {
          history_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          historyBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartFile_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartFile getDefaultInstanceForType() {
        return TideChart.TideChartFile.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartFile build() {
        TideChart.TideChartFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartFile buildPartial() {
        TideChart.TideChartFile result = new TideChart.TideChartFile(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.name_ = name_;
        result.path_ = path_;
        result.origin_ = origin_;
        result.modifiedDate_ = modifiedDate_;
        result.modifiedBy_ = modifiedBy_;
        if (chartBuilder_ == null) {
          result.chart_ = chart_;
        } else {
          result.chart_ = chartBuilder_.build();
        }
        if (workingBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            working_ = java.util.Collections.unmodifiableList(working_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.working_ = working_;
        } else {
          result.working_ = workingBuilder_.build();
        }
        if (remoteBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            remote_ = java.util.Collections.unmodifiableList(remote_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.remote_ = remote_;
        } else {
          result.remote_ = remoteBuilder_.build();
        }
        if (historyBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            history_ = java.util.Collections.unmodifiableList(history_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.history_ = history_;
        } else {
          result.history_ = historyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartFile) {
          return mergeFrom((TideChart.TideChartFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartFile other) {
        if (other == TideChart.TideChartFile.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (!other.getOrigin().isEmpty()) {
          origin_ = other.origin_;
          onChanged();
        }
        if (!other.getModifiedDate().isEmpty()) {
          modifiedDate_ = other.modifiedDate_;
          onChanged();
        }
        if (!other.getModifiedBy().isEmpty()) {
          modifiedBy_ = other.modifiedBy_;
          onChanged();
        }
        if (other.hasChart()) {
          mergeChart(other.getChart());
        }
        if (workingBuilder_ == null) {
          if (!other.working_.isEmpty()) {
            if (working_.isEmpty()) {
              working_ = other.working_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWorkingIsMutable();
              working_.addAll(other.working_);
            }
            onChanged();
          }
        } else {
          if (!other.working_.isEmpty()) {
            if (workingBuilder_.isEmpty()) {
              workingBuilder_.dispose();
              workingBuilder_ = null;
              working_ = other.working_;
              bitField0_ = (bitField0_ & ~0x00000001);
              workingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWorkingFieldBuilder() : null;
            } else {
              workingBuilder_.addAllMessages(other.working_);
            }
          }
        }
        if (remoteBuilder_ == null) {
          if (!other.remote_.isEmpty()) {
            if (remote_.isEmpty()) {
              remote_ = other.remote_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRemoteIsMutable();
              remote_.addAll(other.remote_);
            }
            onChanged();
          }
        } else {
          if (!other.remote_.isEmpty()) {
            if (remoteBuilder_.isEmpty()) {
              remoteBuilder_.dispose();
              remoteBuilder_ = null;
              remote_ = other.remote_;
              bitField0_ = (bitField0_ & ~0x00000002);
              remoteBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRemoteFieldBuilder() : null;
            } else {
              remoteBuilder_.addAllMessages(other.remote_);
            }
          }
        }
        if (historyBuilder_ == null) {
          if (!other.history_.isEmpty()) {
            if (history_.isEmpty()) {
              history_ = other.history_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureHistoryIsMutable();
              history_.addAll(other.history_);
            }
            onChanged();
          }
        } else {
          if (!other.history_.isEmpty()) {
            if (historyBuilder_.isEmpty()) {
              historyBuilder_.dispose();
              historyBuilder_ = null;
              history_ = other.history_;
              bitField0_ = (bitField0_ & ~0x00000004);
              historyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHistoryFieldBuilder() : null;
            } else {
              historyBuilder_.addAllMessages(other.history_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartFile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object origin_ = "";
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public java.lang.String getOrigin() {
        java.lang.Object ref = origin_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          origin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOriginBytes() {
        java.lang.Object ref = origin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          origin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder setOrigin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder clearOrigin() {
        
        origin_ = getDefaultInstance().getOrigin();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder setOriginBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        origin_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object modifiedDate_ = "";
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public java.lang.String getModifiedDate() {
        java.lang.Object ref = modifiedDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modifiedDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public com.google.protobuf.ByteString
          getModifiedDateBytes() {
        java.lang.Object ref = modifiedDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modifiedDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder setModifiedDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modifiedDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder clearModifiedDate() {
        
        modifiedDate_ = getDefaultInstance().getModifiedDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder setModifiedDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modifiedDate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object modifiedBy_ = "";
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public java.lang.String getModifiedBy() {
        java.lang.Object ref = modifiedBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modifiedBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public com.google.protobuf.ByteString
          getModifiedByBytes() {
        java.lang.Object ref = modifiedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modifiedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder setModifiedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modifiedBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder clearModifiedBy() {
        
        modifiedBy_ = getDefaultInstance().getModifiedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder setModifiedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modifiedBy_ = value;
        onChanged();
        return this;
      }

      private TideChart.TideChartData chart_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder> chartBuilder_;
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public boolean hasChart() {
        return chartBuilder_ != null || chart_ != null;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public TideChart.TideChartData getChart() {
        if (chartBuilder_ == null) {
          return chart_ == null ? TideChart.TideChartData.getDefaultInstance() : chart_;
        } else {
          return chartBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public Builder setChart(TideChart.TideChartData value) {
        if (chartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chart_ = value;
          onChanged();
        } else {
          chartBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public Builder setChart(
          TideChart.TideChartData.Builder builderForValue) {
        if (chartBuilder_ == null) {
          chart_ = builderForValue.build();
          onChanged();
        } else {
          chartBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public Builder mergeChart(TideChart.TideChartData value) {
        if (chartBuilder_ == null) {
          if (chart_ != null) {
            chart_ =
              TideChart.TideChartData.newBuilder(chart_).mergeFrom(value).buildPartial();
          } else {
            chart_ = value;
          }
          onChanged();
        } else {
          chartBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public Builder clearChart() {
        if (chartBuilder_ == null) {
          chart_ = null;
          onChanged();
        } else {
          chart_ = null;
          chartBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public TideChart.TideChartData.Builder getChartBuilder() {
        
        onChanged();
        return getChartFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public TideChart.TideChartDataOrBuilder getChartOrBuilder() {
        if (chartBuilder_ != null) {
          return chartBuilder_.getMessageOrBuilder();
        } else {
          return chart_ == null ?
              TideChart.TideChartData.getDefaultInstance() : chart_;
        }
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder> 
          getChartFieldBuilder() {
        if (chartBuilder_ == null) {
          chartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder>(
                  getChart(),
                  getParentForChildren(),
                  isClean());
          chart_ = null;
        }
        return chartBuilder_;
      }

      private java.util.List<TideChart.TideChartCommand> working_ =
        java.util.Collections.emptyList();
      private void ensureWorkingIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          working_ = new java.util.ArrayList<TideChart.TideChartCommand>(working_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder> workingBuilder_;

      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public java.util.List<TideChart.TideChartCommand> getWorkingList() {
        if (workingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(working_);
        } else {
          return workingBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public int getWorkingCount() {
        if (workingBuilder_ == null) {
          return working_.size();
        } else {
          return workingBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public TideChart.TideChartCommand getWorking(int index) {
        if (workingBuilder_ == null) {
          return working_.get(index);
        } else {
          return workingBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder setWorking(
          int index, TideChart.TideChartCommand value) {
        if (workingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkingIsMutable();
          working_.set(index, value);
          onChanged();
        } else {
          workingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder setWorking(
          int index, TideChart.TideChartCommand.Builder builderForValue) {
        if (workingBuilder_ == null) {
          ensureWorkingIsMutable();
          working_.set(index, builderForValue.build());
          onChanged();
        } else {
          workingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder addWorking(TideChart.TideChartCommand value) {
        if (workingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkingIsMutable();
          working_.add(value);
          onChanged();
        } else {
          workingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder addWorking(
          int index, TideChart.TideChartCommand value) {
        if (workingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkingIsMutable();
          working_.add(index, value);
          onChanged();
        } else {
          workingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder addWorking(
          TideChart.TideChartCommand.Builder builderForValue) {
        if (workingBuilder_ == null) {
          ensureWorkingIsMutable();
          working_.add(builderForValue.build());
          onChanged();
        } else {
          workingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder addWorking(
          int index, TideChart.TideChartCommand.Builder builderForValue) {
        if (workingBuilder_ == null) {
          ensureWorkingIsMutable();
          working_.add(index, builderForValue.build());
          onChanged();
        } else {
          workingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder addAllWorking(
          java.lang.Iterable<? extends TideChart.TideChartCommand> values) {
        if (workingBuilder_ == null) {
          ensureWorkingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, working_);
          onChanged();
        } else {
          workingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder clearWorking() {
        if (workingBuilder_ == null) {
          working_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          workingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public Builder removeWorking(int index) {
        if (workingBuilder_ == null) {
          ensureWorkingIsMutable();
          working_.remove(index);
          onChanged();
        } else {
          workingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public TideChart.TideChartCommand.Builder getWorkingBuilder(
          int index) {
        return getWorkingFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public TideChart.TideChartCommandOrBuilder getWorkingOrBuilder(
          int index) {
        if (workingBuilder_ == null) {
          return working_.get(index);  } else {
          return workingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
           getWorkingOrBuilderList() {
        if (workingBuilder_ != null) {
          return workingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(working_);
        }
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public TideChart.TideChartCommand.Builder addWorkingBuilder() {
        return getWorkingFieldBuilder().addBuilder(
            TideChart.TideChartCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public TideChart.TideChartCommand.Builder addWorkingBuilder(
          int index) {
        return getWorkingFieldBuilder().addBuilder(
            index, TideChart.TideChartCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * uncommitted local changes
       * </pre>
       *
       * <code>repeated .TideChartCommand working = 8;</code>
       */
      public java.util.List<TideChart.TideChartCommand.Builder> 
           getWorkingBuilderList() {
        return getWorkingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder> 
          getWorkingFieldBuilder() {
        if (workingBuilder_ == null) {
          workingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder>(
                  working_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          working_ = null;
        }
        return workingBuilder_;
      }

      private java.util.List<TideChart.TideChartCommand> remote_ =
        java.util.Collections.emptyList();
      private void ensureRemoteIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          remote_ = new java.util.ArrayList<TideChart.TideChartCommand>(remote_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder> remoteBuilder_;

      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public java.util.List<TideChart.TideChartCommand> getRemoteList() {
        if (remoteBuilder_ == null) {
          return java.util.Collections.unmodifiableList(remote_);
        } else {
          return remoteBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public int getRemoteCount() {
        if (remoteBuilder_ == null) {
          return remote_.size();
        } else {
          return remoteBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public TideChart.TideChartCommand getRemote(int index) {
        if (remoteBuilder_ == null) {
          return remote_.get(index);
        } else {
          return remoteBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder setRemote(
          int index, TideChart.TideChartCommand value) {
        if (remoteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoteIsMutable();
          remote_.set(index, value);
          onChanged();
        } else {
          remoteBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder setRemote(
          int index, TideChart.TideChartCommand.Builder builderForValue) {
        if (remoteBuilder_ == null) {
          ensureRemoteIsMutable();
          remote_.set(index, builderForValue.build());
          onChanged();
        } else {
          remoteBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder addRemote(TideChart.TideChartCommand value) {
        if (remoteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoteIsMutable();
          remote_.add(value);
          onChanged();
        } else {
          remoteBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder addRemote(
          int index, TideChart.TideChartCommand value) {
        if (remoteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoteIsMutable();
          remote_.add(index, value);
          onChanged();
        } else {
          remoteBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder addRemote(
          TideChart.TideChartCommand.Builder builderForValue) {
        if (remoteBuilder_ == null) {
          ensureRemoteIsMutable();
          remote_.add(builderForValue.build());
          onChanged();
        } else {
          remoteBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder addRemote(
          int index, TideChart.TideChartCommand.Builder builderForValue) {
        if (remoteBuilder_ == null) {
          ensureRemoteIsMutable();
          remote_.add(index, builderForValue.build());
          onChanged();
        } else {
          remoteBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder addAllRemote(
          java.lang.Iterable<? extends TideChart.TideChartCommand> values) {
        if (remoteBuilder_ == null) {
          ensureRemoteIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, remote_);
          onChanged();
        } else {
          remoteBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder clearRemote() {
        if (remoteBuilder_ == null) {
          remote_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          remoteBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public Builder removeRemote(int index) {
        if (remoteBuilder_ == null) {
          ensureRemoteIsMutable();
          remote_.remove(index);
          onChanged();
        } else {
          remoteBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public TideChart.TideChartCommand.Builder getRemoteBuilder(
          int index) {
        return getRemoteFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public TideChart.TideChartCommandOrBuilder getRemoteOrBuilder(
          int index) {
        if (remoteBuilder_ == null) {
          return remote_.get(index);  } else {
          return remoteBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public java.util.List<? extends TideChart.TideChartCommandOrBuilder> 
           getRemoteOrBuilderList() {
        if (remoteBuilder_ != null) {
          return remoteBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(remote_);
        }
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public TideChart.TideChartCommand.Builder addRemoteBuilder() {
        return getRemoteFieldBuilder().addBuilder(
            TideChart.TideChartCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public TideChart.TideChartCommand.Builder addRemoteBuilder(
          int index) {
        return getRemoteFieldBuilder().addBuilder(
            index, TideChart.TideChartCommand.getDefaultInstance());
      }
      /**
       * <pre>
       * unmerged changes committed remotely
       * </pre>
       *
       * <code>repeated .TideChartCommand remote = 9;</code>
       */
      public java.util.List<TideChart.TideChartCommand.Builder> 
           getRemoteBuilderList() {
        return getRemoteFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder> 
          getRemoteFieldBuilder() {
        if (remoteBuilder_ == null) {
          remoteBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartCommand, TideChart.TideChartCommand.Builder, TideChart.TideChartCommandOrBuilder>(
                  remote_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          remote_ = null;
        }
        return remoteBuilder_;
      }

      private java.util.List<TideChart.TideChartData> history_ =
        java.util.Collections.emptyList();
      private void ensureHistoryIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          history_ = new java.util.ArrayList<TideChart.TideChartData>(history_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder> historyBuilder_;

      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public java.util.List<TideChart.TideChartData> getHistoryList() {
        if (historyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(history_);
        } else {
          return historyBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public int getHistoryCount() {
        if (historyBuilder_ == null) {
          return history_.size();
        } else {
          return historyBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public TideChart.TideChartData getHistory(int index) {
        if (historyBuilder_ == null) {
          return history_.get(index);
        } else {
          return historyBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder setHistory(
          int index, TideChart.TideChartData value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.set(index, value);
          onChanged();
        } else {
          historyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder setHistory(
          int index, TideChart.TideChartData.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.set(index, builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder addHistory(TideChart.TideChartData value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.add(value);
          onChanged();
        } else {
          historyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder addHistory(
          int index, TideChart.TideChartData value) {
        if (historyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryIsMutable();
          history_.add(index, value);
          onChanged();
        } else {
          historyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder addHistory(
          TideChart.TideChartData.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.add(builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder addHistory(
          int index, TideChart.TideChartData.Builder builderForValue) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.add(index, builderForValue.build());
          onChanged();
        } else {
          historyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder addAllHistory(
          java.lang.Iterable<? extends TideChart.TideChartData> values) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, history_);
          onChanged();
        } else {
          historyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder clearHistory() {
        if (historyBuilder_ == null) {
          history_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          historyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public Builder removeHistory(int index) {
        if (historyBuilder_ == null) {
          ensureHistoryIsMutable();
          history_.remove(index);
          onChanged();
        } else {
          historyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public TideChart.TideChartData.Builder getHistoryBuilder(
          int index) {
        return getHistoryFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public TideChart.TideChartDataOrBuilder getHistoryOrBuilder(
          int index) {
        if (historyBuilder_ == null) {
          return history_.get(index);  } else {
          return historyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public java.util.List<? extends TideChart.TideChartDataOrBuilder> 
           getHistoryOrBuilderList() {
        if (historyBuilder_ != null) {
          return historyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(history_);
        }
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public TideChart.TideChartData.Builder addHistoryBuilder() {
        return getHistoryFieldBuilder().addBuilder(
            TideChart.TideChartData.getDefaultInstance());
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public TideChart.TideChartData.Builder addHistoryBuilder(
          int index) {
        return getHistoryFieldBuilder().addBuilder(
            index, TideChart.TideChartData.getDefaultInstance());
      }
      /**
       * <pre>
       * previous saved versions of the chart
       * </pre>
       *
       * <code>repeated .TideChartData history = 10;</code>
       */
      public java.util.List<TideChart.TideChartData.Builder> 
           getHistoryBuilderList() {
        return getHistoryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder> 
          getHistoryFieldBuilder() {
        if (historyBuilder_ == null) {
          historyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder>(
                  history_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          history_ = null;
        }
        return historyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartFile)
    }

    // @@protoc_insertion_point(class_scope:TideChartFile)
    private static final TideChart.TideChartFile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartFile();
    }

    public static TideChart.TideChartFile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartFile>
        PARSER = new com.google.protobuf.AbstractParser<TideChartFile>() {
      @java.lang.Override
      public TideChartFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartFile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartFile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartFile> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartFile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartFileHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartFileHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    java.lang.String getOrigin();
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    com.google.protobuf.ByteString
        getOriginBytes();

    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    java.lang.String getModifiedDate();
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    com.google.protobuf.ByteString
        getModifiedDateBytes();

    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    java.lang.String getModifiedBy();
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    com.google.protobuf.ByteString
        getModifiedByBytes();
  }
  /**
   * <pre>
   * Read only the file header information
   * </pre>
   *
   * Protobuf type {@code TideChartFileHeader}
   */
  public  static final class TideChartFileHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartFileHeader)
      TideChartFileHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartFileHeader.newBuilder() to construct.
    private TideChartFileHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartFileHeader() {
      id_ = "";
      name_ = "";
      path_ = "";
      origin_ = "";
      modifiedDate_ = "";
      modifiedBy_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartFileHeader();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartFileHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              origin_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              modifiedDate_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              modifiedBy_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartFileHeader_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartFileHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartFileHeader.class, TideChart.TideChartFileHeader.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORIGIN_FIELD_NUMBER = 4;
    private volatile java.lang.Object origin_;
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    public java.lang.String getOrigin() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        origin_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOriginBytes() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        origin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODIFIEDDATE_FIELD_NUMBER = 5;
    private volatile java.lang.Object modifiedDate_;
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    public java.lang.String getModifiedDate() {
      java.lang.Object ref = modifiedDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modifiedDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    public com.google.protobuf.ByteString
        getModifiedDateBytes() {
      java.lang.Object ref = modifiedDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modifiedDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODIFIEDBY_FIELD_NUMBER = 6;
    private volatile java.lang.Object modifiedBy_;
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    public java.lang.String getModifiedBy() {
      java.lang.Object ref = modifiedBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modifiedBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    public com.google.protobuf.ByteString
        getModifiedByBytes() {
      java.lang.Object ref = modifiedBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modifiedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, path_);
      }
      if (!getOriginBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, origin_);
      }
      if (!getModifiedDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, modifiedDate_);
      }
      if (!getModifiedByBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, modifiedBy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, path_);
      }
      if (!getOriginBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, origin_);
      }
      if (!getModifiedDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, modifiedDate_);
      }
      if (!getModifiedByBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, modifiedBy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartFileHeader)) {
        return super.equals(obj);
      }
      TideChart.TideChartFileHeader other = (TideChart.TideChartFileHeader) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getPath()
          .equals(other.getPath())) return false;
      if (!getOrigin()
          .equals(other.getOrigin())) return false;
      if (!getModifiedDate()
          .equals(other.getModifiedDate())) return false;
      if (!getModifiedBy()
          .equals(other.getModifiedBy())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
      hash = (37 * hash) + MODIFIEDDATE_FIELD_NUMBER;
      hash = (53 * hash) + getModifiedDate().hashCode();
      hash = (37 * hash) + MODIFIEDBY_FIELD_NUMBER;
      hash = (53 * hash) + getModifiedBy().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartFileHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFileHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFileHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFileHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFileHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFileHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFileHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFileHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartFileHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFileHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartFileHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFileHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartFileHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Read only the file header information
     * </pre>
     *
     * Protobuf type {@code TideChartFileHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartFileHeader)
        TideChart.TideChartFileHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartFileHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartFileHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartFileHeader.class, TideChart.TideChartFileHeader.Builder.class);
      }

      // Construct using TideChart.TideChartFileHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        path_ = "";

        origin_ = "";

        modifiedDate_ = "";

        modifiedBy_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartFileHeader_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartFileHeader getDefaultInstanceForType() {
        return TideChart.TideChartFileHeader.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartFileHeader build() {
        TideChart.TideChartFileHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartFileHeader buildPartial() {
        TideChart.TideChartFileHeader result = new TideChart.TideChartFileHeader(this);
        result.id_ = id_;
        result.name_ = name_;
        result.path_ = path_;
        result.origin_ = origin_;
        result.modifiedDate_ = modifiedDate_;
        result.modifiedBy_ = modifiedBy_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartFileHeader) {
          return mergeFrom((TideChart.TideChartFileHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartFileHeader other) {
        if (other == TideChart.TideChartFileHeader.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (!other.getOrigin().isEmpty()) {
          origin_ = other.origin_;
          onChanged();
        }
        if (!other.getModifiedDate().isEmpty()) {
          modifiedDate_ = other.modifiedDate_;
          onChanged();
        }
        if (!other.getModifiedBy().isEmpty()) {
          modifiedBy_ = other.modifiedBy_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartFileHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartFileHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object origin_ = "";
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public java.lang.String getOrigin() {
        java.lang.Object ref = origin_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          origin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOriginBytes() {
        java.lang.Object ref = origin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          origin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder setOrigin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder clearOrigin() {
        
        origin_ = getDefaultInstance().getOrigin();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder setOriginBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        origin_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object modifiedDate_ = "";
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public java.lang.String getModifiedDate() {
        java.lang.Object ref = modifiedDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modifiedDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public com.google.protobuf.ByteString
          getModifiedDateBytes() {
        java.lang.Object ref = modifiedDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modifiedDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder setModifiedDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modifiedDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder clearModifiedDate() {
        
        modifiedDate_ = getDefaultInstance().getModifiedDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder setModifiedDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modifiedDate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object modifiedBy_ = "";
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public java.lang.String getModifiedBy() {
        java.lang.Object ref = modifiedBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modifiedBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public com.google.protobuf.ByteString
          getModifiedByBytes() {
        java.lang.Object ref = modifiedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modifiedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder setModifiedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modifiedBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder clearModifiedBy() {
        
        modifiedBy_ = getDefaultInstance().getModifiedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder setModifiedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modifiedBy_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartFileHeader)
    }

    // @@protoc_insertion_point(class_scope:TideChartFileHeader)
    private static final TideChart.TideChartFileHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartFileHeader();
    }

    public static TideChart.TideChartFileHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartFileHeader>
        PARSER = new com.google.protobuf.AbstractParser<TideChartFileHeader>() {
      @java.lang.Override
      public TideChartFileHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartFileHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartFileHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartFileHeader> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartFileHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TideChartFileCurrentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TideChartFileCurrent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    java.lang.String getOrigin();
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    com.google.protobuf.ByteString
        getOriginBytes();

    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    java.lang.String getModifiedDate();
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    com.google.protobuf.ByteString
        getModifiedDateBytes();

    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    java.lang.String getModifiedBy();
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    com.google.protobuf.ByteString
        getModifiedByBytes();

    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    boolean hasChart();
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    TideChart.TideChartData getChart();
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    TideChart.TideChartDataOrBuilder getChartOrBuilder();
  }
  /**
   * <pre>
   * Read only the current version
   * </pre>
   *
   * Protobuf type {@code TideChartFileCurrent}
   */
  public  static final class TideChartFileCurrent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TideChartFileCurrent)
      TideChartFileCurrentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TideChartFileCurrent.newBuilder() to construct.
    private TideChartFileCurrent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TideChartFileCurrent() {
      id_ = "";
      name_ = "";
      path_ = "";
      origin_ = "";
      modifiedDate_ = "";
      modifiedBy_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TideChartFileCurrent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TideChartFileCurrent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              origin_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              modifiedDate_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              modifiedBy_ = s;
              break;
            }
            case 58: {
              TideChart.TideChartData.Builder subBuilder = null;
              if (chart_ != null) {
                subBuilder = chart_.toBuilder();
              }
              chart_ = input.readMessage(TideChart.TideChartData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chart_);
                chart_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TideChart.internal_static_TideChartFileCurrent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TideChart.internal_static_TideChartFileCurrent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TideChart.TideChartFileCurrent.class, TideChart.TideChartFileCurrent.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * unique id for this file
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name for the file (virtual file system)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * path for the file (virtual file system)
     * </pre>
     *
     * <code>string path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORIGIN_FIELD_NUMBER = 4;
    private volatile java.lang.Object origin_;
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    public java.lang.String getOrigin() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        origin_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * shared repository for tracking remote changes
     * </pre>
     *
     * <code>string origin = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOriginBytes() {
      java.lang.Object ref = origin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        origin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODIFIEDDATE_FIELD_NUMBER = 5;
    private volatile java.lang.Object modifiedDate_;
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    public java.lang.String getModifiedDate() {
      java.lang.Object ref = modifiedDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modifiedDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * date the file was last modified
     * </pre>
     *
     * <code>string modifiedDate = 5;</code>
     */
    public com.google.protobuf.ByteString
        getModifiedDateBytes() {
      java.lang.Object ref = modifiedDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modifiedDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODIFIEDBY_FIELD_NUMBER = 6;
    private volatile java.lang.Object modifiedBy_;
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    public java.lang.String getModifiedBy() {
      java.lang.Object ref = modifiedBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modifiedBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * user that last modified the file
     * </pre>
     *
     * <code>string modifiedBy = 6;</code>
     */
    public com.google.protobuf.ByteString
        getModifiedByBytes() {
      java.lang.Object ref = modifiedBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modifiedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHART_FIELD_NUMBER = 7;
    private TideChart.TideChartData chart_;
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    public boolean hasChart() {
      return chart_ != null;
    }
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    public TideChart.TideChartData getChart() {
      return chart_ == null ? TideChart.TideChartData.getDefaultInstance() : chart_;
    }
    /**
     * <pre>
     * the last committed version of the chart
     * </pre>
     *
     * <code>.TideChartData chart = 7;</code>
     */
    public TideChart.TideChartDataOrBuilder getChartOrBuilder() {
      return getChart();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, path_);
      }
      if (!getOriginBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, origin_);
      }
      if (!getModifiedDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, modifiedDate_);
      }
      if (!getModifiedByBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, modifiedBy_);
      }
      if (chart_ != null) {
        output.writeMessage(7, getChart());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, path_);
      }
      if (!getOriginBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, origin_);
      }
      if (!getModifiedDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, modifiedDate_);
      }
      if (!getModifiedByBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, modifiedBy_);
      }
      if (chart_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getChart());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof TideChart.TideChartFileCurrent)) {
        return super.equals(obj);
      }
      TideChart.TideChartFileCurrent other = (TideChart.TideChartFileCurrent) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getPath()
          .equals(other.getPath())) return false;
      if (!getOrigin()
          .equals(other.getOrigin())) return false;
      if (!getModifiedDate()
          .equals(other.getModifiedDate())) return false;
      if (!getModifiedBy()
          .equals(other.getModifiedBy())) return false;
      if (hasChart() != other.hasChart()) return false;
      if (hasChart()) {
        if (!getChart()
            .equals(other.getChart())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
      hash = (37 * hash) + MODIFIEDDATE_FIELD_NUMBER;
      hash = (53 * hash) + getModifiedDate().hashCode();
      hash = (37 * hash) + MODIFIEDBY_FIELD_NUMBER;
      hash = (53 * hash) + getModifiedBy().hashCode();
      if (hasChart()) {
        hash = (37 * hash) + CHART_FIELD_NUMBER;
        hash = (53 * hash) + getChart().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static TideChart.TideChartFileCurrent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFileCurrent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFileCurrent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFileCurrent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFileCurrent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TideChart.TideChartFileCurrent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TideChart.TideChartFileCurrent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFileCurrent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartFileCurrent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFileCurrent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static TideChart.TideChartFileCurrent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static TideChart.TideChartFileCurrent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(TideChart.TideChartFileCurrent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Read only the current version
     * </pre>
     *
     * Protobuf type {@code TideChartFileCurrent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TideChartFileCurrent)
        TideChart.TideChartFileCurrentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TideChart.internal_static_TideChartFileCurrent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TideChart.internal_static_TideChartFileCurrent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TideChart.TideChartFileCurrent.class, TideChart.TideChartFileCurrent.Builder.class);
      }

      // Construct using TideChart.TideChartFileCurrent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        path_ = "";

        origin_ = "";

        modifiedDate_ = "";

        modifiedBy_ = "";

        if (chartBuilder_ == null) {
          chart_ = null;
        } else {
          chart_ = null;
          chartBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TideChart.internal_static_TideChartFileCurrent_descriptor;
      }

      @java.lang.Override
      public TideChart.TideChartFileCurrent getDefaultInstanceForType() {
        return TideChart.TideChartFileCurrent.getDefaultInstance();
      }

      @java.lang.Override
      public TideChart.TideChartFileCurrent build() {
        TideChart.TideChartFileCurrent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public TideChart.TideChartFileCurrent buildPartial() {
        TideChart.TideChartFileCurrent result = new TideChart.TideChartFileCurrent(this);
        result.id_ = id_;
        result.name_ = name_;
        result.path_ = path_;
        result.origin_ = origin_;
        result.modifiedDate_ = modifiedDate_;
        result.modifiedBy_ = modifiedBy_;
        if (chartBuilder_ == null) {
          result.chart_ = chart_;
        } else {
          result.chart_ = chartBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TideChart.TideChartFileCurrent) {
          return mergeFrom((TideChart.TideChartFileCurrent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TideChart.TideChartFileCurrent other) {
        if (other == TideChart.TideChartFileCurrent.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (!other.getOrigin().isEmpty()) {
          origin_ = other.origin_;
          onChanged();
        }
        if (!other.getModifiedDate().isEmpty()) {
          modifiedDate_ = other.modifiedDate_;
          onChanged();
        }
        if (!other.getModifiedBy().isEmpty()) {
          modifiedBy_ = other.modifiedBy_;
          onChanged();
        }
        if (other.hasChart()) {
          mergeChart(other.getChart());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TideChart.TideChartFileCurrent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TideChart.TideChartFileCurrent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for this file
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name for the file (virtual file system)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path for the file (virtual file system)
       * </pre>
       *
       * <code>string path = 3;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object origin_ = "";
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public java.lang.String getOrigin() {
        java.lang.Object ref = origin_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          origin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOriginBytes() {
        java.lang.Object ref = origin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          origin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder setOrigin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder clearOrigin() {
        
        origin_ = getDefaultInstance().getOrigin();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * shared repository for tracking remote changes
       * </pre>
       *
       * <code>string origin = 4;</code>
       */
      public Builder setOriginBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        origin_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object modifiedDate_ = "";
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public java.lang.String getModifiedDate() {
        java.lang.Object ref = modifiedDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modifiedDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public com.google.protobuf.ByteString
          getModifiedDateBytes() {
        java.lang.Object ref = modifiedDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modifiedDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder setModifiedDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modifiedDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder clearModifiedDate() {
        
        modifiedDate_ = getDefaultInstance().getModifiedDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * date the file was last modified
       * </pre>
       *
       * <code>string modifiedDate = 5;</code>
       */
      public Builder setModifiedDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modifiedDate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object modifiedBy_ = "";
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public java.lang.String getModifiedBy() {
        java.lang.Object ref = modifiedBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modifiedBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public com.google.protobuf.ByteString
          getModifiedByBytes() {
        java.lang.Object ref = modifiedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modifiedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder setModifiedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modifiedBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder clearModifiedBy() {
        
        modifiedBy_ = getDefaultInstance().getModifiedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user that last modified the file
       * </pre>
       *
       * <code>string modifiedBy = 6;</code>
       */
      public Builder setModifiedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modifiedBy_ = value;
        onChanged();
        return this;
      }

      private TideChart.TideChartData chart_;
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder> chartBuilder_;
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public boolean hasChart() {
        return chartBuilder_ != null || chart_ != null;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public TideChart.TideChartData getChart() {
        if (chartBuilder_ == null) {
          return chart_ == null ? TideChart.TideChartData.getDefaultInstance() : chart_;
        } else {
          return chartBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public Builder setChart(TideChart.TideChartData value) {
        if (chartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chart_ = value;
          onChanged();
        } else {
          chartBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public Builder setChart(
          TideChart.TideChartData.Builder builderForValue) {
        if (chartBuilder_ == null) {
          chart_ = builderForValue.build();
          onChanged();
        } else {
          chartBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public Builder mergeChart(TideChart.TideChartData value) {
        if (chartBuilder_ == null) {
          if (chart_ != null) {
            chart_ =
              TideChart.TideChartData.newBuilder(chart_).mergeFrom(value).buildPartial();
          } else {
            chart_ = value;
          }
          onChanged();
        } else {
          chartBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public Builder clearChart() {
        if (chartBuilder_ == null) {
          chart_ = null;
          onChanged();
        } else {
          chart_ = null;
          chartBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public TideChart.TideChartData.Builder getChartBuilder() {
        
        onChanged();
        return getChartFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      public TideChart.TideChartDataOrBuilder getChartOrBuilder() {
        if (chartBuilder_ != null) {
          return chartBuilder_.getMessageOrBuilder();
        } else {
          return chart_ == null ?
              TideChart.TideChartData.getDefaultInstance() : chart_;
        }
      }
      /**
       * <pre>
       * the last committed version of the chart
       * </pre>
       *
       * <code>.TideChartData chart = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder> 
          getChartFieldBuilder() {
        if (chartBuilder_ == null) {
          chartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TideChart.TideChartData, TideChart.TideChartData.Builder, TideChart.TideChartDataOrBuilder>(
                  getChart(),
                  getParentForChildren(),
                  isClean());
          chart_ = null;
        }
        return chartBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TideChartFileCurrent)
    }

    // @@protoc_insertion_point(class_scope:TideChartFileCurrent)
    private static final TideChart.TideChartFileCurrent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TideChart.TideChartFileCurrent();
    }

    public static TideChart.TideChartFileCurrent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TideChartFileCurrent>
        PARSER = new com.google.protobuf.AbstractParser<TideChartFileCurrent>() {
      @java.lang.Override
      public TideChartFileCurrent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TideChartFileCurrent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TideChartFileCurrent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TideChartFileCurrent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public TideChart.TideChartFileCurrent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartProperty_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartProperty_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartCommentBox_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartCommentBox_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartWidget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartWidget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartPort_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartPort_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartLink_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartLink_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartNote_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartNote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartRegion_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartRegion_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartGraph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartGraph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartGroupCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartGroupCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartMoveCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartMoveCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartCommentBoxCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartCommentBoxCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartWidgetCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartWidgetCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartPortCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartPortCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartLinkCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartLinkCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartNodeCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartNodeCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartRegionCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartRegionCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartGraphCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartGraphCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartPropertyCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartPropertyCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartNoteCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartNoteCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartMethod_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartMethod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartLibrary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartLibrary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartSite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartSite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartFile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartFileHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartFileHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TideChartFileCurrent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TideChartFileCurrent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020tide_chart.proto\"a\n\021TideChartProperty\022" +
      "\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\r\n\005value\030\003 \001" +
      "(\t\022!\n\005props\030\004 \003(\0132\022.TideChartProperty\"\265\002" +
      "\n\023TideChartCommentBox\022\n\n\002id\030\001 \001(\t\022\016\n\006reg" +
      "ion\030\002 \001(\t\022\014\n\004posX\030\003 \001(\021\022\014\n\004posY\030\004 \001(\021\022\r\n" +
      "\005width\030\005 \001(\005\022\016\n\006height\030\006 \001(\005\022\016\n\004text\030\007 \001" +
      "(\tH\000\022\017\n\005image\030\010 \001(\014H\000\022\016\n\004icon\030\t \001(\tH\000\022\020\n" +
      "\010fontSize\030\n \001(\001\022\021\n\tfontStyle\030\013 \001(\t\022\021\n\tal" +
      "ignment\030\014 \003(\021\022\r\n\005color\030\r \001(\005\022\022\n\nbackgrou" +
      "nd\030\016 \001(\005\022\016\n\006border\030\017 \003(\005\022\016\n\006raised\030\020 \001(\010" +
      "\022\020\n\010reversed\030\021 \001(\010B\t\n\007content\"\342\001\n\017TideCh" +
      "artWidget\022\n\n\002id\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\r\n\005t" +
      "itle\030\003 \001(\t\022\016\n\006region\030\004 \001(\t\022\014\n\004posX\030\005 \001(\021" +
      "\022\014\n\004posY\030\006 \001(\021\022\r\n\005width\030\007 \001(\005\022\016\n\006height\030" +
      "\010 \001(\005\022\016\n\004link\030\t \001(\tH\000\022\016\n\004port\030\n \001(\tH\000\022\016\n" +
      "\004node\030\013 \001(\tH\000\022!\n\005props\030\014 \003(\0132\022.TideChart" +
      "PropertyB\010\n\006target\"\200\002\n\rTideChartPort\022\014\n\004" +
      "type\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\017\n\007ordinal\030\003 \001(" +
      "\005\022\017\n\007default\030\004 \001(\010\022\020\n\010required\030\005 \001(\010\022\017\n\007" +
      "allowed\030\006 \003(\t\022\014\n\004hint\030\007 \001(\t\022$\n\010constant\030" +
      "\010 \001(\0132\022.TideChartProperty\022\017\n\007trigger\030\t \001" +
      "(\t\022\016\n\006filter\030\n \001(\t\022\r\n\005event\030\013 \001(\t\022\014\n\004syn" +
      "c\030\014 \001(\t\022\r\n\005block\030\r \001(\010\022\r\n\005queue\030\016 \001(\010\"\305\001" +
      "\n\rTideChartLink\022\017\n\007outNode\030\001 \001(\t\022\017\n\007outP" +
      "ort\030\002 \001(\t\022\016\n\006inNode\030\003 \001(\t\022\016\n\006inPort\030\004 \001(" +
      "\t\022\r\n\005group\030\005 \001(\005\022\r\n\005delay\030\006 \001(\005\022\016\n\006filte" +
      "r\030\007 \001(\t\022\017\n\007logging\030\020 \001(\010\022\021\n\tdebugging\030\021 " +
      "\001(\010\022\016\n\006paused\030\022 \001(\010\022\020\n\010disabled\030\023 \001(\010\"w\n" +
      "\rTideChartNote\022\n\n\002id\030\001 \001(\t\022\017\n\007replyTo\030\002 " +
      "\001(\t\022\020\n\010changeTo\030\003 \001(\t\022\017\n\007content\030\004 \001(\t\022\021" +
      "\n\tcreatedBy\030\005 \001(\t\022\023\n\013createdDate\030\006 \001(\t\"\357" +
      "\002\n\rTideChartNode\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002" +
      " \001(\t\022\014\n\004posX\030\003 \001(\021\022\014\n\004posY\030\004 \001(\021\022\r\n\005titl" +
      "e\030\005 \001(\t\022\014\n\004icon\030\006 \001(\t\022\017\n\007library\030\007 \001(\t\022\016" +
      "\n\006method\030\010 \001(\t\022\r\n\005delay\030\t \001(\005\022\037\n\007inports" +
      "\030\n \003(\0132\016.TideChartPort\022 \n\010outports\030\013 \003(\013" +
      "2\016.TideChartPort\022!\n\005props\030\014 \003(\0132\022.TideCh" +
      "artProperty\022\017\n\007logging\030\020 \001(\010\022\021\n\tdebuggin" +
      "g\030\021 \001(\010\022\016\n\006paused\030\022 \001(\010\022\020\n\010disabled\030\023 \001(" +
      "\010\022\035\n\005notes\030\024 \003(\0132\016.TideChartNote\022\016\n\006scri" +
      "pt\030\025 \001(\t\"\363\001\n\017TideChartRegion\022\014\n\004name\030\001 \001" +
      "(\t\022\r\n\005title\030\002 \001(\t\022\r\n\005nodes\030\003 \003(\t\022\r\n\005grou" +
      "p\030\004 \001(\005\022\r\n\005scope\030\005 \001(\t\022!\n\005props\030\006 \003(\0132\022." +
      "TideChartProperty\022\017\n\007logging\030\020 \001(\010\022\021\n\tde" +
      "bugging\030\021 \001(\010\022\016\n\006paused\030\022 \001(\010\022\020\n\010disable" +
      "d\030\023 \001(\010\022\035\n\005notes\030\024 \003(\0132\016.TideChartNote\022\016" +
      "\n\006script\030\025 \001(\t\"\320\003\n\016TideChartGraph\022\n\n\002id\030" +
      "\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\r\n\005tit" +
      "le\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\016\n\006source\030\006 \001(" +
      "\t\022\035\n\005nodes\030\007 \003(\0132\016.TideChartNode\022\035\n\005link" +
      "s\030\010 \003(\0132\016.TideChartLink\022!\n\007regions\030\t \003(\013" +
      "2\020.TideChartRegion\022&\n\010comments\030\n \003(\0132\024.T" +
      "ideChartCommentBox\022!\n\007widgets\030\013 \003(\0132\020.Ti" +
      "deChartWidget\022!\n\005props\030\014 \003(\0132\022.TideChart" +
      "Property\022\"\n\007history\030\r \003(\0132\021.TideChartCom" +
      "mand\022\017\n\007logging\030\020 \001(\010\022\021\n\tdebugging\030\021 \001(\010" +
      "\022\016\n\006paused\030\022 \001(\010\022\020\n\010disabled\030\023 \001(\010\022\035\n\005no" +
      "tes\030\024 \003(\0132\016.TideChartNote\022\016\n\006script\030\025 \001(" +
      "\t\"\205\004\n\020TideChartCommand\022\017\n\007version\030\001 \001(\t\022" +
      "\016\n\006target\030\002 \001(\t\022\'\n\005group\030\003 \001(\0132\026.TideCha" +
      "rtGroupCommandH\000\022%\n\004move\030\004 \001(\0132\025.TideCha" +
      "rtMoveCommandH\000\022.\n\007comment\030\005 \001(\0132\033.TideC" +
      "hartCommentBoxCommandH\000\022)\n\006widget\030\006 \001(\0132" +
      "\027.TideChartWidgetCommandH\000\022%\n\004port\030\007 \001(\013" +
      "2\025.TideChartPortCommandH\000\022%\n\004link\030\010 \001(\0132" +
      "\025.TideChartLinkCommandH\000\022%\n\004node\030\t \001(\0132\025" +
      ".TideChartNodeCommandH\000\022)\n\006region\030\n \001(\0132" +
      "\027.TideChartRegionCommandH\000\022\'\n\005graph\030\013 \001(" +
      "\0132\026.TideChartGraphCommandH\000\022*\n\005props\030\014 \001" +
      "(\0132\031.TideChartPropertyCommandH\000\022%\n\004note\030" +
      "\r \001(\0132\025.TideChartNoteCommandH\000B\t\n\007comman" +
      "d\"8\n\025TideChartGroupCommand\022\037\n\004cmds\030\001 \003(\013" +
      "2\021.TideChartCommand\"h\n\024TideChartMoveComm" +
      "and\022\014\n\004node\030\001 \001(\t\022\020\n\010fromPosX\030\002 \001(\021\022\020\n\010f" +
      "romPosY\030\003 \001(\021\022\016\n\006toPosX\030\004 \001(\021\022\016\n\006toPosY\030" +
      "\005 \001(\021\"~\n\032TideChartCommentBoxCommand\022)\n\013f" +
      "romComment\030\001 \001(\0132\024.TideChartCommentBox\022\'" +
      "\n\ttoComment\030\002 \001(\0132\024.TideChartCommentBox\022" +
      "\014\n\004type\030\003 \001(\t\"p\n\026TideChartWidgetCommand\022" +
      "$\n\nfromWidget\030\001 \001(\0132\020.TideChartWidget\022\"\n" +
      "\010toWidget\030\002 \001(\0132\020.TideChartWidget\022\014\n\004typ" +
      "e\030\003 \001(\t\"f\n\024TideChartPortCommand\022 \n\010fromP" +
      "ort\030\001 \001(\0132\016.TideChartPort\022\036\n\006toPort\030\002 \001(" +
      "\0132\016.TideChartPort\022\014\n\004type\030\003 \001(\t\"f\n\024TideC" +
      "hartLinkCommand\022 \n\010fromLink\030\001 \001(\0132\016.Tide" +
      "ChartLink\022\036\n\006toLink\030\002 \001(\0132\016.TideChartLin" +
      "k\022\014\n\004type\030\003 \001(\t\"f\n\024TideChartNodeCommand\022" +
      " \n\010fromNode\030\001 \001(\0132\016.TideChartNode\022\036\n\006toN" +
      "ode\030\002 \001(\0132\016.TideChartNode\022\014\n\004type\030\003 \001(\t\"" +
      "p\n\026TideChartRegionCommand\022$\n\nfromRegion\030" +
      "\001 \001(\0132\020.TideChartRegion\022\"\n\010toRegion\030\002 \001(" +
      "\0132\020.TideChartRegion\022\014\n\004type\030\003 \001(\t\"k\n\025Tid" +
      "eChartGraphCommand\022\"\n\tfromGraph\030\001 \001(\0132\017." +
      "TideChartGraph\022 \n\007toGraph\030\002 \001(\0132\017.TideCh" +
      "artGraph\022\014\n\004type\030\003 \001(\t\"\303\001\n\030TideChartProp" +
      "ertyCommand\022%\n\tfromProps\030\001 \003(\0132\022.TideCha" +
      "rtProperty\022#\n\007toProps\030\002 \003(\0132\022.TideChartP" +
      "roperty\022\014\n\004type\030\003 \001(\t\022\016\n\004node\030\005 \001(\tH\000\022\020\n" +
      "\006region\030\006 \001(\tH\000\022\020\n\006widget\030\007 \001(\tH\000\022\017\n\005gra" +
      "ph\030\010 \001(\tH\000B\010\n\006target\"\200\001\n\024TideChartNoteCo" +
      "mmand\022\035\n\005notes\030\001 \003(\0132\016.TideChartNote\022\014\n\004" +
      "type\030\002 \001(\t\022\016\n\004node\030\003 \001(\tH\000\022\020\n\006region\030\004 \001" +
      "(\tH\000\022\017\n\005graph\030\005 \001(\tH\000B\010\n\006target\"\256\001\n\017Tide" +
      "ChartMethod\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\017\n" +
      "\007extends\030\003 \001(\t\022\016\n\006script\030\004 \001(\t\022\037\n\007inport" +
      "s\030\005 \003(\0132\016.TideChartPort\022 \n\010outports\030\006 \003(" +
      "\0132\016.TideChartPort\022\035\n\005props\030\007 \003(\0132\016.TideC" +
      "hartPort\"\221\001\n\017TideChartSource\022\n\n\002id\030\001 \001(\t" +
      "\022\014\n\004name\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\023\n\013createdD" +
      "ate\030\005 \001(\t\022\021\n\tcreatedBy\030\006 \001(\t\022\021\n\007version\030" +
      "\007 \001(\tH\000\022\020\n\006script\030\010 \001(\tH\000B\t\n\007content\"\255\001\n" +
      "\020TideChartLibrary\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 " +
      "\001(\t\022\r\n\005title\030\003 \001(\t\022\016\n\006origin\030\004 \001(\t\022\016\n\006br" +
      "anch\030\005 \001(\t\022\014\n\004path\030\006 \001(\t\022\037\n\005files\030\007 \003(\0132" +
      "\020.TideChartSource\022!\n\007methods\030\010 \003(\0132\020.Tid" +
      "eChartMethod\"\305\001\n\rTideChartSite\022\r\n\005index\030" +
      "\001 \001(\003\022\035\n\005stack\030\002 \003(\0132\016.TideChartSite\022\014\n\004" +
      "path\030\003 \001(\t\022\017\n\007trigger\030\004 \001(\t\022\r\n\005event\030\005 \001" +
      "(\t\022\r\n\005scope\030\006 \003(\t\022\016\n\006filter\030\007 \001(\t\022\r\n\005gra" +
      "ph\030\010 \001(\t\022\016\n\006region\030\t \001(\t\022\014\n\004node\030\n \001(\t\022\014" +
      "\n\004port\030\013 \001(\t\"\211\002\n\020TideChartMessage\022\r\n\005ind" +
      "ex\030\001 \001(\003\022\021\n\ttimestamp\030\002 \001(\003\022\016\n\006origin\030\004 " +
      "\001(\003\022\020\n\010previous\030\005 \001(\003\022\016\n\006source\030\007 \001(\003\022\016\n" +
      "\006target\030\010 \001(\003\022\022\n\ndelayUntil\030\t \001(\003\022\021\n\thol" +
      "dToken\030\n \001(\003\022\023\n\013cancelToken\030\013 \001(\003\022\014\n\004typ" +
      "e\030\014 \001(\t\022\017\n\007version\030\r \001(\005\022\025\n\013jsonContent\030" +
      "\016 \001(\tH\000\022\024\n\nmsgContent\030\017 \001(\014H\000B\t\n\007content" +
      "\"\311\002\n\rTideChartData\022\017\n\007version\030\001 \001(\t\022\016\n\006b" +
      "ranch\030\002 \001(\t\022\016\n\006source\030\003 \001(\t\022\r\n\005merge\030\004 \001" +
      "(\t\022\022\n\ncommitDate\030\005 \001(\t\022\020\n\010commitBy\030\006 \001(\t" +
      "\022\022\n\ncommitDesc\030\007 \001(\t\022\023\n\013commitNotes\030\010 \001(" +
      "\t\022\037\n\006sheets\030\t \003(\0132\017.TideChartGraph\022!\n\005pr" +
      "ops\030\n \003(\0132\022.TideChartProperty\022\035\n\005notes\030\013" +
      " \003(\0132\016.TideChartNote\022\"\n\007library\030\014 \003(\0132\021." +
      "TideChartLibrary\022\"\n\006global\030\r \003(\0132\022.TideC" +
      "hartProperty\"\240\001\n\017TideChartHeader\022\017\n\007vers" +
      "ion\030\001 \001(\t\022\016\n\006branch\030\002 \001(\t\022\016\n\006source\030\003 \001(" +
      "\t\022\r\n\005merge\030\004 \001(\t\022\022\n\ncommitDate\030\005 \001(\t\022\020\n\010" +
      "commitBy\030\006 \001(\t\022\022\n\ncommitDesc\030\007 \001(\t\022\023\n\013co" +
      "mmitNotes\030\010 \001(\t\"\370\001\n\rTideChartFile\022\n\n\002id\030" +
      "\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\016\n\006ori" +
      "gin\030\004 \001(\t\022\024\n\014modifiedDate\030\005 \001(\t\022\022\n\nmodif" +
      "iedBy\030\006 \001(\t\022\035\n\005chart\030\007 \001(\0132\016.TideChartDa" +
      "ta\022\"\n\007working\030\010 \003(\0132\021.TideChartCommand\022!" +
      "\n\006remote\030\t \003(\0132\021.TideChartCommand\022\037\n\007his" +
      "tory\030\n \003(\0132\016.TideChartData\"w\n\023TideChartF" +
      "ileHeader\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004p" +
      "ath\030\003 \001(\t\022\016\n\006origin\030\004 \001(\t\022\024\n\014modifiedDat" +
      "e\030\005 \001(\t\022\022\n\nmodifiedBy\030\006 \001(\t\"\227\001\n\024TideChar" +
      "tFileCurrent\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014" +
      "\n\004path\030\003 \001(\t\022\016\n\006origin\030\004 \001(\t\022\024\n\014modified" +
      "Date\030\005 \001(\t\022\022\n\nmodifiedBy\030\006 \001(\t\022\035\n\005chart\030" +
      "\007 \001(\0132\016.TideChartDataB\013B\tTideChartb\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_TideChartProperty_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TideChartProperty_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartProperty_descriptor,
        new java.lang.String[] { "Name", "Type", "Value", "Props", });
    internal_static_TideChartCommentBox_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TideChartCommentBox_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartCommentBox_descriptor,
        new java.lang.String[] { "Id", "Region", "PosX", "PosY", "Width", "Height", "Text", "Image", "Icon", "FontSize", "FontStyle", "Alignment", "Color", "Background", "Border", "Raised", "Reversed", "Content", });
    internal_static_TideChartWidget_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TideChartWidget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartWidget_descriptor,
        new java.lang.String[] { "Id", "Type", "Title", "Region", "PosX", "PosY", "Width", "Height", "Link", "Port", "Node", "Props", "Target", });
    internal_static_TideChartPort_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_TideChartPort_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartPort_descriptor,
        new java.lang.String[] { "Type", "Name", "Ordinal", "Default", "Required", "Allowed", "Hint", "Constant", "Trigger", "Filter", "Event", "Sync", "Block", "Queue", });
    internal_static_TideChartLink_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_TideChartLink_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartLink_descriptor,
        new java.lang.String[] { "OutNode", "OutPort", "InNode", "InPort", "Group", "Delay", "Filter", "Logging", "Debugging", "Paused", "Disabled", });
    internal_static_TideChartNote_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_TideChartNote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartNote_descriptor,
        new java.lang.String[] { "Id", "ReplyTo", "ChangeTo", "Content", "CreatedBy", "CreatedDate", });
    internal_static_TideChartNode_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_TideChartNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartNode_descriptor,
        new java.lang.String[] { "Name", "Type", "PosX", "PosY", "Title", "Icon", "Library", "Method", "Delay", "Inports", "Outports", "Props", "Logging", "Debugging", "Paused", "Disabled", "Notes", "Script", });
    internal_static_TideChartRegion_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_TideChartRegion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartRegion_descriptor,
        new java.lang.String[] { "Name", "Title", "Nodes", "Group", "Scope", "Props", "Logging", "Debugging", "Paused", "Disabled", "Notes", "Script", });
    internal_static_TideChartGraph_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_TideChartGraph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartGraph_descriptor,
        new java.lang.String[] { "Id", "Type", "Name", "Title", "Version", "Source", "Nodes", "Links", "Regions", "Comments", "Widgets", "Props", "History", "Logging", "Debugging", "Paused", "Disabled", "Notes", "Script", });
    internal_static_TideChartCommand_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_TideChartCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartCommand_descriptor,
        new java.lang.String[] { "Version", "Target", "Group", "Move", "Comment", "Widget", "Port", "Link", "Node", "Region", "Graph", "Props", "Note", "Command", });
    internal_static_TideChartGroupCommand_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_TideChartGroupCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartGroupCommand_descriptor,
        new java.lang.String[] { "Cmds", });
    internal_static_TideChartMoveCommand_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_TideChartMoveCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartMoveCommand_descriptor,
        new java.lang.String[] { "Node", "FromPosX", "FromPosY", "ToPosX", "ToPosY", });
    internal_static_TideChartCommentBoxCommand_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_TideChartCommentBoxCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartCommentBoxCommand_descriptor,
        new java.lang.String[] { "FromComment", "ToComment", "Type", });
    internal_static_TideChartWidgetCommand_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_TideChartWidgetCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartWidgetCommand_descriptor,
        new java.lang.String[] { "FromWidget", "ToWidget", "Type", });
    internal_static_TideChartPortCommand_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_TideChartPortCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartPortCommand_descriptor,
        new java.lang.String[] { "FromPort", "ToPort", "Type", });
    internal_static_TideChartLinkCommand_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_TideChartLinkCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartLinkCommand_descriptor,
        new java.lang.String[] { "FromLink", "ToLink", "Type", });
    internal_static_TideChartNodeCommand_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_TideChartNodeCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartNodeCommand_descriptor,
        new java.lang.String[] { "FromNode", "ToNode", "Type", });
    internal_static_TideChartRegionCommand_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_TideChartRegionCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartRegionCommand_descriptor,
        new java.lang.String[] { "FromRegion", "ToRegion", "Type", });
    internal_static_TideChartGraphCommand_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_TideChartGraphCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartGraphCommand_descriptor,
        new java.lang.String[] { "FromGraph", "ToGraph", "Type", });
    internal_static_TideChartPropertyCommand_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_TideChartPropertyCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartPropertyCommand_descriptor,
        new java.lang.String[] { "FromProps", "ToProps", "Type", "Node", "Region", "Widget", "Graph", "Target", });
    internal_static_TideChartNoteCommand_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_TideChartNoteCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartNoteCommand_descriptor,
        new java.lang.String[] { "Notes", "Type", "Node", "Region", "Graph", "Target", });
    internal_static_TideChartMethod_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_TideChartMethod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartMethod_descriptor,
        new java.lang.String[] { "Id", "Name", "Extends", "Script", "Inports", "Outports", "Props", });
    internal_static_TideChartSource_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_TideChartSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartSource_descriptor,
        new java.lang.String[] { "Id", "Name", "Path", "CreatedDate", "CreatedBy", "Version", "Script", "Content", });
    internal_static_TideChartLibrary_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_TideChartLibrary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartLibrary_descriptor,
        new java.lang.String[] { "Id", "Name", "Title", "Origin", "Branch", "Path", "Files", "Methods", });
    internal_static_TideChartSite_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_TideChartSite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartSite_descriptor,
        new java.lang.String[] { "Index", "Stack", "Path", "Trigger", "Event", "Scope", "Filter", "Graph", "Region", "Node", "Port", });
    internal_static_TideChartMessage_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_TideChartMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartMessage_descriptor,
        new java.lang.String[] { "Index", "Timestamp", "Origin", "Previous", "Source", "Target", "DelayUntil", "HoldToken", "CancelToken", "Type", "Version", "JsonContent", "MsgContent", "Content", });
    internal_static_TideChartData_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_TideChartData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartData_descriptor,
        new java.lang.String[] { "Version", "Branch", "Source", "Merge", "CommitDate", "CommitBy", "CommitDesc", "CommitNotes", "Sheets", "Props", "Notes", "Library", "Global", });
    internal_static_TideChartHeader_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_TideChartHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartHeader_descriptor,
        new java.lang.String[] { "Version", "Branch", "Source", "Merge", "CommitDate", "CommitBy", "CommitDesc", "CommitNotes", });
    internal_static_TideChartFile_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_TideChartFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartFile_descriptor,
        new java.lang.String[] { "Id", "Name", "Path", "Origin", "ModifiedDate", "ModifiedBy", "Chart", "Working", "Remote", "History", });
    internal_static_TideChartFileHeader_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_TideChartFileHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartFileHeader_descriptor,
        new java.lang.String[] { "Id", "Name", "Path", "Origin", "ModifiedDate", "ModifiedBy", });
    internal_static_TideChartFileCurrent_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_TideChartFileCurrent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TideChartFileCurrent_descriptor,
        new java.lang.String[] { "Id", "Name", "Path", "Origin", "ModifiedDate", "ModifiedBy", "Chart", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
